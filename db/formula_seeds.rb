Formula.create( :base => '001', :offset => '001', :subindex => '0', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'a', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'b', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'c', :ord => '4', :iform => '{ 161.0.a }', :word_form => '{ drop }', :abbrev_form => '{ D }', :alpha => "D");
Formula.create( :base => '001', :offset => '001', :subindex => 'c', :ord => '1', :iform => '1.1', :word_form => '{"dot"}', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'd', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'e', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'f', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'g', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'h', :ord => '1', :iform => '1.1', :word_form => 'one', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '001', :offset => '001', :subindex => 'i', :ord => '1', :iform => 'Alt( 1.1.a )', :word_form => 'Alt( dash )', :abbrev_form => 'A( D )', :alpha => "DA");
Formula.create( :base => '001', :offset => '001', :subindex => 'j', :ord => '1', :iform => 'Alt( 1.1.a )', :word_form => 'Alt( bar )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '001', :offset => '002', :subindex => '0', :ord => '1', :iform => 'Stack( 1.1 )', :word_form => 'stack( one )', :abbrev_form => 'S( O )', :alpha => "SO-O");
Formula.create( :base => '001', :offset => '015', :subindex => '0', :ord => '1', :iform => '1.1.b / ( 69.1 [] 69.1.a ) / 1.1.b', :word_form => 'surface / ( Square [] swirl ) / ground', :abbrev_form => 'S / ( S [] S ) / G', :alpha => "SOSESOG");
Formula.create( :base => '001', :offset => '015', :subindex => '0', :ord => '3', :iform => '1.1.b / 76.1 / 1.1.b', :word_form => 'surface / sun / ground', :abbrev_form => 'S / S / G', :alpha => "SOSOG");
Formula.create( :base => '001', :offset => '015', :subindex => '0', :ord => '2', :iform => '1.2 /\ ( 69.1 [] 69.1.a )', :word_form => 'Two /\ ( Square [] swirl )', :abbrev_form => 'T /\ ( S [] S )', :alpha => "TO-USES");
Formula.create( :base => '001', :offset => '015', :subindex => '0', :ord => '4', :iform => '1.2 /\ 76.1', :word_form => 'Two /\ sun', :abbrev_form => 'T /\ S', :alpha => "TO-US");
Formula.create( :base => '001', :offset => '019', :subindex => '0', :ord => '1', :iform => '1.1 / 1.2', :word_form => 'One / two', :abbrev_form => 'O / T', :alpha => "O-OT");
Formula.create( :base => '001', :offset => '039', :subindex => '0', :ord => '1', :iform => '', :word_form => 'seven', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '001', :offset => '043', :subindex => '0', :ord => '1', :iform => '', :word_form => 'up', :abbrev_form => 'U', :alpha => "U");
Formula.create( :base => '001', :offset => '046', :subindex => '0', :ord => '3', :iform => '1.2 / 29.8', :word_form => 'Two / small', :abbrev_form => 'T / S', :alpha => "TOS");
Formula.create( :base => '001', :offset => '046', :subindex => '0', :ord => '2', :iform => '1.43 / 1.19', :word_form => 'Up / three', :abbrev_form => 'U / T', :alpha => "UOT");
Formula.create( :base => '001', :offset => '046', :subindex => '0', :ord => '1', :iform => '1.46', :word_form => '{"object-on-slab-dripping-blood"}', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '001', :offset => '046', :subindex => 'a', :ord => '1', :iform => 'Dis( 1.46)', :word_form => 'dis( revelation )', :abbrev_form => 'D( R )', :alpha => "DOR");
Formula.create( :base => '001', :offset => '068', :subindex => '0', :ord => '1', :iform => '', :word_form => 'down', :abbrev_form => 'D', :alpha => "D");
Formula.create( :base => '001', :offset => '070', :subindex => '0', :ord => '2', :iform => '', :word_form => 'ascending-bird', :abbrev_form => 'AB', :alpha => "AB");
Formula.create( :base => '001', :offset => '070', :subindex => '0', :ord => '1', :iform => '', :word_form => 'climbing-bird', :abbrev_form => 'CB', :alpha => "CB");
Formula.create( :base => '001', :offset => '070', :subindex => '0', :ord => '3', :iform => '', :word_form => 'rising-bird', :abbrev_form => 'RB', :alpha => "RB");
Formula.create( :base => '002', :offset => '001', :subindex => '0', :ord => '1', :iform => '2.1', :word_form => 'small-stream', :abbrev_form => 'SS', :alpha => "SS");
Formula.create( :base => '002', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.1**2', :word_form => 'small-stream**2', :abbrev_form => 'SS**2', :alpha => "DSS");
Formula.create( :base => '002', :offset => '003', :subindex => '0', :ord => '1', :iform => '2.1*2.2', :word_form => 'small-stream*small-stream**2', :abbrev_form => 'SS*DSS', :alpha => "TSS");
Formula.create( :base => '002', :offset => '003', :subindex => 'a', :ord => '1', :iform => ' ::( 135.0.a ):>2.3', :word_form => '::bend:>river', :abbrev_form => '::B:>R', :alpha => "ABOR");
Formula.create( :base => '002', :offset => '003', :subindex => 'a', :ord => '3', :iform => '135.0.a ( 2.3 )', :word_form => 'Bend( river )', :abbrev_form => 'B( R )', :alpha => "BOR");
Formula.create( :base => '002', :offset => '003', :subindex => 'b', :ord => '2', :iform => '( 90.0 )->( ::( 135.0.a ):>2.3 )', :word_form => 'fur->( ::bend:>river )', :abbrev_form => 'F->( ::B:>R )', :alpha => "FYABOR");
Formula.create( :base => '002', :offset => '003', :subindex => 'b', :ord => '1', :iform => '( 90.0.a )->( ::( 135.0.a ):>2.3 )', :word_form => 'hair->( ::bend:>river )', :abbrev_form => 'H->( ::B:>R )', :alpha => "HYABOR");
Formula.create( :base => '002', :offset => '021', :subindex => '0', :ord => '1', :iform => '2.1**3', :word_form => 'small-stream**3', :abbrev_form => 'SS**3', :alpha => "TSS");
Formula.create( :base => '002', :offset => '021', :subindex => 'a', :ord => '1', :iform => 'alt(2.21)', :word_form => 'alt(water)', :abbrev_form => 'alt(W)', :alpha => "WA");
Formula.create( :base => '002', :offset => '021', :subindex => 'a', :ord => '2', :iform => 'At-side(2.21)', :word_form => 'At-side(water)', :abbrev_form => 'AS(W)', :alpha => "ASW");
Formula.create( :base => '002', :offset => '021', :subindex => 'a', :ord => '3', :iform => 'At-side(2.21)', :word_form => 'At-side(water)', :abbrev_form => 'W |<-', :alpha => "ASW");
Formula.create( :base => '002', :offset => '021', :subindex => 'b', :ord => '1', :iform => 'alt(2.21)', :word_form => 'alt(water)', :abbrev_form => 'alt(W)', :alpha => "WA");
Formula.create( :base => '002', :offset => '021', :subindex => 'c', :ord => '1', :iform => 'alt(2.21)', :word_form => 'alt(water)', :abbrev_form => 'alt(W)', :alpha => "WA");
Formula.create( :base => '003', :offset => '000', :subindex => 'b', :ord => '1', :iform => '3.0.b', :word_form => 'abstract( "falling motion" )', :abbrev_form => 'A( FM )', :alpha => "AFM");
Formula.create( :base => '003', :offset => '000', :subindex => 'c', :ord => '1', :iform => '3.0.c', :word_form => 'abstract( "left direction" )', :abbrev_form => 'A( LD )', :alpha => "ALD");
Formula.create( :base => '003', :offset => '000', :subindex => 'd', :ord => '1', :iform => '3.0.d', :word_form => 'abstract( "right direction" )', :abbrev_form => 'A( RD )', :alpha => "ARD");
Formula.create( :base => '003', :offset => '001', :subindex => '0', :ord => '3', :iform => '::( 3.0.b ):( 3.0.c )', :word_form => '::fall:left', :abbrev_form => '::F:L', :alpha => "AFIL");
Formula.create( :base => '003', :offset => '001', :subindex => '0', :ord => '1', :iform => '3.1', :word_form => '{"Falling-line"}', :abbrev_form => 'FL', :alpha => "FL");
Formula.create( :base => '003', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'rev( 3.1)', :word_form => 'rev( falling-left )', :abbrev_form => 'R(FL)', :alpha => "RFL");
Formula.create( :base => '003', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'rev( 3.1)', :word_form => 'rev( Falling-right )', :abbrev_form => 'R(FL)', :alpha => "ROFL");
Formula.create( :base => '003', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Dis( 3.1.a )', :word_form => 'dis( Falling-right )', :abbrev_form => 'R( FR )', :alpha => "ROFR");
Formula.create( :base => '003', :offset => '002', :subindex => '0', :ord => '2', :iform => '3.1 + 3.0.a', :word_form => 'Falling-left + rev( falling-left)', :abbrev_form => 'FL + RFL', :alpha => "FLIRFL");
Formula.create( :base => '003', :offset => '002', :subindex => '0', :ord => '3', :iform => '3.1 + 3.0.a', :word_form => 'Falling-left + falling-right', :abbrev_form => 'FL + FR', :alpha => "FLIFR");
Formula.create( :base => '003', :offset => '002', :subindex => '0', :ord => '1', :iform => '3.2', :word_form => 'mow', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '003', :offset => '022', :subindex => '0', :ord => '1', :iform => '24.1 {}/ 3.2^2', :word_form => 'Cover {}/ mow^2', :abbrev_form => 'C [}/ M^2', :alpha => "CEOMUT");
Formula.create( :base => '003', :offset => '022', :subindex => 'a', :ord => '1', :iform => '3.22->114.1.0', :word_form => 'net->eye', :abbrev_form => 'N->E', :alpha => "NYE");
Formula.create( :base => '004', :offset => '000', :subindex => '0', :ord => '1', :iform => '4.0', :word_form => 'abstract( "strip" )', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '004', :offset => '000', :subindex => 'g', :ord => '1', :iform => '4.0.g', :word_form => 'abstract( "string" )', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '004', :offset => '001', :subindex => '0', :ord => '1', :iform => '4.1', :word_form => 'post', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '004', :offset => '001', :subindex => 'a', :ord => '1', :iform => '4.1', :word_form => 'post', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '004', :offset => '001', :subindex => 'b', :ord => '1', :iform => '4.1', :word_form => 'post', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '004', :offset => '001', :subindex => 'c', :ord => '1', :iform => '4.1', :word_form => 'post', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '004', :offset => '001', :subindex => 'd', :ord => '1', :iform => '4.1', :word_form => 'post', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '004', :offset => '001', :subindex => 'e', :ord => '1', :iform => '4.1', :word_form => '{"Tap-root"}', :abbrev_form => 'TR', :alpha => "TR");
Formula.create( :base => '004', :offset => '001', :subindex => 'f', :ord => '1', :iform => 'Alt( 4.1 )', :word_form => 'alt( post )', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '004', :offset => '001', :subindex => 'g', :ord => '2', :iform => '4.0.g->4.1', :word_form => 'string->post', :abbrev_form => 'S->P', :alpha => "SYP");
Formula.create( :base => '004', :offset => '001', :subindex => 'g', :ord => '1', :iform => '4.1', :word_form => 'post', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '005', :offset => '000', :subindex => '0', :ord => '1', :iform => '5.0', :word_form => 'abstract( "hook" ) ', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '005', :offset => '000', :subindex => 'a', :ord => '1', :iform => '5.0.a', :word_form => 'abstract( "barb" ) ', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '005', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 5.0 }', :word_form => '( Hook }', :abbrev_form => '{ H }', :alpha => "H");
Formula.create( :base => '005', :offset => '001', :subindex => '0', :ord => '2', :iform => '4.1:<.5.0.a', :word_form => 'post:<.barb', :abbrev_form => 'P:<.B', :alpha => "PIB");
Formula.create( :base => '006', :offset => '001', :subindex => '0', :ord => '1', :iform => '', :word_form => 'flame', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '006', :offset => '001', :subindex => 'a', :ord => '1', :iform => '', :word_form => 'lamp', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '006', :offset => '002', :subindex => '0', :ord => '1', :iform => '6.1 / 6.1.a', :word_form => 'Flame / lamp', :abbrev_form => 'F/L', :alpha => "FOL");
Formula.create( :base => '007', :offset => '001', :subindex => '0', :ord => '1', :iform => '7.1', :word_form => 'drag', :abbrev_form => 'D', :alpha => "D");
Formula.create( :base => '007', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'reverse( 7.1)', :word_form => 'reverse( drag )', :abbrev_form => 'R( D )', :alpha => "ROD");
Formula.create( :base => '007', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Flip( 7.1 )', :word_form => 'flip( drag )', :abbrev_form => 'F( D )', :alpha => "FOD");
Formula.create( :base => '008', :offset => '001', :subindex => '0', :ord => '1', :iform => '8.1', :word_form => 'swallow', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '008', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 8.1 )', :word_form => 'Alt( swallow ) ', :abbrev_form => 'A( S )', :alpha => "AOS");
Formula.create( :base => '008', :offset => '002', :subindex => '0', :ord => '2', :iform => '63.2/8.1', :word_form => 'cave/swallow', :abbrev_form => 'C/S', :alpha => "COS");
Formula.create( :base => '008', :offset => '002', :subindex => '0', :ord => '1', :iform => '', :word_form => 'roof/divide/swallow', :abbrev_form => 'R/D/S', :alpha => "RODOS");
Formula.create( :base => '009', :offset => '000', :subindex => 'a', :ord => '1', :iform => '9.0.a', :word_form => 'abstract( "fragile" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '009', :offset => '001', :subindex => '0', :ord => '1', :iform => '', :word_form => 'sprout-effort', :abbrev_form => 'SE', :alpha => "SE");
Formula.create( :base => '009', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'alt(9.1)', :word_form => 'alt( sprout-effort)', :abbrev_form => 'A( SE )', :alpha => "SE-A");
Formula.create( :base => '009', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'alt(9.1)', :word_form => 'alt( sprout-effort)', :abbrev_form => 'A( SE )', :alpha => "A-SE");
Formula.create( :base => '009', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'alt(9.1)', :word_form => 'alt( sprout-effort)', :abbrev_form => 'A( SE )', :alpha => "A-SE");
Formula.create( :base => '009', :offset => '001', :subindex => 'c', :ord => '1', :iform => 'alt(9.1)', :word_form => 'alt( sprout-effort)', :abbrev_form => 'A( SE )', :alpha => "A-SE");
Formula.create( :base => '009', :offset => '001', :subindex => 'd', :ord => '1', :iform => '173.0.b->9.1.a', :word_form => 'droopy->alt( sprout-effort)', :abbrev_form => 'D->A( SE )', :alpha => "DYASE");
Formula.create( :base => '009', :offset => '002', :subindex => '0', :ord => '1', :iform => '158.1*9.1', :word_form => 'vehicle * sprout-effort', :abbrev_form => 'V * SE', :alpha => "VA-SE");
Formula.create( :base => '009', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.1*9.1', :word_form => '( tree:->wood ) * sprout-effort', :abbrev_form => '( T:->W ) * SE', :alpha => "TYWA-SE");
Formula.create( :base => '009', :offset => '005', :subindex => '0', :ord => '1', :iform => '89.1*9.1', :word_form => 'side-hand * sprout-effort', :abbrev_form => 'SH*SE', :alpha => "SHA-SE");
Formula.create( :base => '010', :offset => '000', :subindex => '0', :ord => '1', :iform => '10.0', :word_form => 'abstract( person )', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '010', :offset => '000', :subindex => 'a', :ord => '1', :iform => '10.0.a', :word_form => 'abstract( hobble )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '010', :offset => '000', :subindex => 'b', :ord => '1', :iform => '10.0.b', :word_form => 'abstract( limp )', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '010', :offset => '001', :subindex => '0', :ord => '1', :iform => '10.1', :word_form => 'person', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '010', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'At-Side(10.1)', :word_form => 'At-side( person )', :abbrev_form => 'AS( P )', :alpha => "ASP");
Formula.create( :base => '010', :offset => '001', :subindex => 'a', :ord => '3', :iform => 'At-Side(10.1)', :word_form => 'At-side( person )', :abbrev_form => 'AS( P )', :alpha => "PAS");
Formula.create( :base => '010', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Side(10.1)', :word_form => 'side( person )', :abbrev_form => 'S( P )', :alpha => "SP");
Formula.create( :base => '010', :offset => '001', :subindex => 'b', :ord => '1', :iform => '10.1.b', :word_form => 'breath', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '010', :offset => '001', :subindex => 'c', :ord => '1', :iform => 'alt(10.1)', :word_form => 'alt(person)', :abbrev_form => 'alt(P)', :alpha => "PA");
Formula.create( :base => '010', :offset => '001', :subindex => 'd', :ord => '1', :iform => 'alt(10.1)', :word_form => 'alt(person)', :abbrev_form => 'alt(P)', :alpha => "PA");
Formula.create( :base => '010', :offset => '001', :subindex => 'd', :ord => '2', :iform => 'At-top(10.1)', :word_form => 'At-top( person)', :abbrev_form => 'AT(P)', :alpha => "PAT");
Formula.create( :base => '010', :offset => '001', :subindex => 'e', :ord => '1', :iform => 'alt(10.1)', :word_form => 'alt(person)', :abbrev_form => 'alt(P)', :alpha => "PA");
Formula.create( :base => '010', :offset => '001', :subindex => 'f', :ord => '1', :iform => 'alt(10.1)', :word_form => 'alt(person)', :abbrev_form => 'alt(P)', :alpha => "PA");
Formula.create( :base => '010', :offset => '001', :subindex => 'g', :ord => '1', :iform => '10.1->4.1', :word_form => 'person->post', :abbrev_form => 'P->P', :alpha => "PTOP");
Formula.create( :base => '010', :offset => '001', :subindex => 'g', :ord => '2', :iform => '10.1->4.1', :word_form => 'person->post', :abbrev_form => 'P->P', :alpha => "PYP");
Formula.create( :base => '010', :offset => '001', :subindex => 'h', :ord => '1', :iform => 'alt(10.1)', :word_form => 'alt(person)', :abbrev_form => 'alt(P)', :alpha => "PA");
Formula.create( :base => '010', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a*1.2', :word_form => 'Side-person * two', :abbrev_form => 'SP*T', :alpha => "SPAT");
Formula.create( :base => '010', :offset => '003', :subindex => '0', :ord => '3', :iform => '10.1.a /+ 3.1', :word_form => 'Side-person /+ 10', :abbrev_form => 'SP /+ T', :alpha => "SPOIT");
Formula.create( :base => '010', :offset => '003', :subindex => '0', :ord => '1', :iform => '10.1.a+3.1', :word_form => 'side-man + 10', :abbrev_form => 'SM+T', :alpha => "SMIT");
Formula.create( :base => '010', :offset => '003', :subindex => '0', :ord => '2', :iform => '10.1.a+3.1', :word_form => 'Side-person + 10', :abbrev_form => 'SP+T', :alpha => "SPIT");
Formula.create( :base => '010', :offset => '007', :subindex => '0', :ord => '1', :iform => '10.1*10.1', :word_form => 'Person * person', :abbrev_form => 'P * P', :alpha => "PAP");
Formula.create( :base => '010', :offset => '007', :subindex => '0', :ord => '2', :iform => '10.1^2', :word_form => 'Person^2', :abbrev_form => 'P^2', :alpha => "DP");
Formula.create( :base => '010', :offset => '007', :subindex => '0', :ord => '3', :iform => '10.1^2', :word_form => 'Person^2', :abbrev_form => 'P^2', :alpha => "PUT");
Formula.create( :base => '010', :offset => '024', :subindex => '0', :ord => '1', :iform => '10.1+7.1.a', :word_form => 'person + right-drag', :abbrev_form => 'P+ RD ', :alpha => "PIRD");
Formula.create( :base => '010', :offset => '029', :subindex => '0', :ord => '1', :iform => '10.1**3', :word_form => 'person **3', :abbrev_form => 'P**3', :alpha => "TP");
Formula.create( :base => '010', :offset => '031', :subindex => '0', :ord => '1', :iform => '10b.1/10.1', :word_form => 'breath/person', :abbrev_form => 'B/P', :alpha => "BOP");
Formula.create( :base => '010', :offset => '050', :subindex => '0', :ord => '1', :iform => 'Inv( 10.31 )', :word_form => 'inv( yawn )', :abbrev_form => 'I( Y )', :alpha => "IOY");
Formula.create( :base => '010', :offset => '050', :subindex => 'a', :ord => '1', :iform => 'Like( 10.50 )', :word_form => 'like( swallow )', :abbrev_form => 'L( S )', :alpha => "LOS");
Formula.create( :base => '010', :offset => '060', :subindex => '0', :ord => '1', :iform => '10.1 + 7.1.a', :word_form => 'person + right-drag', :abbrev_form => 'P+RD', :alpha => "PARD");
Formula.create( :base => '010', :offset => '060', :subindex => '1', :ord => '1', :iform => 'dis( 10.60)', :word_form => 'distort( pursue)', :abbrev_form => 'D( P )', :alpha => "DOP");
Formula.create( :base => '010', :offset => '060', :subindex => 'a', :ord => '1', :iform => 'dis( 10.60)', :word_form => 'distort( pursue)', :abbrev_form => 'D( P )', :alpha => "DOP");
Formula.create( :base => '010', :offset => '105', :subindex => '0', :ord => '2', :iform => '10.0.a | 10.0.b', :word_form => 'Hobble | limp', :abbrev_form => 'H | L', :alpha => "HOL");
Formula.create( :base => '010', :offset => '105', :subindex => '0', :ord => '1', :iform => '10.1 + 7.1.a', :word_form => 'person + right-drag', :abbrev_form => 'P + RD', :alpha => "PIRD");
Formula.create( :base => '010', :offset => '105', :subindex => '0', :ord => '3', :iform => '10.1 /+ 7..b', :word_form => 'Person /+ shackles', :abbrev_form => 'P /+ S', :alpha => "POIS");
Formula.create( :base => '010', :offset => '106', :subindex => '0', :ord => '1', :iform => '1.43/9.1/10.1**2', :word_form => 'up/sprout-effort/person**2', :abbrev_form => 'U/SE/P**2', :alpha => "UOSEOPUT");
Formula.create( :base => '010', :offset => '106', :subindex => '0', :ord => '2', :iform => '1.43/9.1/10.7', :word_form => 'up/sprout-effort/follow', :abbrev_form => 'U/SE/F', :alpha => "UOSEOF");
Formula.create( :base => '011', :offset => '000', :subindex => '0', :ord => '1', :iform => '11.0', :word_form => 'abstract( legs )', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '011', :offset => '000', :subindex => 'a', :ord => '1', :iform => '11.0.a', :word_form => 'abstract( leg )', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '011', :offset => '001', :subindex => '0', :ord => '2', :iform => '10.0:->11.0', :word_form => '( person:->legs )', :abbrev_form => '( P:->L )', :alpha => "PYL");
Formula.create( :base => '011', :offset => '001', :subindex => '0', :ord => '1', :iform => '11.1', :word_form => '{"human legs"}', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '011', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1/11.1', :word_form => 'mouth/legs', :abbrev_form => 'M/L', :alpha => "MOL");
Formula.create( :base => '011', :offset => '002', :subindex => '0', :ord => '2', :iform => '68.1/11.1', :word_form => 'opening/legs', :abbrev_form => 'O/L', :alpha => "OOL");
Formula.create( :base => '011', :offset => '013', :subindex => '0', :ord => '3', :iform => '1.2/11.1', :word_form => 'two/legs', :abbrev_form => 'T/L', :alpha => "TOL");
Formula.create( :base => '011', :offset => '013', :subindex => '0', :ord => '1', :iform => '1.43/11.1', :word_form => 'up/legs', :abbrev_form => 'U/L', :alpha => "UOL");
Formula.create( :base => '011', :offset => '023', :subindex => '0', :ord => '1', :iform => '76.2.a / 11.1', :word_form => 'head-to-white/legs', :abbrev_form => 'HTOW/L', :alpha => "HTOWOL");
Formula.create( :base => '011', :offset => '023', :subindex => '0', :ord => '2', :iform => '76.2.a / 11.1', :word_form => 'head-to-white/legs', :abbrev_form => 'HYW/L', :alpha => "HYWOL");
Formula.create( :base => '011', :offset => '027', :subindex => '0', :ord => '1', :iform => '58.3/11.1', :word_form => 'half-open-snake/legs', :abbrev_form => 'HOS/L', :alpha => "HOSOL");
Formula.create( :base => '011', :offset => '035', :subindex => '0', :ord => '2', :iform => '1a.1/11.1', :word_form => 'dash/legs', :abbrev_form => 'D/L', :alpha => "DOL");
Formula.create( :base => '011', :offset => '035', :subindex => '0', :ord => '1', :iform => '1a.1/11.1', :word_form => 'one/legs', :abbrev_form => 'O/L', :alpha => "OOL");
Formula.create( :base => '011', :offset => '036', :subindex => '0', :ord => '1', :iform => '66.56/11.1', :word_form => 'dot-z-sprout/legs', :abbrev_form => 'DZS/L', :alpha => "DZSOL");
Formula.create( :base => '011', :offset => '041', :subindex => '0', :ord => '1', :iform => '82.1a/11.1', :word_form => 'fire/legs', :abbrev_form => 'F/L', :alpha => "FOL");
Formula.create( :base => '012', :offset => '001', :subindex => '0', :ord => '3', :iform => 'inv(10.1)| 12a.1', :word_form => 'inv(person)|spoon', :abbrev_form => 'I( P )|S', :alpha => "IPOS");
Formula.create( :base => '012', :offset => '001', :subindex => '0', :ord => '4', :iform => 'inv(10.1)', :word_form => 'inv(person)', :abbrev_form => 'I( P )', :alpha => "IP");
Formula.create( :base => '012', :offset => '001', :subindex => '0', :ord => '5', :iform => 'rev(10.1)', :word_form => 'rev(person)', :abbrev_form => 'R( P )', :alpha => "ROP");
Formula.create( :base => '012', :offset => '001', :subindex => '0', :ord => '1', :iform => 'spin(10.1)', :word_form => 'spin(person)', :abbrev_form => 'spin(P)=P^-1?', :alpha => "SP");
Formula.create( :base => '012', :offset => '001', :subindex => 'a', :ord => '1', :iform => '12.1.a', :word_form => '{"spoon"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '012', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'alt( 12.1)', :word_form => 'alt( spinner)', :abbrev_form => 'A(S)', :alpha => "AS");
Formula.create( :base => '012', :offset => '001', :subindex => 'c', :ord => '1', :iform => '12.1.c', :word_form => '{"dagger"}', :abbrev_form => 'D', :alpha => "D");
Formula.create( :base => '012', :offset => '002', :subindex => '0', :ord => '1', :iform => '12.1**2', :word_form => 'spin**2', :abbrev_form => 'S**2', :alpha => "DS");
Formula.create( :base => '012', :offset => '002', :subindex => '0', :ord => '2', :iform => 'inv(10.1)**2', :word_form => 'inv(person)**2', :abbrev_form => 'inv(P)**2', :alpha => "DIP");
Formula.create( :base => '012', :offset => '022', :subindex => '0', :ord => '1', :iform => '40.1/12.1', :word_form => 'recliner/spin', :abbrev_form => 'R/S', :alpha => "ROS");
Formula.create( :base => '012', :offset => '022', :subindex => '0', :ord => '2', :iform => '40.1/12.1', :word_form => 'recliner/turned-around-person', :abbrev_form => 'R/TAP', :alpha => "ROTAP");
Formula.create( :base => '012', :offset => '026', :subindex => '0', :ord => '2', :iform => '12.1*148.12', :word_form => 'spin * (head->page)', :abbrev_form => 'S*(H->P)', :alpha => "SHTOP");
Formula.create( :base => '012', :offset => '026', :subindex => '0', :ord => '1', :iform => '12.1*148.12', :word_form => 'turned-around-person * (head->page)', :abbrev_form => 'TAP*(H->P)', :alpha => "TAPHTOP");
Formula.create( :base => '012', :offset => '029', :subindex => '0', :ord => '1', :iform => '12.1.a /68.57', :word_form => 'spoon / sweet', :abbrev_form => 'S/S', :alpha => "SOS");
Formula.create( :base => '012', :offset => '029', :subindex => '0', :ord => '2', :iform => '12.1.a /76.1', :word_form => 'spoon / say', :abbrev_form => 'S/S', :alpha => "SOS");
Formula.create( :base => '012', :offset => '033', :subindex => '0', :ord => '3', :iform => '( 138.1 /}{ 20.1.a)/ 1 2.1 ', :word_form => '( rice /}{ pit ) / spoon  ', :abbrev_form => '( R /}{ P )/S', :alpha => "RIOPOS");
Formula.create( :base => '012', :offset => '033', :subindex => '0', :ord => '2', :iform => '( 20.1.a {}\ 138.1 )/ 1 2.1 ', :word_form => '( pit {}\ rice ) / spoon  ', :abbrev_form => '( P {}\ R )/S', :alpha => "PEURIS");
Formula.create( :base => '012', :offset => '033', :subindex => '0', :ord => '1', :iform => '138.1 / 20.1.a / 12.1', :word_form => 'rice/pit/spoon', :abbrev_form => 'R/P/S', :alpha => "ROPOS");
Formula.create( :base => '012', :offset => '037', :subindex => '0', :ord => '1', :iform => '( 138.0.a :][ 141.0.a ) / 12.1', :word_form => '( Rice :][ pot ) / spoon', :abbrev_form => '( R :][ P ) / S', :alpha => "RIPOS");
Formula.create( :base => '012', :offset => '037', :subindex => '0', :ord => '3', :iform => '( 141.0.a :[] 138.0.a ) / 12.1', :word_form => '( pot :[] Rice  ) / spoon', :abbrev_form => '( P :[] R ) / S', :alpha => "PEROS");
Formula.create( :base => '012', :offset => '037', :subindex => '0', :ord => '5', :iform => '12.37.a / 12.1', :word_form => 'Rice-pot / spoon', :abbrev_form => 'RP / S', :alpha => "RPOS");
Formula.create( :base => '012', :offset => '037', :subindex => '0', :ord => '7', :iform => '12.37.a / 12.1', :word_form => 'Pot-of-rice / spoon', :abbrev_form => 'POR / S', :alpha => "POROS");
Formula.create( :base => '012', :offset => '037', :subindex => '0', :ord => '9', :iform => '76.1 / 12.1', :word_form => 'Sun / spoon', :abbrev_form => 'S / S', :alpha => "SOS");
Formula.create( :base => '012', :offset => '037', :subindex => 'a', :ord => '2', :iform => '138.0.a :][ 141.0.a', :word_form => 'Rice :][ pot', :abbrev_form => 'R :][ P', :alpha => "RIP");
Formula.create( :base => '012', :offset => '037', :subindex => 'a', :ord => '1', :iform => '141.0.a :[] 138.0.a', :word_form => 'pot :[] Rice', :abbrev_form => 'P :[] R', :alpha => "PER");
Formula.create( :base => '012', :offset => '038', :subindex => '0', :ord => '1', :iform => '10.1*12.1', :word_form => 'Person * turned-around-person', :abbrev_form => 'P * TAP', :alpha => "PATAP");
Formula.create( :base => '012', :offset => '038', :subindex => '0', :ord => '2', :iform => '10.1*12.1', :word_form => 'Person * spinner', :abbrev_form => 'P * S', :alpha => "PAS");
Formula.create( :base => '012', :offset => '038', :subindex => '0', :ord => '3', :iform => 'Opposed( 12.1 )', :word_form => 'Opposed( turned-around-person )', :abbrev_form => 'O( TAP )', :alpha => "O-OTAP");
Formula.create( :base => '012', :offset => '038', :subindex => '0', :ord => '4', :iform => 'Opposed( 12.1 )', :word_form => 'Opposed( spinner )', :abbrev_form => 'O( S )', :alpha => "O-OS");
Formula.create( :base => '012', :offset => '038', :subindex => '0', :ord => '5', :iform => 'Opposed( 12.1 )', :word_form => 'Opposed( turned-around-person )', :abbrev_form => 'O( TAP )', :alpha => "O-OTAP");
Formula.create( :base => '012', :offset => '038', :subindex => '0', :ord => '6', :iform => 'Opposed( 12.1 )', :word_form => 'Opposed( spinner )', :abbrev_form => 'O( S )', :alpha => "O-OS");
Formula.create( :base => '012', :offset => '038', :subindex => '0', :ord => '7', :iform => 'Opposed( 12.1 )', :word_form => 'Opposed( reverse( person ))', :abbrev_form => 'O( R( P ))', :alpha => "O-OROP");
Formula.create( :base => '012', :offset => '044', :subindex => '0', :ord => '1', :iform => '114.1*12.1', :word_form => 'eye*spinner', :abbrev_form => 'E*S', :alpha => "EAS");
Formula.create( :base => '012', :offset => '044', :subindex => '0', :ord => '3', :iform => '114.1.a *12.1', :word_form => 'eye-alt*spinner', :abbrev_form => 'EA*S', :alpha => "EA-AS");
Formula.create( :base => '012', :offset => '044', :subindex => '0', :ord => '2', :iform => 'alt(114.1)*12.1', :word_form => 'eye-alt*spinner', :abbrev_form => 'alt(E)*S', :alpha => "EA-AS");
Formula.create( :base => '012', :offset => '061', :subindex => '0', :ord => '1', :iform => '', :word_form => '', :abbrev_form => '', :alpha => "");
Formula.create( :base => '012', :offset => '074', :subindex => '0', :ord => '1', :iform => '44.1 / (( 138.0.a :][ 141.0.a ) / 12.1 )', :word_form => 'Gather / (( Rice :][ pot ) / spoon )', :abbrev_form => 'G / (( R :][ P ) / S )', :alpha => "GORIPOS");
Formula.create( :base => '012', :offset => '074', :subindex => '0', :ord => '2', :iform => '44.1 / (( 141.0.a :[] 138.0.a ) / 12.1 )', :word_form => 'Gather / (( pot :[] Rice  ) / spoon )', :abbrev_form => 'G / (( P :[] R ) / S )', :alpha => "GOPEROS");
Formula.create( :base => '012', :offset => '074', :subindex => '0', :ord => '3', :iform => '44.1 / ( 12.37.a / 12.1 )', :word_form => 'Gather / ( Rice-pot / spoon )', :abbrev_form => 'G / ( RP / S )', :alpha => "GORPOS");
Formula.create( :base => '012', :offset => '074', :subindex => '0', :ord => '4', :iform => '44.1 / ( 12.37.a / 12.1 )', :word_form => 'Gather / ( Pot-of-rice / spoon )', :abbrev_form => 'G / ( POR / S )', :alpha => "GOPOROS");
Formula.create( :base => '012', :offset => '074', :subindex => '0', :ord => '5', :iform => '44.1 / ( 76.1 / 12.1 )', :word_form => 'Gather / ( Sun / spoon )', :abbrev_form => 'G / ( S / S )', :alpha => "GOSOS");
Formula.create( :base => '013', :offset => '001', :subindex => '0', :ord => '1', :iform => 'flip(10.1)', :word_form => 'flip(person)', :abbrev_form => 'flip(P)', :alpha => "FOP");
Formula.create( :base => '013', :offset => '001', :subindex => '0', :ord => '3', :iform => 'inv(10.1)', :word_form => 'inv(person)', :abbrev_form => 'inv(P)', :alpha => "IP");
Formula.create( :base => '013', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a*13.1', :word_form => 'side-man*flip', :abbrev_form => 'SM*F', :alpha => "SMF");
Formula.create( :base => '013', :offset => '002', :subindex => '0', :ord => '2', :iform => '10.1.a*13.1', :word_form => 'side-man*upside-down-person', :abbrev_form => 'SM*USDP', :alpha => "SMUSDP");
Formula.create( :base => '013', :offset => '006', :subindex => '0', :ord => '2', :iform => '90.1/10.1/13.1', :word_form => 'fur/person/flip', :abbrev_form => 'F/P/F', :alpha => "FOPOF");
Formula.create( :base => '013', :offset => '006', :subindex => '0', :ord => '1', :iform => '90.1.a /10.1.c/13.1', :word_form => 'fur-alt/person-alt/flip', :abbrev_form => 'FA/PA/F', :alpha => "FAOPAOF");
Formula.create( :base => '014', :offset => '000', :subindex => 'b', :ord => '1', :iform => '14.0.b', :word_form => 'abstract( "again" )', :abbrev_form => 'A( A )', :alpha => "AA");
Formula.create( :base => '014', :offset => '000', :subindex => 'c', :ord => '1', :iform => '14.0.c', :word_form => 'abstract( "inch" )', :abbrev_form => 'A( I )', :alpha => "AI");
Formula.create( :base => '014', :offset => '001', :subindex => '0', :ord => '3', :iform => '14.1', :word_form => 'Right-hand', :abbrev_form => 'RH', :alpha => "RH");
Formula.create( :base => '014', :offset => '001', :subindex => '0', :ord => '4', :iform => '89.0->14.0.b', :word_form => 'hand->again', :abbrev_form => 'H->A', :alpha => "HYA");
Formula.create( :base => '014', :offset => '001', :subindex => '0', :ord => '1', :iform => 'alt(89.1)', :word_form => 'alt( hand )', :abbrev_form => 'alt(H)', :alpha => "HA");
Formula.create( :base => '014', :offset => '001', :subindex => '0', :ord => '2', :iform => 'alt(89.1)', :word_form => 'alt(hand)', :abbrev_form => 'alt(H)', :alpha => "HA");
Formula.create( :base => '014', :offset => '001', :subindex => 'a', :ord => '1', :iform => '14.1->15.1', :word_form => 'right-hand->left-hand', :abbrev_form => 'RH->LH', :alpha => "RHTOLH");
Formula.create( :base => '014', :offset => '001', :subindex => 'a', :ord => '2', :iform => '14.1->15.1', :word_form => 'right-hand->left-hand', :abbrev_form => 'RH->LH', :alpha => "RHYLH");
Formula.create( :base => '014', :offset => '001', :subindex => 'a', :ord => '3', :iform => '14.1->15.1', :word_form => 'right-hand->left-hand', :abbrev_form => 'RH->LH', :alpha => "RYL");
Formula.create( :base => '014', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'alt(14.1)', :word_form => 'alt(right-hand)', :abbrev_form => 'alt(RH)', :alpha => "ARH");
Formula.create( :base => '014', :offset => '001', :subindex => 'c', :ord => '1', :iform => 'dis(14.1)', :word_form => 'dis(right-hand)', :abbrev_form => 'dis(RH)', :alpha => "DRH");
Formula.create( :base => '014', :offset => '001', :subindex => 'd', :ord => '1', :iform => 'pic("stitch")->14.1', :word_form => '{"stitch"}->hand-again', :abbrev_form => 'P(S)->HA', :alpha => "POSTOHA");
Formula.create( :base => '014', :offset => '001', :subindex => 'e', :ord => '1', :iform => 'dis(14.1)', :word_form => 'dis( right-hand )', :abbrev_form => 'dis(RH)', :alpha => "DRH");
Formula.create( :base => '014', :offset => '001', :subindex => 'f', :ord => '1', :iform => 'dis(14.1)', :word_form => 'dis( right-hand )', :abbrev_form => 'dis(RH)', :alpha => "DRH");
Formula.create( :base => '014', :offset => '002', :subindex => '0', :ord => '1', :iform => '(14.1->15.1)/14.1', :word_form => '(right-hand->left-hand)/hand-again', :abbrev_form => 'RH->LH)/HA', :alpha => "RHTOLHOHA");
Formula.create( :base => '014', :offset => '002', :subindex => '0', :ord => '2', :iform => '14.1.a/14.1', :word_form => 'right-hand-to-left-hand/hand-again', :abbrev_form => 'RHTOLH/HA', :alpha => "RHTOLHOHA");
Formula.create( :base => '014', :offset => '002', :subindex => '0', :ord => '4', :iform => '15.1/14.1', :word_form => 'left-hand/right-hand', :abbrev_form => 'LH/RH', :alpha => "LHORH");
Formula.create( :base => '014', :offset => '002', :subindex => '0', :ord => '3', :iform => 'spin(14.1)/14.1', :word_form => 'spin(right-hand)/hand-again', :abbrev_form => 'spin(RH)/HA', :alpha => "SRHOHA");
Formula.create( :base => '014', :offset => '003', :subindex => '0', :ord => '1', :iform => '177.1*14.1', :word_form => 'horse*hand-again', :abbrev_form => 'H*HA', :alpha => "HHA");
Formula.create( :base => '014', :offset => '004', :subindex => '0', :ord => '1', :iform => '', :word_form => '(right-hand->left-hand)*alt(sprout-effort)', :abbrev_form => 'RH->LH)*alt(SE)', :alpha => "RHTOLHSEA");
Formula.create( :base => '014', :offset => '004', :subindex => '0', :ord => '2', :iform => '', :word_form => '(right-hand->left-hand)*alt(sprout-effort)', :abbrev_form => 'RH->LH)*alt(SE)', :alpha => "RHTOLHASE");
Formula.create( :base => '014', :offset => '004', :subindex => '0', :ord => '4', :iform => '', :word_form => 'right-hand--to-left-hand*alt-sprout-effort', :abbrev_form => 'RHTOLH*ASE', :alpha => "RHTOLHASE");
Formula.create( :base => '014', :offset => '004', :subindex => '0', :ord => '3', :iform => '', :word_form => 'right-hand--to-left-hand*sprout-effort-alt', :abbrev_form => 'RHTOLH*SEA', :alpha => "RHTOLHSEA");
Formula.create( :base => '014', :offset => '007', :subindex => '0', :ord => '1', :iform => '14.1/(14.1**2)/77.1', :word_form => 'hand-again/(hand-again**2)/wood-tree', :abbrev_form => 'HA/(HA**2)/WT', :alpha => "HAODHAOWT");
Formula.create( :base => '014', :offset => '007', :subindex => '0', :ord => '2', :iform => '14.1**3 / 77.1', :word_form => 'hand-again**3/wood-tree', :abbrev_form => 'HA**3)/WT', :alpha => "THAOWT");
Formula.create( :base => '014', :offset => '007', :subindex => '0', :ord => '3', :iform => '14.7.a / 77.1', :word_form => 'triple-hand-again/wood-tree', :abbrev_form => 'THA/WT', :alpha => "THAOWT");
Formula.create( :base => '014', :offset => '007', :subindex => 'a', :ord => '1', :iform => '14.1/(14.1**2)', :word_form => 'hand-again/(hand-again**2)', :abbrev_form => 'HA/(HA**2)', :alpha => "HAODHA");
Formula.create( :base => '014', :offset => '007', :subindex => 'a', :ord => '2', :iform => '14.1**3', :word_form => 'hand-again**3', :abbrev_form => 'HA**3', :alpha => "THA");
Formula.create( :base => '014', :offset => '009', :subindex => '0', :ord => '2', :iform => 'stack( 14.1**2)', :word_form => 'stack( hand-again**2))', :abbrev_form => 'S(HA**2)', :alpha => "SODHA");
Formula.create( :base => '014', :offset => '009', :subindex => '0', :ord => '1', :iform => 'Stack( 14.1.a**2 )', :word_form => 'stack( stitch**2))', :abbrev_form => 'S(S**2)', :alpha => "SODS");
Formula.create( :base => '014', :offset => '014', :subindex => '0', :ord => '1', :iform => '14.1.b + 4.1.a', :word_form => 'grab + pen', :abbrev_form => 'G+P', :alpha => "GIP");
Formula.create( :base => '014', :offset => '014', :subindex => '0', :ord => '2', :iform => '14.1.b + 4.1.d', :word_form => 'grab + stick', :abbrev_form => 'G+S', :alpha => "GIS");
Formula.create( :base => '014', :offset => '015', :subindex => '0', :ord => '1', :iform => '14.14 + 1.1.a', :word_form => 'Grab-a-pen + dash', :abbrev_form => 'GAP + D', :alpha => "GAPID");
Formula.create( :base => '014', :offset => '031', :subindex => '0', :ord => '1', :iform => '15.39 {} 50.1', :word_form => 'folded-hands {} pestle-shield', :abbrev_form => 'FH {} POS', :alpha => "FHEPOS");
Formula.create( :base => '014', :offset => '031', :subindex => '0', :ord => '2', :iform => '15.39.a {} 50.1.a', :word_form => 'folded-hands-like {} pestle-shield-like', :abbrev_form => 'FHL{}PSL', :alpha => "FHLEDOPS");
Formula.create( :base => '014', :offset => '038', :subindex => '0', :ord => '1', :iform => '14.1.b + 3.1', :word_form => 'grab + fall', :abbrev_form => 'G+F', :alpha => "GIF");
Formula.create( :base => '014', :offset => '045', :subindex => '0', :ord => '2', :iform => '( 14.1.b + 66.1 ) / 54.1', :word_form => '( grab + sprout ) / woman', :abbrev_form => '(G+S) / W', :alpha => "GISOW");
Formula.create( :base => '014', :offset => '045', :subindex => '0', :ord => '1', :iform => '( 66.1 + 14.1.b ) / 54.1', :word_form => '( sprout + grab ) / woman', :abbrev_form => '(S+G) / W', :alpha => "SIGOW");
Formula.create( :base => '014', :offset => '045', :subindex => '0', :ord => '5', :iform => '14.45.a / 54.1', :word_form => 'grab-a-sprout / woman', :abbrev_form => 'GAS / W', :alpha => "GASOW");
Formula.create( :base => '014', :offset => '045', :subindex => '0', :ord => '3', :iform => '54.1 \ ( 66.1 + 14.1.b )', :word_form => 'Woman \ ( sprout + grab )', :abbrev_form => 'W \ (S+G)', :alpha => "WUSIG");
Formula.create( :base => '014', :offset => '045', :subindex => '0', :ord => '4', :iform => '54.1 \ ( 14.1.b + 66.1 )', :word_form => 'Woman \ ( grab + sprout )', :abbrev_form => 'W \ (G+S)', :alpha => "WUGIS");
Formula.create( :base => '014', :offset => '045', :subindex => '0', :ord => '6', :iform => '54.1 \ 14.45.a', :word_form => 'Woman \ grab-a-sprout', :abbrev_form => 'W \ GAS', :alpha => "WUGAS");
Formula.create( :base => '014', :offset => '045', :subindex => 'a', :ord => '1', :iform => '14.1.b + like( 66.1 )', :word_form => 'grab + like( sprout )', :abbrev_form => 'G + L( S )', :alpha => "GILS");
Formula.create( :base => '014', :offset => '049', :subindex => '0', :ord => '1', :iform => '14.1.b / stack(53.1)', :word_form => 'grab / stack(cloth)', :abbrev_form => 'G/S(C)', :alpha => "GOSOC");
Formula.create( :base => '014', :offset => '049', :subindex => '0', :ord => '2', :iform => '14.1.b / 23.1 / 53.1', :word_form => 'grab / space/ cloth ', :abbrev_form => 'G/S/C', :alpha => "GOSOC");
Formula.create( :base => '014', :offset => '055', :subindex => '0', :ord => '1', :iform => '14.1.b + 4.1.c', :word_form => 'grab + line', :abbrev_form => 'G+L', :alpha => "GIL");
Formula.create( :base => '014', :offset => '061', :subindex => '0', :ord => '1', :iform => '14.1 / 70.1', :word_form => 'hand-again / earth', :abbrev_form => 'HA/E', :alpha => "HAOE");
Formula.create( :base => '014', :offset => '063', :subindex => '0', :ord => '2', :iform => '( 89.0 ):->( 14.0.c )', :word_form => 'hand:->inch', :abbrev_form => 'H:->I', :alpha => "HYI");
Formula.create( :base => '014', :offset => '063', :subindex => '0', :ord => '1', :iform => '1.1.c * 14.1.c', :word_form => 'dot * right-hand-alt', :abbrev_form => 'D*RHA', :alpha => "DRHA");
Formula.create( :base => '014', :offset => '080', :subindex => '0', :ord => '1', :iform => '4.1.d + 14.1', :word_form => 'stick + hand-again', :abbrev_form => 'S+JA', :alpha => "SIHA");
Formula.create( :base => '014', :offset => '082', :subindex => '0', :ord => '1', :iform => '14.1[ 1.1.c ]', :word_form => 'hand-again [ dot ]', :abbrev_form => 'HA[D]', :alpha => "HAED");
Formula.create( :base => '014', :offset => '089', :subindex => '0', :ord => '1', :iform => '10.1 + 14.1', :word_form => 'person + hand-again', :abbrev_form => 'P+HA', :alpha => "PIHA");
Formula.create( :base => '014', :offset => '096', :subindex => '0', :ord => '1', :iform => '122.0.a / 14.1', :word_form => 'animal-skin / hand-again', :abbrev_form => 'AS / HA', :alpha => "ASOHA");
Formula.create( :base => '015', :offset => '000', :subindex => 'c', :ord => '1', :iform => '15.0.c', :word_form => 'abstract( "join" )', :abbrev_form => 'A( J )', :alpha => "AJ");
Formula.create( :base => '015', :offset => '001', :subindex => '0', :ord => '1', :iform => '15.1', :word_form => '{"left hand"}', :abbrev_form => 'LH', :alpha => "LH");
Formula.create( :base => '015', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 15.1 )', :word_form => 'alt(left-hand)', :abbrev_form => 'alt(LH)', :alpha => "LHA");
Formula.create( :base => '015', :offset => '002', :subindex => '0', :ord => '1', :iform => '15.1 / 5.1.1 ', :word_form => 'left-hand/work', :abbrev_form => 'LH/W', :alpha => "LHOW");
Formula.create( :base => '015', :offset => '014', :subindex => '0', :ord => '1', :iform => '14.1.a / 19.1.a', :word_form => 'right-hand-to-left-hand/elbow', :abbrev_form => 'RHTOLH/BE', :alpha => "RHTOLHOBE");
Formula.create( :base => '015', :offset => '014', :subindex => 'a', :ord => '1', :iform => 'Alt( 15.14 )', :word_form => 'alt( forearm )', :abbrev_form => 'alt( FA)', :alpha => "AFA");
Formula.create( :base => '015', :offset => '018', :subindex => '0', :ord => '1', :iform => '14.1.a / 132.1', :word_form => 'right-hand-to-left-hand/meat', :abbrev_form => 'RHTOLH/M', :alpha => "RHTOLHOM");
Formula.create( :base => '015', :offset => '023', :subindex => '0', :ord => '1', :iform => '14.1.a / 68.1', :word_form => 'right-hand-to-left-hand/mouth', :abbrev_form => 'RHTOLH/M', :alpha => "RHTOLHOM");
Formula.create( :base => '015', :offset => '023', :subindex => '0', :ord => '2', :iform => '3.0.b', :word_form => 'right-hand-to-left-hand/opening', :abbrev_form => 'RHTOLH/O', :alpha => "RHTOLHOO");
Formula.create( :base => '015', :offset => '030', :subindex => '0', :ord => '2', :iform => '112.1 / 15.1.a', :word_form => 'seedling / left-hand-alt', :abbrev_form => 'S / LHA ', :alpha => "SOLHA");
Formula.create( :base => '015', :offset => '030', :subindex => '0', :ord => '1', :iform => '112.1.a / 15.1', :word_form => 'cup / left-hand', :abbrev_form => 'C / LH', :alpha => "COLH");
Formula.create( :base => '015', :offset => '039', :subindex => '0', :ord => '1', :iform => '15.1 + 14.1', :word_form => 'left-hand * right-hand', :abbrev_form => 'LH + RH', :alpha => "LHIRH");
Formula.create( :base => '015', :offset => '039', :subindex => '0', :ord => '2', :iform => '15.1::15.0.c:>14.1', :word_form => 'Left::join:> right', :abbrev_form => 'L::J:>R', :alpha => "LAJOR");
Formula.create( :base => '015', :offset => '039', :subindex => 'a', :ord => '1', :iform => 'Dis( 15.39 )', :word_form => 'dis( folded-hands )', :abbrev_form => 'dis(FH)', :alpha => "DFH");
Formula.create( :base => '015', :offset => '039', :subindex => 'b', :ord => '1', :iform => 'Dis( 15.39 )', :word_form => 'dis( folded-hands )', :abbrev_form => 'dis(FH)', :alpha => "DFH");
Formula.create( :base => '015', :offset => '065', :subindex => '0', :ord => '1', :iform => '15.65', :word_form => '{ "two hands lowered" }', :abbrev_form => 'HAS', :alpha => "HAS");
Formula.create( :base => '015', :offset => '065', :subindex => '0', :ord => '2', :iform => 'flip( 15.39 )', :word_form => 'flip( Left::join:> right )', :abbrev_form => 'F( LAJOR )', :alpha => "FOLAJOR");
Formula.create( :base => '015', :offset => '065', :subindex => 'a', :ord => '1', :iform => 'Flip( 15.1 )', :word_form => 'flip( left )', :abbrev_form => 'F( L )', :alpha => "FOL");
Formula.create( :base => '015', :offset => '065', :subindex => 'b', :ord => '1', :iform => 'Flip( 14.1 )', :word_form => 'flip( right )', :abbrev_form => 'F( R )', :alpha => "FOR");
Formula.create( :base => '016', :offset => '001', :subindex => '0', :ord => '1', :iform => '16.1', :word_form => '{"budding flower"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '016', :offset => '002', :subindex => '0', :ord => '1', :iform => '91.1.a * 16.1', :word_form => 'side-dog * bud', :abbrev_form => 'SD*B', :alpha => "SDB");
Formula.create( :base => '016', :offset => '003', :subindex => '0', :ord => '1', :iform => '2.21.a * 16.1', :word_form => 'side-water * bud', :abbrev_form => 'SW*B', :alpha => "SWB");
Formula.create( :base => '017', :offset => '000', :subindex => '0', :ord => '1', :iform => '17.0', :word_form => 'abstract( "vine" ) ', :abbrev_form => 'A( V )', :alpha => "AV");
Formula.create( :base => '017', :offset => '000', :subindex => 'a', :ord => '1', :iform => '17.0.a', :word_form => 'abstract( "tangled" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '017', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 17.0 ):( 17.0.a )', :word_form => 'vine:tangled', :abbrev_form => 'V:T', :alpha => "VIT");
Formula.create( :base => '017', :offset => '001', :subindex => '0', :ord => '1', :iform => '17.1', :word_form => '{"intertwined-vines"}', :abbrev_form => 'IV', :alpha => "IV");
Formula.create( :base => '017', :offset => '001', :subindex => '0', :ord => '2', :iform => '17.1', :word_form => '{"intertwined-vines"}', :abbrev_form => 'TV', :alpha => "TV");
Formula.create( :base => '017', :offset => '001', :subindex => '0', :ord => '3', :iform => '17.1', :word_form => '{"intertwined-vines"}', :abbrev_form => 'EV', :alpha => "EV");
Formula.create( :base => '017', :offset => '002', :subindex => '0', :ord => '1', :iform => '153.1 * 17.1', :word_form => 'silk-thread * intertwined-vines', :abbrev_form => 'ST*IV', :alpha => "STAIV");
Formula.create( :base => '017', :offset => '002', :subindex => '0', :ord => '2', :iform => '153.1 * 17.1', :word_form => 'silk-thread * entangled-vines', :abbrev_form => 'ST*EV', :alpha => "STAEV");
Formula.create( :base => '017', :offset => '003', :subindex => '0', :ord => '1', :iform => '88.58 * 17.1', :word_form => '((bent-over|die-young)/stop)*intertwined-vines', :abbrev_form => '((BO|DY)/S) * IV', :alpha => "BODYOSAIV");
Formula.create( :base => '017', :offset => '003', :subindex => '0', :ord => '2', :iform => '88.58 * 17.1', :word_form => '((bent-over|die-young)/stop)*entangled-vines', :abbrev_form => '((BO|DY)/S) * EV', :alpha => "BODYOSAEV");
Formula.create( :base => '017', :offset => '003', :subindex => '0', :ord => '3', :iform => '88.58 * 17.1', :word_form => 'walk*intertwined-vines', :abbrev_form => 'W * IV', :alpha => "WIV");
Formula.create( :base => '017', :offset => '003', :subindex => '0', :ord => '4', :iform => '88.58 * 17.1', :word_form => 'walk*entangled-vines', :abbrev_form => 'W * EV', :alpha => "WEV");
Formula.create( :base => '017', :offset => '004', :subindex => '0', :ord => '2', :iform => '68.1*17.1', :word_form => 'mouth*entangled-vines', :abbrev_form => 'M*EV', :alpha => "MEV");
Formula.create( :base => '017', :offset => '004', :subindex => '0', :ord => '1', :iform => '68.1*17.1', :word_form => 'mouth*intertwined-vines', :abbrev_form => 'M*IV', :alpha => "MIV");
Formula.create( :base => '017', :offset => '004', :subindex => '0', :ord => '4', :iform => '68.1*17.1', :word_form => 'opening*entangled-vines', :abbrev_form => 'O*EV', :alpha => "OEV");
Formula.create( :base => '017', :offset => '004', :subindex => '0', :ord => '3', :iform => '68.1*17.1', :word_form => 'opening*intertwined-vines', :abbrev_form => 'O*IV', :alpha => "OIV");
Formula.create( :base => '017', :offset => '005', :subindex => '0', :ord => '3', :iform => '17.1*26.2', :word_form => 'entangled-vines * tap', :abbrev_form => 'EV*T', :alpha => "EVT");
Formula.create( :base => '017', :offset => '005', :subindex => '0', :ord => '1', :iform => '17.1*26.2', :word_form => 'intertwined-vines * tap', :abbrev_form => 'IV*T', :alpha => "IVT");
Formula.create( :base => '018', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 10.1.a ):( 0.xxx )', :word_form => 'side-person:bent', :abbrev_form => 'SP:B', :alpha => "SPIB");
Formula.create( :base => '018', :offset => '001', :subindex => '0', :ord => '3', :iform => '10.1.d', :word_form => 'At-top( person )', :abbrev_form => 'AT( P )', :alpha => "PAT");
Formula.create( :base => '018', :offset => '001', :subindex => '0', :ord => '1', :iform => 'Bent( 10.1.a )', :word_form => 'bent( side-person )', :abbrev_form => 'B(SP)', :alpha => "BSP");
Formula.create( :base => '018', :offset => '002', :subindex => '0', :ord => '1', :iform => '18.1/ 58.1 ', :word_form => 'wrap-around-person / (snake|fetus)', :abbrev_form => 'WAP/(S|F)', :alpha => "WAPOSOF");
Formula.create( :base => '018', :offset => '014', :subindex => '0', :ord => '1', :iform => '18.1 / 1.2', :word_form => 'wrap-around-person / two', :abbrev_form => 'WAP/T', :alpha => "WAPOT");
Formula.create( :base => '018', :offset => '017', :subindex => '0', :ord => '1', :iform => '18.1 / 76.1', :word_form => 'wrap-around-person / sun', :abbrev_form => 'WAP/S', :alpha => "WAPOS");
Formula.create( :base => '018', :offset => '022', :subindex => '0', :ord => '1', :iform => '18.1 / 138.1', :word_form => 'wrap-around-person / rice', :abbrev_form => 'WAP/R', :alpha => "WAPOR");
Formula.create( :base => '018', :offset => '026', :subindex => '0', :ord => '1', :iform => '17.1 [*] 68.1', :word_form => 'Entangled-vines [*] mouth', :abbrev_form => 'EV [*] M', :alpha => "EVEM");
Formula.create( :base => '018', :offset => '026', :subindex => '0', :ord => '2', :iform => '18.1 [*] 68.1', :word_form => 'Wrap-around-person [*] mouth', :abbrev_form => 'WAP [*] M', :alpha => "WAPEM");
Formula.create( :base => '018', :offset => '036', :subindex => 's', :ord => '1', :iform => '( 17.0 ):( 17.0.a ) {}/ ( 68.1->19.1 )', :word_form => 'vine:tangled {}/ ( mouth->cocoon )', :abbrev_form => 'V:T {}/ ( M->C )', :alpha => "VITEOMYC");
Formula.create( :base => '018', :offset => '036', :subindex => 's', :ord => '2', :iform => '( 68.1->19.1 ) \* ( 17.0 ):( 17.0.a )', :word_form => '( mouth->cocoon ) \* vine:tangled', :abbrev_form => '( M->C ) \* V:T', :alpha => "MYCUAVIT");
Formula.create( :base => '019', :offset => '000', :subindex => '0', :ord => '1', :iform => '19.0', :word_form => 'abstract( "cocoon" )', :abbrev_form => 'A( C )', :alpha => "C");
Formula.create( :base => '019', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 19.0 }', :word_form => '{ cocoon }', :abbrev_form => '{ C }', :alpha => "C");
Formula.create( :base => '019', :offset => '001', :subindex => '0', :ord => '2', :iform => '19.1', :word_form => '{ "cocoon" }', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '019', :offset => '001', :subindex => '0', :ord => '3', :iform => '19.1', :word_form => '{ "cocoon" }', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '019', :offset => '001', :subindex => 'a', :ord => '1', :iform => '19.1.a', :word_form => '{ "bent elbow" }', :abbrev_form => 'BE', :alpha => "BE");
Formula.create( :base => '019', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'like( 19.1)', :word_form => 'like( cocoon )', :abbrev_form => 'like( C)', :alpha => "CL");
Formula.create( :base => '019', :offset => '001', :subindex => 'c', :ord => '1', :iform => '58.3->19.1', :word_form => 'Half-open-snake->cocoon', :abbrev_form => 'HOS->C', :alpha => "HOSYC");
Formula.create( :base => '019', :offset => '001', :subindex => 'd', :ord => '1', :iform => '81.0->19.1', :word_form => 'vapor->cocoon', :abbrev_form => 'V->C', :alpha => "VYC");
Formula.create( :base => '019', :offset => '002', :subindex => '0', :ord => '1', :iform => '29.1 / 19.1', :word_form => 'divide / cocoon', :abbrev_form => 'D / C', :alpha => "DOC");
Formula.create( :base => '019', :offset => '011', :subindex => '0', :ord => '1', :iform => '108.1 * 19.1', :word_form => 'grain * cocoon', :abbrev_form => 'G * C', :alpha => "GC");
Formula.create( :base => '020', :offset => '000', :subindex => '0', :ord => '1', :iform => '20.0', :word_form => 'abstract( pit )', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '020', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 68.0 ):( 68.0.a ) | 20.0', :word_form => 'Mouth:open | pit', :abbrev_form => 'M:O | P', :alpha => "MIO-OP");
Formula.create( :base => '020', :offset => '001', :subindex => '0', :ord => '1', :iform => '20.1', :word_form => '{"open mouth or pit"}', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '020', :offset => '002', :subindex => '0', :ord => '1', :iform => '70.1 / 20.1', :word_form => 'earth / pit', :abbrev_form => 'E / P', :alpha => "EOP");
Formula.create( :base => '020', :offset => '002', :subindex => '0', :ord => '2', :iform => '70.1  ].[ 20.1', :word_form => 'earth ].[ pit', :abbrev_form => 'E  ].[ P', :alpha => "EOP");
Formula.create( :base => '021', :offset => '001', :subindex => '0', :ord => '1', :iform => '21.1', :word_form => '{"cliff"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '021', :offset => '001', :subindex => 'a', :ord => '1', :iform => '21.1', :word_form => 'like( cliff)', :abbrev_form => 'L(C)', :alpha => "LOC");
Formula.create( :base => '021', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'bent( 10.1)', :word_form => 'bent( person )', :abbrev_form => 'B(P)', :alpha => "BP");
Formula.create( :base => '021', :offset => '001', :subindex => 'c', :ord => '1', :iform => '21.1.c', :word_form => '{"shield with handle"}', :abbrev_form => 'LS', :alpha => "LS");
Formula.create( :base => '021', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1 / 21.1', :word_form => 'person / cliff', :abbrev_form => 'T/C', :alpha => "POC");
Formula.create( :base => '021', :offset => '002', :subindex => '0', :ord => '2', :iform => '10.1.d / 21.1', :word_form => 'top-person / cliff', :abbrev_form => 'TP/C', :alpha => "TPOC");
Formula.create( :base => '021', :offset => '015', :subindex => '0', :ord => '1', :iform => '21.1 / 33.1.b', :word_form => 'cliff / kneeler', :abbrev_form => 'C / K', :alpha => "CAK");
Formula.create( :base => '021', :offset => '015', :subindex => '0', :ord => '2', :iform => '21.1 /  33.1.b', :word_form => 'cliff / kneeler', :abbrev_form => 'C / K', :alpha => "CAK");
Formula.create( :base => '021', :offset => '015', :subindex => '0', :ord => '3', :iform => ' 33.1.b \ 21.1', :word_form => 'kneeler \ cliff', :abbrev_form => 'K \ C', :alpha => "KUC");
Formula.create( :base => '021', :offset => '017', :subindex => '0', :ord => '1', :iform => '21.1 / 68.1', :word_form => 'cliff / mouth', :abbrev_form => 'C / M', :alpha => "COM");
Formula.create( :base => '021', :offset => '017', :subindex => '0', :ord => '2', :iform => '21.1 / 68.1', :word_form => 'cliff / opening', :abbrev_form => 'C / O', :alpha => "COO");
Formula.create( :base => '021', :offset => '021', :subindex => '0', :ord => '1', :iform => '21.1.a / 14.1', :word_form => 'motion-of-hand / hand-again', :abbrev_form => 'MOH / HA', :alpha => "MOHOHA");
Formula.create( :base => '021', :offset => '030', :subindex => '0', :ord => '1', :iform => '21.1 / 10.1', :word_form => 'cliff / person', :abbrev_form => 'C / P', :alpha => "COP");
Formula.create( :base => '021', :offset => '032', :subindex => '0', :ord => '1', :iform => '21.1 /1.43/( 9.1*12.1)', :word_form => 'cliff / up / (sprout-effort * spoon)', :abbrev_form => 'C / U / (SE*S)', :alpha => "CO-UOSE-AS");
Formula.create( :base => '021', :offset => '042', :subindex => '0', :ord => '3', :iform => '21.1 / 1.1 / 68.1', :word_form => 'cliff / dash / mouth', :abbrev_form => 'C / D / M', :alpha => "CODOM");
Formula.create( :base => '021', :offset => '042', :subindex => '0', :ord => '1', :iform => '21.1.a / 68.1', :word_form => 'lean-over / mouth', :abbrev_form => 'LO / M', :alpha => "LOOM");
Formula.create( :base => '021', :offset => '051', :subindex => '0', :ord => '2', :iform => '21.1 / 31.1 / 114.1', :word_form => 'cliff / ten / eye', :abbrev_form => 'C / T / E', :alpha => "COTOE");
Formula.create( :base => '021', :offset => '051', :subindex => '0', :ord => '1', :iform => '21.1.c / 114.1', :word_form => 'long-shield / eye', :abbrev_form => 'LS / E', :alpha => "LSOE");
Formula.create( :base => '022', :offset => '001', :subindex => '0', :ord => '1', :iform => '22.1', :word_form => '{"corner"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '022', :offset => '002', :subindex => '0', :ord => '1', :iform => '1.1 / 22.1', :word_form => 'surface / corner', :abbrev_form => 'S / C', :alpha => "SOC");
Formula.create( :base => '022', :offset => '013', :subindex => '0', :ord => '1', :iform => '32.1 / 22.1', :word_form => 'enter / corner', :abbrev_form => 'E / C', :alpha => "EOC");
Formula.create( :base => '022', :offset => '013', :subindex => '0', :ord => '2', :iform => '32a.1 / 22.1', :word_form => 'dot / dash / corner', :abbrev_form => 'D / D / C', :alpha => "DODOC");
Formula.create( :base => '022', :offset => '052', :subindex => '0', :ord => '1', :iform => '22.13 / 11.35 |*|/ 13.1 ', :word_form => '(flee | die) / table |*|/ flip', :abbrev_form => 'FOD / T |*|/ F', :alpha => "FODOTEOF");
Formula.create( :base => '022', :offset => '052', :subindex => '0', :ord => '2', :iform => '32.1 / 22.1 / 11.35 |*|/ 13.1 ', :word_form => 'enter / corner / table |*|/ flip', :abbrev_form => 'E / C / T |*|/ F', :alpha => "EOCOTEOF");
Formula.create( :base => '022', :offset => '059', :subindex => '0', :ord => '3', :iform => '( 22.13 / 11.35 |*|/ 13.1 ) * 49.1', :word_form => '((flee | die) / table |*|/ flip ) * fine-lines', :abbrev_form => '( FOD / T |*|/ F ) * L:F', :alpha => "FODOTEOF-ALIF");
Formula.create( :base => '022', :offset => '059', :subindex => '0', :ord => '1', :iform => '22.52 * 49.1', :word_form => 'Long * fine-lines', :abbrev_form => 'L * FL', :alpha => "LAFL");
Formula.create( :base => '022', :offset => '059', :subindex => '0', :ord => '2', :iform => '22.52 * 49.1', :word_form => 'Long * fine-lines', :abbrev_form => 'L * L:F', :alpha => "LALIF");
Formula.create( :base => '023', :offset => '001', :subindex => '0', :ord => '1', :iform => '23.1', :word_form => '{"outer limits"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '023', :offset => '001', :subindex => 'a', :ord => '1', :iform => '23.1.a', :word_form => '{"pavilion"}', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '023', :offset => '001', :subindex => 'b', :ord => '1', :iform => '23.1 [.] 68.1', :word_form => 'border [.] opening', :abbrev_form => 'B [.] O', :alpha => "BEO");
Formula.create( :base => '023', :offset => '001', :subindex => 'c', :ord => '1', :iform => '77.53.a->23.1', :word_form => 'thorns->space', :abbrev_form => 'T->S', :alpha => "TYS");
Formula.create( :base => '023', :offset => '001', :subindex => 'd', :ord => '1', :iform => '94.23.a', :word_form => '{"sides"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '023', :offset => '002', :subindex => '0', :ord => '1', :iform => '41.3 * 23.1.a', :word_form => 'step-and-stop * border-alt', :abbrev_form => 'SAS * BA', :alpha => "SASBA");
Formula.create( :base => '023', :offset => '002', :subindex => '0', :ord => '2', :iform => '41.3,a * 23.1.a', :word_form => 'stop-and-go * border-alt', :abbrev_form => 'SAG * BA', :alpha => "SAGBA");
Formula.create( :base => '023', :offset => '003', :subindex => '0', :ord => '1', :iform => '23.1.a / 23.1 / 69.1', :word_form => 'pavilion / space / enclosure', :abbrev_form => 'P / S / E', :alpha => "POSOE");
Formula.create( :base => '023', :offset => '050', :subindex => '0', :ord => '1', :iform => '32.1 + 23.1', :word_form => 'enter + space', :abbrev_form => 'E + S', :alpha => "EIS");
Formula.create( :base => '023', :offset => '050', :subindex => '0', :ord => '2', :iform => '32.1 + 23.1', :word_form => 'enter + border', :abbrev_form => 'E + B', :alpha => "EIB");
Formula.create( :base => '023', :offset => '054', :subindex => '0', :ord => '1', :iform => '23.1 *|*/+ 32.1 / 68.1', :word_form => 'space *|*/+ go-in / mouth', :abbrev_form => 'S *|*/+ GI / M', :alpha => "SEO-I'GIOM");
Formula.create( :base => '023', :offset => '054', :subindex => '0', :ord => '2', :iform => '23.1 *|*/ 29.1 / 68.1', :word_form => 'Space *|*/ divide / mouth', :abbrev_form => 'S *|*/ D / M', :alpha => "SEODOM");
Formula.create( :base => '023', :offset => '054', :subindex => 'a', :ord => '1', :iform => '23.54.a', :word_form => '{"window" } ', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '023', :offset => '056', :subindex => '0', :ord => '1', :iform => '23.1 + 10.1.e', :word_form => 'space + open-person', :abbrev_form => 'S + OP', :alpha => "SIOP");
Formula.create( :base => '023', :offset => '061', :subindex => '0', :ord => '1', :iform => '1.1.d / (32.1 + 23.1 )', :word_form => 'bright / ( enter + space)', :abbrev_form => 'B / (E + S)', :alpha => "BOEIS");
Formula.create( :base => '024', :offset => '000', :subindex => '0', :ord => '1', :iform => '24.0', :word_form => 'abstract( "cover" )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '024', :offset => '000', :subindex => 'a', :ord => '1', :iform => '24.0.a', :word_form => 'abstract( "lid" )', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '024', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 24.0 }', :word_form => '{ cover }', :abbrev_form => '{ C }', :alpha => "POC");
Formula.create( :base => '024', :offset => '002', :subindex => '0', :ord => '1', :iform => '24.1 {}/ 1.1.e', :word_form => 'cover {}/ object', :abbrev_form => 'C {}/ O', :alpha => "CEO-O");
Formula.create( :base => '024', :offset => '019', :subindex => '0', :ord => '1', :iform => '24.1 [ 32b.1**2 [ 4.1 ]]', :word_form => 'cover [ object**2 [post] ]', :abbrev_form => 'C [ O**2 [P]]', :alpha => "CEDOEP");
Formula.create( :base => '024', :offset => '019', :subindex => '0', :ord => '2', :iform => '24.1 [ 32b.1 * 4.1 * 32b.1 ]', :word_form => 'cover [ object* post * object ]', :abbrev_form => 'C [ O * P * O ]', :alpha => "CEOPO");
Formula.create( :base => '024', :offset => '023', :subindex => '0', :ord => '1', :iform => 'alt( 24.1)', :word_form => 'alt( cover )', :abbrev_form => 'A(C)', :alpha => "AC");
Formula.create( :base => '025', :offset => '001', :subindex => '0', :ord => '1', :iform => '25.1', :word_form => '{"ice crystals"}', :abbrev_form => 'I', :alpha => "I");
Formula.create( :base => '025', :offset => '002', :subindex => '0', :ord => '1', :iform => '25.1 * 2.21', :word_form => 'ice * water', :abbrev_form => 'I * W', :alpha => "IW");
Formula.create( :base => '025', :offset => '003', :subindex => '0', :ord => '1', :iform => '25.1 * 177.1', :word_form => 'ice * horse', :abbrev_form => 'I * H', :alpha => "IH");
Formula.create( :base => '026', :offset => '001', :subindex => '0', :ord => '1', :iform => '26.1', :word_form => '{"tortoise shell cracks"}', :abbrev_form => 'TSC', :alpha => "TSC");
Formula.create( :base => '026', :offset => '001', :subindex => '0', :ord => '2', :iform => '26.1', :word_form => '{"tortoise shell cracks"}', :abbrev_form => 'D', :alpha => "D");
Formula.create( :base => '026', :offset => '001', :subindex => 'a', :ord => '1', :iform => '26.1', :word_form => '{"tortoise shell cracks"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '026', :offset => '002', :subindex => '0', :ord => '1', :iform => '26a.1 / 14.1', :word_form => 'stick / hand-again', :abbrev_form => 'S/HA', :alpha => "SOHA");
Formula.create( :base => '026', :offset => '011', :subindex => '0', :ord => '1', :iform => '89a,1 * 26a.1', :word_form => 'side-hand * stick', :abbrev_form => 'SH * S', :alpha => "SHS");
Formula.create( :base => '026', :offset => '012', :subindex => '0', :ord => '1', :iform => '72.1 * 26a.1', :word_form => 'wood-tree * stick', :abbrev_form => 'WT * S', :alpha => "WTS");
Formula.create( :base => '026', :offset => '013', :subindex => '0', :ord => '3', :iform => '88.58 * 26.1', :word_form => 'Walk * diviner', :abbrev_form => 'W * D', :alpha => "WD");
Formula.create( :base => '026', :offset => '013', :subindex => '0', :ord => '1', :iform => '(99.1/88.1)* 26.1', :word_form => 'bend-over-die-young / stop) * diviner', :abbrev_form => '(BODY/S) * D', :alpha => "BODYOSD");
Formula.create( :base => '026', :offset => '013', :subindex => '0', :ord => '2', :iform => '(99.1/88.1)* 26.1', :word_form => '(head-down / stop) * diviner', :abbrev_form => '(HD/S) * D', :alpha => "HDOSD");
Formula.create( :base => '026', :offset => '014', :subindex => '0', :ord => '1', :iform => '68.78 * 26.1', :word_form => 'speak-a-word * diviner', :abbrev_form => 'SAW * D', :alpha => "SAWD");
Formula.create( :base => '026', :offset => '015', :subindex => '0', :ord => '1', :iform => '26.1 / 68.1', :word_form => 'diviner / mouth', :abbrev_form => 'D / M', :alpha => "DOM");
Formula.create( :base => '026', :offset => '026', :subindex => '0', :ord => '1', :iform => '26.1 / 150.1', :word_form => 'diviner / shell-fish', :abbrev_form => 'D / SF', :alpha => "DOSF");
Formula.create( :base => '027', :offset => '000', :subindex => 'a', :ord => '1', :iform => '27.0.a', :word_form => 'abstract( "meet" ) ', :abbrev_form => 'A( M )', :alpha => "AM");
Formula.create( :base => '027', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 28.0.a )::( 27.0.a ):>( 1.1.b )', :word_form => 'Breath::meet:>surface', :abbrev_form => 'B::M:>S', :alpha => "BAMOS");
Formula.create( :base => '027', :offset => '001', :subindex => '0', :ord => '1', :iform => '1.1.b / 28.0.a', :word_form => 'surface / breath', :abbrev_form => 'S / B', :alpha => "SOB");
Formula.create( :base => '027', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'inv( 27.1 )', :word_form => 'inv( breath-obstacle)', :abbrev_form => 'I( BO )', :alpha => "IBO");
Formula.create( :base => '027', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'rev( 27.1 )', :word_form => 'rev( breath-obstacle)', :abbrev_form => 'R( BO )', :alpha => "RBO");
Formula.create( :base => '027', :offset => '002', :subindex => '0', :ord => '1', :iform => '51.1 * 27.1', :word_form => 'work * breath-obstacle', :abbrev_form => 'W * BO', :alpha => "WBO");
Formula.create( :base => '027', :offset => '002', :subindex => '0', :ord => '3', :iform => '51.1 * (1.1.b / 28.0.a)', :word_form => 'work * surface / breath', :abbrev_form => 'W * (S/B)', :alpha => "WSOB");
Formula.create( :base => '027', :offset => '003', :subindex => '0', :ord => '1', :iform => '68.1 / 27.1', :word_form => 'mouth / breath-obstacle', :abbrev_form => 'M / BO', :alpha => "MOBO");
Formula.create( :base => '027', :offset => '004', :subindex => '0', :ord => '3', :iform => '27.3 * 122.2', :word_form => 'howl * tiger', :abbrev_form => 'H * T', :alpha => "HT");
Formula.create( :base => '027', :offset => '004', :subindex => '0', :ord => '1', :iform => '(68.1 / 27.1) * ( 122.1 / 11.1)', :word_form => '(mouth / breath-obstacle) * (tiger-skin/legs)', :abbrev_form => '(M/BO) * (TS/L)', :alpha => "MOBOTSL");
Formula.create( :base => '027', :offset => '005', :subindex => '0', :ord => '1', :iform => '29.1 / 27.1', :word_form => 'divide / breath-obstacle', :abbrev_form => 'D / BO', :alpha => "DOBO");
Formula.create( :base => '027', :offset => '008', :subindex => '0', :ord => '1', :iform => '77.1 * 27.1', :word_form => 'wood-tree * breath-obstacle', :abbrev_form => 'WT * BO', :alpha => "WTBO");
Formula.create( :base => '027', :offset => '008', :subindex => '0', :ord => '2', :iform => '77.1 *(1.1.b / 28.0.a)', :word_form => 'wood-tree *(surface/breath)', :abbrev_form => 'WT *(S / B)', :alpha => "WTSOB");
Formula.create( :base => '027', :offset => '009', :subindex => '0', :ord => '1', :iform => '113.1 / 27.1', :word_form => 'fruit-or-basket / breath-obstacle', :abbrev_form => 'FOB / BO', :alpha => "FOBOBO");
Formula.create( :base => '027', :offset => '009', :subindex => '0', :ord => '2', :iform => '113.1 * (1.1.b / 28.0.a)', :word_form => 'fruit-or-basket / surface / breath', :abbrev_form => 'FOB / S / B', :alpha => "FOBOSOB");
Formula.create( :base => '027', :offset => '009', :subindex => '0', :ord => '3', :iform => '113.1 / 27.1', :word_form => 'cause / breath-obstacle', :abbrev_form => 'C / BO', :alpha => "COBO");
Formula.create( :base => '027', :offset => '012', :subindex => '0', :ord => '1', :iform => '68.1 * 27.1.a', :word_form => 'mouth * reverse-breath-obstacle', :abbrev_form => 'M * RBO', :alpha => "MRBO");
Formula.create( :base => '027', :offset => '012', :subindex => '0', :ord => '2', :iform => '68.1 * 27.1.a', :word_form => 'mouth * inverse-breath-obstacle', :abbrev_form => 'M * IBO', :alpha => "MIBO");
Formula.create( :base => '027', :offset => '032', :subindex => '0', :ord => '1', :iform => '1.1.a / 27.1', :word_form => 'dash / breath-obstacle', :abbrev_form => 'D / BO', :alpha => "DOBO");
Formula.create( :base => '028', :offset => '000', :subindex => 'a', :ord => '1', :iform => '28.0.a', :word_form => 'abstract( "breath" ) ', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '028', :offset => '001', :subindex => '0', :ord => '1', :iform => '7.1 * 28.0.a', :word_form => 'drag * breath', :abbrev_form => 'D * B', :alpha => "DAB");
Formula.create( :base => '028', :offset => '001', :subindex => '0', :ord => '2', :iform => '7.1 / 28.0.a', :word_form => 'drag * breath', :abbrev_form => 'D * B', :alpha => "DAB");
Formula.create( :base => '028', :offset => '002', :subindex => '0', :ord => '1', :iform => '54.1 * 28.1', :word_form => 'woman * difficult-sigh', :abbrev_form => 'W * DS', :alpha => "WDS");
Formula.create( :base => '028', :offset => '002', :subindex => '0', :ord => '2', :iform => '54.1 * 28.1', :word_form => 'woman * sigh-of-difficulty', :abbrev_form => 'W * SOD', :alpha => "WSOD");
Formula.create( :base => '028', :offset => '003', :subindex => '0', :ord => '1', :iform => '89a.1 * 28.1', :word_form => 'side-hand * difficult-sigh', :abbrev_form => 'SH * DS', :alpha => "SHDS");
Formula.create( :base => '028', :offset => '003', :subindex => '0', :ord => '2', :iform => '89a.1 * 28.1', :word_form => 'side-hand * sigh-of-difficulty', :abbrev_form => 'SH * SOD', :alpha => "SHSOD");
Formula.create( :base => '028', :offset => '004', :subindex => '0', :ord => '1', :iform => '10a.1 * 28.1', :word_form => 'side-man * difficult-sigh', :abbrev_form => 'SM * DS', :alpha => "SMDS");
Formula.create( :base => '028', :offset => '004', :subindex => '0', :ord => '2', :iform => '10a.1 * 28.1', :word_form => 'side-man * sigh-of-difficulty', :abbrev_form => 'SM * SOD', :alpha => "SMSOD");
Formula.create( :base => '028', :offset => '005', :subindex => '0', :ord => '1', :iform => '28.1 [.] 10.60.1', :word_form => 'difficult-sigh [.] pursue-alt', :abbrev_form => 'DS [.] P', :alpha => "DSEP");
Formula.create( :base => '028', :offset => '005', :subindex => '0', :ord => '2', :iform => '28.1 [.] 10.60.a', :word_form => 'difficult-sigh [.] pursue-alt', :abbrev_form => 'DS [.] P', :alpha => "DSEP");
Formula.create( :base => '028', :offset => '005', :subindex => '0', :ord => '3', :iform => '28.1 [.] 10.60.a', :word_form => 'sigh-of-difficulty [.] pursue-alt', :abbrev_form => 'SOD  [.] P', :alpha => "SODEP");
Formula.create( :base => '028', :offset => '007', :subindex => '0', :ord => '1', :iform => '28.1 / 55.1', :word_form => 'difficult-sigh / child', :abbrev_form => 'DS / C', :alpha => "DSOC");
Formula.create( :base => '028', :offset => '007', :subindex => '0', :ord => '2', :iform => '28.1 / 55.1', :word_form => 'sigh-of-difficulty / child', :abbrev_form => 'SOD / C', :alpha => "SODOC");
Formula.create( :base => '028', :offset => '008', :subindex => '0', :ord => '1', :iform => '108.1 / 28.1', :word_form => 'grain / difficult-sigh', :abbrev_form => 'G / DS', :alpha => "GODS");
Formula.create( :base => '028', :offset => '008', :subindex => '0', :ord => '3', :iform => '108.1 / 28.1', :word_form => 'grain / sigh-of-difficulty', :abbrev_form => 'G / SOD', :alpha => "GOSOD");
Formula.create( :base => '029', :offset => '001', :subindex => '0', :ord => '1', :iform => '29.1', :word_form => '{"broken stick"}', :abbrev_form => 'D', :alpha => "D");
Formula.create( :base => '029', :offset => '001', :subindex => '0', :ord => '2', :iform => '7.1 * 7.1.a', :word_form => 'drag * inverse-drag', :abbrev_form => 'D * ID', :alpha => "DAID");
Formula.create( :base => '029', :offset => '001', :subindex => '0', :ord => '3', :iform => 'opp( 7.1 )', :word_form => 'opposed( drag )', :abbrev_form => 'O(D)', :alpha => "OD");
Formula.create( :base => '029', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Like( 29.1 )', :word_form => 'like( divide )', :abbrev_form => 'L( D )', :alpha => "LOD");
Formula.create( :base => '029', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Like( 29.1 )', :word_form => 'like( divide )', :abbrev_form => 'L( D )', :alpha => "LOD");
Formula.create( :base => '029', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1 * 29.1', :word_form => 'mouth * divide', :abbrev_form => 'M * D', :alpha => "MAD");
Formula.create( :base => '029', :offset => '003', :subindex => '0', :ord => '1', :iform => '89.1.a * 29.1', :word_form => 'side-hand * divide', :abbrev_form => 'SH * D', :alpha => "SHAD");
Formula.create( :base => '029', :offset => '004', :subindex => '0', :ord => '1', :iform => '10.1 / 29.1', :word_form => 'person / divide', :abbrev_form => 'P / D', :alpha => "POD");
Formula.create( :base => '029', :offset => '008', :subindex => '0', :ord => '1', :iform => '29.1 {} 4.1', :word_form => 'divide {} post', :abbrev_form => 'D {} P', :alpha => "DEP");
Formula.create( :base => '029', :offset => '008', :subindex => '0', :ord => '2', :iform => '29.1 {} 4.1.f', :word_form => 'divide {} post-hook', :abbrev_form => 'D {} PH', :alpha => "DEPH");
Formula.create( :base => '029', :offset => '056', :subindex => '0', :ord => '1', :iform => '69.1 [.] 29.1', :word_form => 'square [.] divide', :abbrev_form => 'S [.] D', :alpha => "SED");
Formula.create( :base => '029', :offset => '056', :subindex => '0', :ord => '2', :iform => '69.1 [.] 29.1', :word_form => 'quadrangle [.] divide', :abbrev_form => 'Q [.] D', :alpha => "QED");
Formula.create( :base => '029', :offset => '057', :subindex => '0', :ord => '1', :iform => '32.1.a / 29.1', :word_form => 'enter-alt / divide', :abbrev_form => 'EA / D', :alpha => "EAOD");
Formula.create( :base => '029', :offset => '060', :subindex => '0', :ord => '1', :iform => '29.1 {}\ 66.1', :word_form => 'Divide {}\ sprout', :abbrev_form => 'D {}\ S', :alpha => "DE-US");
Formula.create( :base => '029', :offset => '060', :subindex => '0', :ord => '3', :iform => '32.1.a / 53.1', :word_form => 'enter-alt / towel', :abbrev_form => 'EA / T', :alpha => "E-AOT");
Formula.create( :base => '029', :offset => '060', :subindex => '0', :ord => '2', :iform => '66.1 ][ 29.1', :word_form => 'Sprout ][ divide', :abbrev_form => 'S ][ D', :alpha => "SID");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '4', :iform => '( 29.1 {}\ 66.1 ) / 50.41', :word_form => '( Divide {}\ sprout ) / Severe-offender', :abbrev_form => '( D {}\ S ) / SO', :alpha => "DE-USOSO");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '5', :iform => '( 29.1 {}\ 66.1 ) / ( 1.1.c^2 / 50.1 )', :word_form => '( Divide {}\ sprout ) / ( Dot^2 / pestle|shield )', :abbrev_form => '( D {}\ S ) / ( D^2 / P|S )', :alpha => "DE-USODUTOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '6', :iform => '( 29.1 {}\ 66.1 ) / ( 29.1 / 50.1 )', :word_form => '( Divide {}\ sprout ) / ( divide / pestle|shield )', :abbrev_form => '( D {}\ S ) / ( D / P|S )', :alpha => "DE-USODOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '10', :iform => '( 29.1 {}\ 66.1 ) {}/ 50.41', :word_form => '( Divide {}\ sprout ) {}/ Severe-offender', :abbrev_form => '( D {}\ S ) {}/ SO', :alpha => "DE-USEOSO");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '11', :iform => '( 29.1 {}\ 66.1 ) {}/ ( 1.1.c^2 / 50.1 )', :word_form => '( Divide {}\ sprout ) {}/ ( Dot^2 / pestle|shield )', :abbrev_form => '( D {}\ S ) {}/ ( D^2 / P|S )', :alpha => "DE-USEODUTOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '12', :iform => '( 29.1 {}\ 66.1 ) {}/ ( 29.1 / 50.1 )', :word_form => '( Divide {}\ sprout ) {}/ ( divide / pestle|shield )', :abbrev_form => '( D {}\ S ) {}/ ( D / P|S )', :alpha => "DE-USEODOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '13', :iform => '( 31.1 / 23.1 ) {}/ 50.41', :word_form => '( ten / border ) {}/ Severe-offender', :abbrev_form => '( T / B ) {}/ SO', :alpha => "TOBEOSO");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '14', :iform => '( 31.1 / 23.1 ) {}/ ( 1.1.c^2 / 50.1 )', :word_form => '( ten / border ) {}/ ( Dot^2 / pestle|shield )', :abbrev_form => '( T / B ) {}/ ( D^2 / P|S )', :alpha => "TOBEODUTOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '15', :iform => '( 31.1 / 23.1 ) {}/ ( 29.1 / 50.1 )', :word_form => '( ten / border ) {}/ ( divide / pestle|shield )', :abbrev_form => '( T / B ) {}/ ( D / P|S )', :alpha => "TOBEODOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '1', :iform => '29.60 / 50.41', :word_form => 'multiply / Severe-offender', :abbrev_form => 'M / SO', :alpha => "MOSO");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '2', :iform => '29.60 / ( 1.1.c^2 / 50.1 )', :word_form => 'Multiply / ( Dot^2 / pestle|shield )', :abbrev_form => 'M / ( D^2 / P|S )', :alpha => "MODUTOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '3', :iform => '29.60 / ( 29.1 / 50.1 )', :word_form => 'Multiply / ( divide / pestle|shield )', :abbrev_form => 'M / ( D / P|S )', :alpha => "MODOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '7', :iform => '29.60 {}/ 50.41', :word_form => 'multiply {}/ Severe-offender', :abbrev_form => 'M {}/ SO', :alpha => "MEOSO");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '8', :iform => '29.60 {}/ ( 1.1.c^2 / 50.1 )', :word_form => 'Multiply {}/ ( Dot^2 / pestle|shield )', :abbrev_form => 'M {}/ ( D^2 / P|S )', :alpha => "MEODUTOPOS");
Formula.create( :base => '029', :offset => '068', :subindex => '0', :ord => '9', :iform => '29.60 {}/ ( 29.1 / 50.1 )', :word_form => 'Multiply {}/ ( divide / pestle|shield )', :abbrev_form => 'M {}/ ( D / P|S )', :alpha => "MEODOPOS");
Formula.create( :base => '030', :offset => '001', :subindex => '0', :ord => '1', :iform => '30.1', :word_form => '{"bent elbow"}', :abbrev_form => 'BE', :alpha => "BE");
Formula.create( :base => '030', :offset => '002', :subindex => '0', :ord => '1', :iform => '63.2 / 30.1', :word_form => 'cave / bent-elbow', :abbrev_form => 'C / BE', :alpha => "COBE");
Formula.create( :base => '030', :offset => '003', :subindex => '0', :ord => '1', :iform => '(2.21.a * 30.1) / 77.1', :word_form => '(side-water * nine ) / wood-tree', :abbrev_form => '(SW * N) / WT', :alpha => "SWNOWT");
Formula.create( :base => '030', :offset => '003', :subindex => '0', :ord => '2', :iform => '(2.21.a * 30.1) / 77.1', :word_form => '(side-water * bent-elbow ) / wood-tree', :abbrev_form => '(SW * BE) / WT', :alpha => "SWBEOWT");
Formula.create( :base => '030', :offset => '004', :subindex => '0', :ord => '1', :iform => '10.1.a * 30.1', :word_form => 'side-man * bent-elbow', :abbrev_form => 'SM * BE', :alpha => "SMBE");
Formula.create( :base => '030', :offset => '005', :subindex => '0', :ord => '1', :iform => '30.1 * 76.1', :word_form => 'bent-elbow * sun', :abbrev_form => 'BE * S', :alpha => "BES");
Formula.create( :base => '030', :offset => '006', :subindex => '0', :ord => '1', :iform => '158.1 * 30.1', :word_form => 'vehicle * bent-elbow', :abbrev_form => 'V * BE', :alpha => "VBE");
Formula.create( :base => '031', :offset => '001', :subindex => '0', :ord => '1', :iform => '31.1', :word_form => '{"four directions"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '031', :offset => '001', :subindex => 'b', :ord => '1', :iform => '138.0->31.1', :word_form => 'food->ten', :abbrev_form => 'F->T', :alpha => "FYT");
Formula.create( :base => '031', :offset => '002', :subindex => '0', :ord => '1', :iform => '31.1 / 1.1', :word_form => 'ten / one', :abbrev_form => 'T / O', :alpha => "TOO");
Formula.create( :base => '031', :offset => '022', :subindex => '0', :ord => '1', :iform => '31.1 / 114.1 / 22.1', :word_form => 'ten / eye / corner', :abbrev_form => 'T / E / C', :alpha => "TEC");
Formula.create( :base => '031', :offset => '037', :subindex => '0', :ord => '1', :iform => '2.21 * 31.1', :word_form => 'side-water * ten', :abbrev_form => 'SW * T', :alpha => "SWT");
Formula.create( :base => '031', :offset => '038', :subindex => '0', :ord => '1', :iform => '44.3 * 31.1', :word_form => 'gold * ten', :abbrev_form => 'G * T', :alpha => "GT");
Formula.create( :base => '031', :offset => '039', :subindex => '0', :ord => '1', :iform => '10.1.a * 31.1', :word_form => 'side-man * ten', :abbrev_form => 'SM * T', :alpha => "SMT");
Formula.create( :base => '031', :offset => '040', :subindex => '0', :ord => '1', :iform => '68.78 * 31.1', :word_form => 'speak-a-word * ten', :abbrev_form => 'SAW * T', :alpha => "SAWT");
Formula.create( :base => '031', :offset => '041', :subindex => '0', :ord => '1', :iform => '31.1 + 14.1', :word_form => 'ten + hand-again', :abbrev_form => 'T + HA', :alpha => "TIHA");
Formula.create( :base => '031', :offset => '044', :subindex => '0', :ord => '1', :iform => '31.1 / 68.1', :word_form => 'ten / mouth', :abbrev_form => 'T / M', :alpha => "TOM");
Formula.create( :base => '031', :offset => '071', :subindex => '0', :ord => '1', :iform => '31.1 * 31.1', :word_form => 'ten * ten', :abbrev_form => 'T * T', :alpha => "TT");
Formula.create( :base => '031', :offset => '071', :subindex => '0', :ord => '2', :iform => '31.1  ^ 2', :word_form => 'ten ^ 2', :abbrev_form => 'T ^ 2', :alpha => "TT");
Formula.create( :base => '031', :offset => '105', :subindex => '0', :ord => '1', :iform => '31.1 * 31.1 * 31.1', :word_form => 'ten * ten * ten', :abbrev_form => 'T * T * T', :alpha => "TTT");
Formula.create( :base => '031', :offset => '105', :subindex => '0', :ord => '2', :iform => '31.1  ^ 3', :word_form => 'ten ^ 3', :abbrev_form => 'T ^ 3', :alpha => "TTT");
Formula.create( :base => '031', :offset => '116', :subindex => '0', :ord => '1', :iform => '31.1 * 31.1 * 31.1 * 31.1', :word_form => 'ten * ten * ten * ten', :abbrev_form => 'T * T * T * T', :alpha => "TTTT");
Formula.create( :base => '031', :offset => '116', :subindex => '0', :ord => '2', :iform => '31.1  ^ 4', :word_form => 'ten ^ 4', :abbrev_form => 'T ^ 4', :alpha => "TTTT");
Formula.create( :base => '032', :offset => '001', :subindex => '0', :ord => '1', :iform => '32.1', :word_form => '{"roots entering earth"}', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '032', :offset => '001', :subindex => 'a', :ord => '1', :iform => '1.1.c / 1.1.a', :word_form => 'dot / dash', :abbrev_form => 'D / D', :alpha => "DOD");
Formula.create( :base => '032', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'like( 32.1 )', :word_form => 'like( enter )', :abbrev_form => 'L(E)', :alpha => "LOE");
Formula.create( :base => '032', :offset => '002', :subindex => '0', :ord => '1', :iform => '32.1 / 107.1', :word_form => 'enter / jade', :abbrev_form => 'E / J', :alpha => "EOJ");
Formula.create( :base => '032', :offset => '002', :subindex => '0', :ord => '2', :iform => '32.1 / 107.1.a', :word_form => 'enter / king-jade', :abbrev_form => 'E / KJ', :alpha => "EOKJ");
Formula.create( :base => '032', :offset => '002', :subindex => '0', :ord => '3', :iform => '32.1 / 1.20', :word_form => 'enter / king', :abbrev_form => 'E / K', :alpha => "EOK");
Formula.create( :base => '032', :offset => '006', :subindex => '0', :ord => '1', :iform => '32.1 / 132.1', :word_form => 'enter / meat', :abbrev_form => 'E / M', :alpha => "EOM");
Formula.create( :base => '032', :offset => '007', :subindex => '0', :ord => '1', :iform => '32.1 / 32.7.a', :word_form => 'enter / arrow', :abbrev_form => 'E / A', :alpha => "EOA");
Formula.create( :base => '032', :offset => '007', :subindex => 'a', :ord => '1', :iform => '32.7', :word_form => '{"arrow"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '033', :offset => '001', :subindex => '0', :ord => '1', :iform => '33.1', :word_form => '{"seal"} | {"kneeling person"}', :abbrev_form => 'SKS', :alpha => "SKS");
Formula.create( :base => '033', :offset => '001', :subindex => 'a', :ord => '1', :iform => '33.1', :word_form => '{"seal"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '033', :offset => '001', :subindex => 'b', :ord => '1', :iform => '33.1.b', :word_form => '{"kneeling person"}', :abbrev_form => 'K', :alpha => "K");
Formula.create( :base => '033', :offset => '001', :subindex => 'b', :ord => '2', :iform => '33.1.b', :word_form => 'person::->kneel', :abbrev_form => 'P::->K', :alpha => "PAK");
Formula.create( :base => '033', :offset => '001', :subindex => 'b', :ord => '3', :iform => 'Bent( 33.1 )', :word_form => 'bent( seal )', :abbrev_form => 'B( S )', :alpha => "BOS");
Formula.create( :base => '033', :offset => '001', :subindex => 'b', :ord => '4', :iform => 'Like( 16.1)', :word_form => 'like( bud )', :abbrev_form => 'L( B)', :alpha => "BL");
Formula.create( :base => '033', :offset => '001', :subindex => 'c', :ord => '1', :iform => '33.1', :word_form => 'seal-kneel-section', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '033', :offset => '001', :subindex => 'd', :ord => '3', :iform => '33.1.a->85.1', :word_form => 'seal->cobra', :abbrev_form => 'S->C', :alpha => "STOC");
Formula.create( :base => '033', :offset => '001', :subindex => 'd', :ord => '4', :iform => '33.1.a->85.1', :word_form => 'seal->cobra', :abbrev_form => 'S->C', :alpha => "SYC");
Formula.create( :base => '033', :offset => '001', :subindex => 'd', :ord => '1', :iform => '33.1.a->85.1', :word_form => 'seal->python', :abbrev_form => 'S->P', :alpha => "STOP");
Formula.create( :base => '033', :offset => '001', :subindex => 'd', :ord => '2', :iform => '33.1.a->85.1', :word_form => 'seal->python', :abbrev_form => 'S->P', :alpha => "SYP");
Formula.create( :base => '033', :offset => '001', :subindex => 'e', :ord => '1', :iform => 'short( 33.1 )', :word_form => 'short( seal )', :abbrev_form => 'S(S)', :alpha => "SS");
Formula.create( :base => '033', :offset => '002', :subindex => '0', :ord => '1', :iform => '33.1.a + 14.1.e', :word_form => 'seal + right-hand-alt', :abbrev_form => 'S + RHA', :alpha => "SIRHA");
Formula.create( :base => '033', :offset => '005', :subindex => '0', :ord => '1', :iform => '12.1.b * 33.1.b', :word_form => 'spinner-alt * kneeler', :abbrev_form => 'SA * K', :alpha => "SAK");
Formula.create( :base => '033', :offset => '010', :subindex => '0', :ord => '1', :iform => '103.1.a * 33.1', :word_form => 'left-claw * seal', :abbrev_form => 'LC * S', :alpha => "LCS");
Formula.create( :base => '033', :offset => '011', :subindex => '0', :ord => '1', :iform => '12.37 * 33.1.c', :word_form => 'rice-pot-spoon * section', :abbrev_form => 'RPS * S', :alpha => "RPSS");
Formula.create( :base => '033', :offset => '011', :subindex => '0', :ord => '2', :iform => '(76.1.a / 12.1) * 33.1.c', :word_form => '(rice-pot/spoon) * section', :abbrev_form => '(RP/S) * S', :alpha => "RPOSS");
Formula.create( :base => '033', :offset => '013', :subindex => '0', :ord => '1', :iform => 'Inv( 33.1.a) * 33.1.a', :word_form => 'inv(seal) * seal', :abbrev_form => 'inv(S) * S', :alpha => "ISS");
Formula.create( :base => '033', :offset => '013', :subindex => '0', :ord => '2', :iform => 'inv-opp( 33.1.d)', :word_form => 'inv-opposed(seal)', :abbrev_form => 'IO(S)', :alpha => "IOS");
Formula.create( :base => '033', :offset => '015', :subindex => '0', :ord => '1', :iform => '132.1 * 33.1.d', :word_form => 'meat * seal-to-python', :abbrev_form => 'M * STOP', :alpha => "MSTOP");
Formula.create( :base => '033', :offset => '016', :subindex => '0', :ord => '2', :iform => '10.1 / 33.1.d', :word_form => 'person / seal-to-python', :abbrev_form => 'P / STOP', :alpha => "POSTOP");
Formula.create( :base => '033', :offset => '016', :subindex => '0', :ord => '1', :iform => '10.1.d / 33.1.d', :word_form => 'top-man / seal-to-python', :abbrev_form => 'TM / STOP', :alpha => "TMOSTOP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '1', :iform => '69.1 / 33.1.d', :word_form => 'enclosure / seal-to-python', :abbrev_form => 'E / STOP', :alpha => "EOSTOP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '2', :iform => '69.1 / 33.1.d', :word_form => 'square / seal-to-python', :abbrev_form => 'S / STOP', :alpha => "SOSTOP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '3', :iform => '69.1 / 33.1.d', :word_form => 'Square-enclosure / seal-to-python', :abbrev_form => 'SE / STOP', :alpha => "SEOSTOP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '4', :iform => '69.1 / 33.1.d', :word_form => 'enclosure / seal-to-python', :abbrev_form => 'E / STOP', :alpha => "EOSTOP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '5', :iform => '69.1 / 33.1.d', :word_form => 'square / seal-to-python', :abbrev_form => 'S / STOP', :alpha => "SOSTOP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '6', :iform => '69.1 / 33.1.d', :word_form => 'Square-enclosure / seal-to-python', :abbrev_form => 'SE / STOP', :alpha => "SEOSTOP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '7', :iform => '69.1 / 33.1.d', :word_form => 'enclosure / seal-to-python', :abbrev_form => 'E / SYP', :alpha => "EOSYP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '8', :iform => '69.1 / 33.1.d', :word_form => 'square / seal-to-python', :abbrev_form => 'S / SYP', :alpha => "SOSYP");
Formula.create( :base => '033', :offset => '018', :subindex => '0', :ord => '9', :iform => '69.1 / 33.1.d', :word_form => 'Square-enclosure / seal-to-python', :abbrev_form => 'SE / SYP', :alpha => "SEOSYP");
Formula.create( :base => '033', :offset => '018', :subindex => 'a', :ord => '1', :iform => '33.18.a', :word_form => '{"greek-letter-beta"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '033', :offset => '018', :subindex => 'b', :ord => '2', :iform => '33.18->33.18.a', :word_form => 'city->beta', :abbrev_form => 'C->B', :alpha => "CYB");
Formula.create( :base => '033', :offset => '018', :subindex => 'b', :ord => '1', :iform => '33.18->33.18.a', :word_form => 'citystate->beta', :abbrev_form => 'EOSTOP->B', :alpha => "EOSYPYB");
Formula.create( :base => '034', :offset => '001', :subindex => '0', :ord => '1', :iform => '34.1', :word_form => '{"tendon"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '034', :offset => '002', :subindex => '0', :ord => '1', :iform => '34.1 * 68.1 ', :word_form => 'strength * mouth', :abbrev_form => 'S * M', :alpha => "SM");
Formula.create( :base => '034', :offset => '011', :subindex => '0', :ord => '1', :iform => '132.1.a * 34.1', :word_form => 'meat * strength', :abbrev_form => 'M * S', :alpha => "MS");
Formula.create( :base => '034', :offset => '013', :subindex => '0', :ord => '1', :iform => '74.2 * 34.1', :word_form => 'rawhide  * strength', :abbrev_form => 'R * S', :alpha => "RS");
Formula.create( :base => '034', :offset => '014', :subindex => '0', :ord => '1', :iform => '29.9 / 34.1', :word_form => 'few / srength', :abbrev_form => 'F / S', :alpha => "FOS");
Formula.create( :base => '034', :offset => '015', :subindex => '0', :ord => '1', :iform => '34.1 / (34.1^2)', :word_form => 'strength / (strength^2)', :abbrev_form => 'S / S^2', :alpha => "SODS");
Formula.create( :base => '034', :offset => '019', :subindex => '0', :ord => '1', :iform => '111.1 / 34.1', :word_form => 'field / strength', :abbrev_form => 'F / S', :alpha => "FOS");
Formula.create( :base => '034', :offset => '020', :subindex => '0', :ord => '1', :iform => '68.1 / 34.1', :word_form => 'opening / strength', :abbrev_form => 'O / S', :alpha => "OOS");
Formula.create( :base => '035', :offset => '001', :subindex => '0', :ord => '1', :iform => '35.1', :word_form => '{"knife"}', :abbrev_form => 'K', :alpha => "K");
Formula.create( :base => '035', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'alt( 35.1 )', :word_form => 'alt( knife )', :abbrev_form => 'A( K )', :alpha => "KA");
Formula.create( :base => '035', :offset => '002', :subindex => '0', :ord => '1', :iform => '128.1 * 35.1.a', :word_form => 'Bird-is-diving * knife-at-right', :abbrev_form => 'BID * SK', :alpha => "BIDAKAR");
Formula.create( :base => '035', :offset => '004', :subindex => '0', :ord => '1', :iform => '29.1 / 35.1', :word_form => 'divide / knife', :abbrev_form => 'D / K', :alpha => "DOK");
Formula.create( :base => '035', :offset => '021', :subindex => '0', :ord => '1', :iform => '1.1.c + 35.1', :word_form => 'dot + knife', :abbrev_form => 'D + K', :alpha => "DIK");
Formula.create( :base => '035', :offset => '021', :subindex => 'a', :ord => '1', :iform => 'alt( 35.21)', :word_form => 'alt( blade )', :abbrev_form => 'alt( B )', :alpha => "AB");
Formula.create( :base => '035', :offset => '031', :subindex => '0', :ord => '1', :iform => '35.1 / 68.1', :word_form => 'knife / mouth', :abbrev_form => 'K / M', :alpha => "KOM");
Formula.create( :base => '035', :offset => '040', :subindex => '0', :ord => '1', :iform => '126.1 * 35.1', :word_form => 'clothing * knife', :abbrev_form => 'C * K', :alpha => "CK");
Formula.create( :base => '035', :offset => '041', :subindex => '0', :ord => '1', :iform => 'alt( 35.1 )', :word_form => 'alt( knife )', :abbrev_form => 'A( K )', :alpha => "KA");
Formula.create( :base => '036', :offset => '001', :subindex => '0', :ord => '1', :iform => '36.1', :word_form => '{"nail"}', :abbrev_form => 'N', :alpha => "N");
Formula.create( :base => '036', :offset => '002', :subindex => '0', :ord => '1', :iform => '44.3 * 36.1', :word_form => 'gold * nail', :abbrev_form => 'G * N', :alpha => "GN");
Formula.create( :base => '036', :offset => '003', :subindex => '0', :ord => '1', :iform => '114.1 * 36.1', :word_form => 'eye * nail', :abbrev_form => 'E * N', :alpha => "EN");
Formula.create( :base => '036', :offset => '004', :subindex => '0', :ord => '1', :iform => '68.1 * 36.1', :word_form => 'mouth * nail', :abbrev_form => 'M * N', :alpha => "MN");
Formula.create( :base => '036', :offset => '005', :subindex => '0', :ord => '1', :iform => '68.78 * 36.1', :word_form => 'speak-a-word * nail', :abbrev_form => 'SAW * N', :alpha => "SAWN");
Formula.create( :base => '036', :offset => '006', :subindex => '0', :ord => '1', :iform => '36.1 * 148.12', :word_form => 'Nail * ( head->page )', :abbrev_form => 'N * (H->P)', :alpha => "NHTOP");
Formula.create( :base => '036', :offset => '007', :subindex => '0', :ord => '1', :iform => '89a.1 * 36.1', :word_form => 'side-hand * nail', :abbrev_form => 'SH * N', :alpha => "SHN");
Formula.create( :base => '036', :offset => '008', :subindex => '0', :ord => '1', :iform => 'top( 23.3 ) / 36.1', :word_form => 'top( tall ) / nail', :abbrev_form => 'T(T) / N', :alpha => "TOTON");
Formula.create( :base => '036', :offset => '010', :subindex => '0', :ord => '1', :iform => '36.10', :word_form => '{"store house"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '036', :offset => '010', :subindex => 'a', :ord => '1', :iform => '63.1 / 36.1', :word_form => 'roof / nail', :abbrev_form => 'R / N', :alpha => "RON");
Formula.create( :base => '036', :offset => '010', :subindex => 'b', :ord => '1', :iform => '36.10->( 63.1 / 36.1)', :word_form => 'Store-house->( roof / nail )', :abbrev_form => 'SH->R / N', :alpha => "SHTORON");
Formula.create( :base => '036', :offset => '014', :subindex => '0', :ord => '1', :iform => '111.1 * 36.1', :word_form => 'field * nail', :abbrev_form => 'F * N', :alpha => "FN");
Formula.create( :base => '037', :offset => '000', :subindex => '0', :ord => '1', :iform => '37.0', :word_form => 'Abstract( "wing" )', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '037', :offset => '000', :subindex => 'a', :ord => '1', :iform => ':37.0.a', :word_form => 'Abstract( "flap" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '037', :offset => '001', :subindex => '0', :ord => '2', :iform => '37.0:178.0.c ::37.0.a', :word_form => 'wing:short::flap', :abbrev_form => 'W:S::F', :alpha => "WISAF");
Formula.create( :base => '037', :offset => '001', :subindex => '0', :ord => '1', :iform => '37.1', :word_form => '{"short-wing"}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '037', :offset => '001', :subindex => 'a', :ord => '1', :iform => '37.1.a', :word_form => '{"flower"}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '037', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 37.0:178.0.c ::37.0.a ) / 14.1', :word_form => '( wing:short::flap ) / ( hand->again )', :abbrev_form => '( W:S::F ) / ( H->A )', :alpha => "WISAFOHYA");
Formula.create( :base => '037', :offset => '002', :subindex => '0', :ord => '1', :iform => '37.1 / 14.1', :word_form => 'Flap / ( hand->again )', :abbrev_form => 'F / ( H->A )', :alpha => "FOHYA");
Formula.create( :base => '037', :offset => '023', :subindex => '0', :ord => '1', :iform => '69.1.a / 14.1', :word_form => 'swirling-water / hand-again', :abbrev_form => 'SW / HA', :alpha => "SWOHA");
Formula.create( :base => '037', :offset => '026', :subindex => '0', :ord => '1', :iform => '(37a.1->37.1) / 77.1', :word_form => '(flower->flap) / wood-tree', :abbrev_form => '(F->F) / WT', :alpha => "FTOFOWT");
Formula.create( :base => '038', :offset => '001', :subindex => '0', :ord => '1', :iform => '38.1', :word_form => '{"small table | stool "}', :abbrev_form => 'ST', :alpha => "ST");
Formula.create( :base => '038', :offset => '002', :subindex => '0', :ord => '1', :iform => '132.1.a * 38.1', :word_form => 'meat * stool', :abbrev_form => 'M * S', :alpha => "MS");
Formula.create( :base => '038', :offset => '003', :subindex => '0', :ord => '1', :iform => '12.74 * 38.1', :word_form => 'food * stool', :abbrev_form => 'F * S', :alpha => "FS");
Formula.create( :base => '038', :offset => '004', :subindex => '0', :ord => '1', :iform => '10.60 * 38.1', :word_form => 'pursue * stool', :abbrev_form => 'P * S', :alpha => "PS");
Formula.create( :base => '038', :offset => '006', :subindex => '0', :ord => '2', :iform => '24.1 / 38.1', :word_form => 'cover / stool', :abbrev_form => 'C / S', :alpha => "COS");
Formula.create( :base => '038', :offset => '006', :subindex => '0', :ord => '1', :iform => '63.1 / 11.1', :word_form => 'roof / legs', :abbrev_form => 'R / L', :alpha => "ROL");
Formula.create( :base => '038', :offset => '006', :subindex => '0', :ord => '3', :iform => '(63.1->24.1) /(11.1->38.1)', :word_form => '(roof->cover)/(legs->stool)', :abbrev_form => 'RTOC / LTOS', :alpha => "RTOCOLTOS");
Formula.create( :base => '039', :offset => '000', :subindex => 'a', :ord => '1', :iform => '39.0.a', :word_form => 'abstract( slave )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '039', :offset => '000', :subindex => 'b', :ord => '1', :iform => '39.0.b', :word_form => 'abstract( dowry )', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '039', :offset => '000', :subindex => 'c', :ord => '1', :iform => '39.0.c', :word_form => 'abstract( arm )', :abbrev_form => 'A( A )', :alpha => "AA");
Formula.create( :base => '039', :offset => '000', :subindex => 'd', :ord => '1', :iform => '39.0.d', :word_form => 'abstract( arms )', :abbrev_form => 'A( A )', :alpha => "AA");
Formula.create( :base => '039', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 10.0 )::( 75.0.b ):>( 39.0.d )', :word_form => 'person::show:>arms', :abbrev_form => 'P::S:>A', :alpha => "PASOA");
Formula.create( :base => '039', :offset => '001', :subindex => '0', :ord => '1', :iform => '39.1', :word_form => '{"standing person"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '039', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'dis( 39.1)', :word_form => 'dis( big-person )', :abbrev_form => 'dis( BP)', :alpha => "DOBP");
Formula.create( :base => '039', :offset => '001', :subindex => 'b', :ord => '1', :iform => '( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Left::join:> right )->( person::show:>arms )', :abbrev_form => '( L::J:>R )->( P::S:>A )', :alpha => "LAJORYPASOA");
Formula.create( :base => '039', :offset => '002', :subindex => '0', :ord => '1', :iform => '39.1 / 137.1', :word_form => 'big / ear', :abbrev_form => 'B / E', :alpha => "BOE");
Formula.create( :base => '039', :offset => '003', :subindex => '0', :ord => '1', :iform => '123.1 / 39.1', :word_form => 'sheep / big', :abbrev_form => 'S / B', :alpha => "SOB");
Formula.create( :base => '039', :offset => '006', :subindex => '0', :ord => '2', :iform => 'bent( leg( 39.1))', :word_form => 'bent( leg( big-person ))', :abbrev_form => 'B(L(BP))', :alpha => "BOLOBP");
Formula.create( :base => '039', :offset => '006', :subindex => '0', :ord => '1', :iform => 'dis( 39.1)', :word_form => 'dis( big )', :abbrev_form => 'D( B)', :alpha => "DOB");
Formula.create( :base => '039', :offset => '009', :subindex => '0', :ord => '1', :iform => '1f.1 + 39.1', :word_form => 'hairpin + big', :abbrev_form => 'H + B', :alpha => "HIB");
Formula.create( :base => '039', :offset => '014', :subindex => '0', :ord => '1', :iform => '10.7 {} 39.1', :word_form => 'follow {} big', :abbrev_form => 'F {} B', :alpha => "FEB");
Formula.create( :base => '039', :offset => '014', :subindex => '0', :ord => '2', :iform => '10.7 |%| 39.1', :word_form => 'Follow |%| big', :abbrev_form => 'F |%| B', :alpha => "FILAB");
Formula.create( :base => '039', :offset => '021', :subindex => '0', :ord => '1', :iform => '39.1 / alt( 1.1.b )', :word_form => 'Alt( big ) / surface', :abbrev_form => 'A( B ) / S', :alpha => "ABOS");
Formula.create( :base => '039', :offset => '021', :subindex => '0', :ord => '2', :iform => '39.1 / alt( 1.1.b )', :word_form => 'alt( person::show:>arms ) / surface', :abbrev_form => 'A( B::S:>A ) / S', :alpha => "ABASO'A-OS");
Formula.create( :base => '039', :offset => '033', :subindex => '0', :ord => '1', :iform => '39.1 / 1.2', :word_form => 'big / two', :abbrev_form => 'B / T', :alpha => "BOT");
Formula.create( :base => '039', :offset => '033', :subindex => '0', :ord => '3', :iform => '39.1 / 1.1.c', :word_form => 'big / dot', :abbrev_form => 'B / D', :alpha => "BOD");
Formula.create( :base => '039', :offset => '035', :subindex => '0', :ord => '1', :iform => '1.1.g / 39.1', :word_form => 'heaven / big-person', :abbrev_form => 'H / BP', :alpha => "HOBP");
Formula.create( :base => '039', :offset => '035', :subindex => '0', :ord => '2', :iform => '1.1.h / 39.1', :word_form => 'big-head / big-person', :abbrev_form => 'H / BP', :alpha => "HOBP");
Formula.create( :base => '039', :offset => '035', :subindex => 'a', :ord => '2', :iform => '29.1 / 39.35', :word_form => 'Divide / sky', :abbrev_form => 'D / S', :alpha => "DOS");
Formula.create( :base => '039', :offset => '035', :subindex => 'a', :ord => '1', :iform => '39.0.a:->39.0.b', :word_form => 'slave:->dowry', :abbrev_form => 'S:->D', :alpha => "SYD");
Formula.create( :base => '039', :offset => '041', :subindex => '0', :ord => '1', :iform => '69.1 [.] 39.1', :word_form => 'enclosure [.] big', :abbrev_form => 'E [.] B', :alpha => "EEB");
Formula.create( :base => '039', :offset => '041', :subindex => '0', :ord => '2', :iform => '69.1 [.] 39.1', :word_form => 'quadrangle [.] big', :abbrev_form => 'Q [.] B', :alpha => "QEB");
Formula.create( :base => '039', :offset => '041', :subindex => '0', :ord => '3', :iform => '69.1 [.] 39.1', :word_form => 'square [.] big', :abbrev_form => 'S [.] B', :alpha => "EEB");
Formula.create( :base => '039', :offset => '045', :subindex => '0', :ord => '1', :iform => 'bent( head( 39.1))', :word_form => 'bent( head (big-person))', :abbrev_form => 'B(H(BP))', :alpha => "BOHOBP");
Formula.create( :base => '039', :offset => '050', :subindex => '0', :ord => '2', :iform => '23.1 + 39.1', :word_form => 'space + big-person', :abbrev_form => 'S + BP', :alpha => "SIBP");
Formula.create( :base => '039', :offset => '050', :subindex => '0', :ord => '1', :iform => '39.1 + 23.1', :word_form => 'big-person + space', :abbrev_form => 'BP + S', :alpha => "BPIS");
Formula.create( :base => '039', :offset => '056', :subindex => '0', :ord => '1', :iform => '69.25.b / 14.1', :word_form => 'half-object / hand-again', :abbrev_form => 'HO / HA', :alpha => "HOOHA");
Formula.create( :base => '039', :offset => '056', :subindex => '0', :ord => '3', :iform => '69.25.b + 14.1', :word_form => 'half-object + hand-again', :abbrev_form => 'HO + HA', :alpha => "HOIHA");
Formula.create( :base => '039', :offset => '056', :subindex => '0', :ord => '2', :iform => 'right( 69.25) / 14.1', :word_form => 'right( bilateral-object ) / hand-again', :abbrev_form => 'ROBO / HA', :alpha => "ROBO-OHA");
Formula.create( :base => '039', :offset => '064', :subindex => '0', :ord => '3', :iform => '39.1 / 19.1.b', :word_form => 'big-person / cocoon-like', :abbrev_form => 'BP / CL', :alpha => "B-POCL");
Formula.create( :base => '039', :offset => '064', :subindex => '0', :ord => '1', :iform => '39.64.a / 39.64.b', :word_form => 'lid / vessel', :abbrev_form => 'L / V', :alpha => "LOV");
Formula.create( :base => '039', :offset => '064', :subindex => '0', :ord => '2', :iform => '39.64.a / 39.64.b', :word_form => 'cover / vessel', :abbrev_form => 'C / V', :alpha => "COV");
Formula.create( :base => '039', :offset => '064', :subindex => '0', :ord => '4', :iform => '70.1 / 19.1', :word_form => 'earth / cocoon', :abbrev_form => 'E / C', :alpha => "EOC");
Formula.create( :base => '039', :offset => '064', :subindex => 'a', :ord => '1', :iform => '39.64.a', :word_form => '{"lid"}', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '039', :offset => '064', :subindex => 'b', :ord => '1', :iform => '39.64.b', :word_form => '{"vessel"}', :abbrev_form => 'V', :alpha => "V");
Formula.create( :base => '039', :offset => '075', :subindex => '0', :ord => '1', :iform => '1.1.c^2  {} 39.1.a', :word_form => 'Dot^2 {} big-person-alt', :abbrev_form => 'D^2 {} BPA', :alpha => "DUTEBA");
Formula.create( :base => '039', :offset => '075', :subindex => 'a', :ord => '1', :iform => '1.1.c^2  {} 39.1', :word_form => 'Dot^2 {} big-person', :abbrev_form => 'D^2 {} BP', :alpha => "DUTEB");
Formula.create( :base => '039', :offset => '078', :subindex => '0', :ord => '1', :iform => '39.1 / 82.1', :word_form => 'Big / fire', :abbrev_form => 'B / F', :alpha => "BOF");
Formula.create( :base => '039', :offset => '078', :subindex => '0', :ord => '2', :iform => '70.1 /+ base( 39.75 )', :word_form => 'Earth /+ base( armpits )', :abbrev_form => 'E /+ B( A )', :alpha => "E-OIBOA");
Formula.create( :base => '039', :offset => '083', :subindex => '0', :ord => '1', :iform => '39.1 / cross( 11.1)', :word_form => 'big-person / cross( legs)', :abbrev_form => 'BP / cross( L)', :alpha => "BPOCL");
Formula.create( :base => '039', :offset => '093', :subindex => '0', :ord => '1', :iform => 'dis( 39.1)', :word_form => 'dis( big-person )', :abbrev_form => 'D( BP)', :alpha => "DOBP");
Formula.create( :base => '040', :offset => '001', :subindex => '0', :ord => '1', :iform => '40.1', :word_form => '{"sitting or reclining person"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '040', :offset => '001', :subindex => 'a', :ord => '1', :iform => '63.0->40.1', :word_form => 'roof->recliner', :abbrev_form => 'R->R', :alpha => "RYR");
Formula.create( :base => '040', :offset => '002', :subindex => '0', :ord => '1', :iform => '40.1 / 133.4', :word_form => 'Recliner / die', :abbrev_form => 'R / D', :alpha => "ROD");
Formula.create( :base => '040', :offset => '002', :subindex => '0', :ord => '2', :iform => '40.1 / (133.12 * 13.1)', :word_form => 'Recliner / (broken-bone * flip)', :abbrev_form => 'R / (BB * F)', :alpha => "ROBBF");
Formula.create( :base => '040', :offset => '003', :subindex => '0', :ord => '1', :iform => '40.1 / 138.1', :word_form => 'Recliner / rice', :abbrev_form => 'R / R', :alpha => "ROR");
Formula.create( :base => '040', :offset => '004', :subindex => '0', :ord => '1', :iform => '40.1 / 9.1', :word_form => 'Recliner / sprout-effort', :abbrev_form => 'R / SE', :alpha => "ROSE");
Formula.create( :base => '040', :offset => '004', :subindex => '0', :ord => '2', :iform => '40.1 / 9.1.b', :word_form => 'Recliner / alt( sprout-effort)', :abbrev_form => 'R / ASE', :alpha => "RO-A'SE");
Formula.create( :base => '040', :offset => '005', :subindex => '0', :ord => '1', :iform => '40.1 / 126.1.a', :word_form => 'Recliner / gown', :abbrev_form => 'R / G', :alpha => "ROG");
Formula.create( :base => '040', :offset => '005', :subindex => '0', :ord => '2', :iform => '40.1 / 66.2.b / base( 126.1)', :word_form => 'Recliner / grass / base( clothing )', :abbrev_form => 'R / G / base( C)', :alpha => "ROGOBOC");
Formula.create( :base => '040', :offset => '008', :subindex => '0', :ord => '1', :iform => '(40.1 / 53.1 ) * 14.1', :word_form => '(Recliner / cloth ) * hand-again', :abbrev_form => '(R / C) * HA', :alpha => "ROCHA");
Formula.create( :base => '040', :offset => '011', :subindex => '0', :ord => '1', :iform => '(40.15 / 82.1) * 14.63', :word_form => '(( recliner / two) / fire ) * hand-inch', :abbrev_form => '((R / T ) / F ) * HYI', :alpha => "ROTOFAHYI");
Formula.create( :base => '040', :offset => '011', :subindex => '0', :ord => '2', :iform => '(40.15 / 29.8) * 14.63', :word_form => '(( recliner / two) / small ) * hand-inch', :abbrev_form => '((R / T ) / S ) * HYI', :alpha => "ROTOSAHYI");
Formula.create( :base => '040', :offset => '015', :subindex => '0', :ord => '1', :iform => '40.1 / 1.2', :word_form => 'Recliner / two', :abbrev_form => 'R / T', :alpha => "ROT");
Formula.create( :base => '041', :offset => '000', :subindex => '0', :ord => '1', :iform => '41.0', :word_form => 'abstract( "step" ) ', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '041', :offset => '000', :subindex => 'a', :ord => '1', :iform => '41.0.a', :word_form => 'abstract( "stairstep" ) ', :abbrev_form => 'A( SS )', :alpha => "ASS");
Formula.create( :base => '041', :offset => '000', :subindex => 'b', :ord => '1', :iform => '41.0.b', :word_form => 'abstract( "step" ) ', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '041', :offset => '001', :subindex => '0', :ord => '4', :iform => '10.1.a::41.1.a', :word_form => '{person}::{step}', :abbrev_form => 'P::S', :alpha => "PAS");
Formula.create( :base => '041', :offset => '001', :subindex => '0', :ord => '2', :iform => '41.1', :word_form => 'generic( person )::generic( step )', :abbrev_form => 'G( P )::G( S )', :alpha => "GPAGS");
Formula.create( :base => '041', :offset => '001', :subindex => '0', :ord => '6', :iform => '41.1', :word_form => 'person::step', :abbrev_form => 'P::S', :alpha => "PAS");
Formula.create( :base => '041', :offset => '001', :subindex => '0', :ord => '1', :iform => '41.1', :word_form => '{"person-taking-step"}', :abbrev_form => 'LS', :alpha => "LS");
Formula.create( :base => '041', :offset => '001', :subindex => 'a', :ord => '1', :iform => '41.0.b', :word_form => 'step', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '041', :offset => '002', :subindex => '0', :ord => '2', :iform => '', :word_form => 'person::(step:long)', :abbrev_form => 'P::(S:L)', :alpha => "PASIL");
Formula.create( :base => '041', :offset => '002', :subindex => '0', :ord => '3', :iform => '', :word_form => 'step(person):long', :abbrev_form => 'S( P ):L', :alpha => "SOPIL");
Formula.create( :base => '041', :offset => '002', :subindex => '0', :ord => '1', :iform => 'Stretch(41.1)', :word_form => 'stretch( left-step)', :abbrev_form => 'S( LS)', :alpha => "SOLS");
Formula.create( :base => '041', :offset => '003', :subindex => '0', :ord => '1', :iform => '41.1 / 88.1', :word_form => 'Left-step / alt-stop', :abbrev_form => 'LS / S', :alpha => "LSOS");
Formula.create( :base => '041', :offset => '003', :subindex => '0', :ord => '2', :iform => '41.1 * 88.1', :word_form => 'Left-step * alt-stop', :abbrev_form => 'LS * S', :alpha => "LSAS");
Formula.create( :base => '041', :offset => '003', :subindex => 'a', :ord => '1', :iform => 'alt(14.1) / alt( 88.1) ', :word_form => 'alt(left-step) / alt(stop) ', :abbrev_form => 'A(LS) / A(S) ', :alpha => "ALSOSA");
Formula.create( :base => '041', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Rev( 41.1)', :word_form => 'rev( left-step)', :abbrev_form => 'R( LS)', :alpha => "ROLS");
Formula.create( :base => '041', :offset => '004', :subindex => '0', :ord => '2', :iform => 'Rev( 41.1)', :word_form => 'rev( person::step )', :abbrev_form => 'R( P::S )', :alpha => "ROPAS");
Formula.create( :base => '041', :offset => '005', :subindex => '0', :ord => '5', :iform => '41.1 * Rev( 41.1)', :word_form => 'person::step * rev( person::step )', :abbrev_form => 'P::S * R( P::S )', :alpha => "PASAROPAS");
Formula.create( :base => '041', :offset => '005', :subindex => '0', :ord => '1', :iform => '41.5', :word_form => '{"crossroads"}', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '041', :offset => '005', :subindex => '0', :ord => '2', :iform => '41.5', :word_form => '{"crossroads"}', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '041', :offset => '005', :subindex => '0', :ord => '3', :iform => '41.5', :word_form => 'road::cross:>road', :abbrev_form => 'R::C:>R', :alpha => "RACOR");
Formula.create( :base => '041', :offset => '005', :subindex => '0', :ord => '7', :iform => 'Opp( 41.1 )', :word_form => 'Opp( person::step )', :abbrev_form => 'O( P::S )', :alpha => "OPAS");
Formula.create( :base => '041', :offset => '009', :subindex => '0', :ord => '1', :iform => '41.1 * ( 59.1 / 10.105)', :word_form => 'Left-step * ( tiny / hobble )', :abbrev_form => 'LS * ( T / H )', :alpha => "LSTOH");
Formula.create( :base => '041', :offset => '009', :subindex => '0', :ord => '2', :iform => '41.1 * ( 59.1 / 10.105)', :word_form => 'person::step * ( tiny / hobble )', :abbrev_form => 'P::S * ( T / H )', :alpha => "PASATOH");
Formula.create( :base => '042', :offset => '001', :subindex => '0', :ord => '1', :iform => '42.1', :word_form => '{ "boars snout" }', :abbrev_form => 'PS', :alpha => "PS");
Formula.create( :base => '042', :offset => '002', :subindex => '0', :ord => '1', :iform => '42.1 / 155.1', :word_form => 'Pig-snout / pig', :abbrev_form => 'PS / P', :alpha => "PSOP");
Formula.create( :base => '042', :offset => '006', :subindex => '0', :ord => '1', :iform => '42.1 / ( 138.1 * 153.1) / 15.39', :word_form => 'Pig-snout / (rice * silk-thread) / folded-hands', :abbrev_form => 'PS / (R * ST) / FH', :alpha => "PSORSTOFH");
Formula.create( :base => '042', :offset => '007', :subindex => '0', :ord => '1', :iform => '42.7', :word_form => '{"device for twisting ropes"}', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '042', :offset => '008', :subindex => '0', :ord => '3', :iform => '42.1 / 2.21', :word_form => 'pig-snout / water', :abbrev_form => 'PS / W', :alpha => "PSOW");
Formula.create( :base => '042', :offset => '008', :subindex => '0', :ord => '1', :iform => '42.8', :word_form => '{"ax stripping overturned tree"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '042', :offset => '008', :subindex => '0', :ord => '2', :iform => '96.1 / 77.1', :word_form => 'Ax / wood-tree', :abbrev_form => 'A / WT', :alpha => "AOWT");
Formula.create( :base => '042', :offset => '008', :subindex => '0', :ord => '4', :iform => '(96.1->42.1) / (77.1->2.21)', :word_form => '(ax->pig-snout) / (wood-tree->water)', :abbrev_form => '(A->PS) / (WT->W)', :alpha => "ATOPS-OWTTOW");
Formula.create( :base => '043', :offset => '001', :subindex => '0', :ord => '1', :iform => '43.1', :word_form => '{"thread skein"}', :abbrev_form => 'SET', :alpha => "SET");
Formula.create( :base => '043', :offset => '002', :subindex => '0', :ord => '1', :iform => '43.1 / 25.1', :word_form => 'Skein-end-tied / ice', :abbrev_form => 'SET / I', :alpha => "SETOI");
Formula.create( :base => '044', :offset => '001', :subindex => '0', :ord => '1', :iform => '44.1', :word_form => '{"three lines"}', :abbrev_form => 'CT', :alpha => "CT");
Formula.create( :base => '044', :offset => '002', :subindex => '0', :ord => '1', :iform => '44.1 / 1.1.i', :word_form => 'Come-together / dash-hook', :abbrev_form => 'CT / DH', :alpha => "CTODH");
Formula.create( :base => '044', :offset => '002', :subindex => '0', :ord => '2', :iform => '44.1 / 1.1.i', :word_form => 'Come-together / contact', :abbrev_form => 'CT / C', :alpha => "CTOC");
Formula.create( :base => '044', :offset => '002', :subindex => '0', :ord => '3', :iform => '44.1 / 1.1.i', :word_form => 'gather / dash-hook', :abbrev_form => 'G / DH', :alpha => "GODH");
Formula.create( :base => '044', :offset => '002', :subindex => '0', :ord => '4', :iform => '44.1 / 1.1.i', :word_form => 'gather / contact', :abbrev_form => 'G / C', :alpha => "GOC");
Formula.create( :base => '044', :offset => '002', :subindex => '0', :ord => '5', :iform => '44.1 / 1.1.i', :word_form => 'join / dash-hook', :abbrev_form => 'J / DH', :alpha => "JODH");
Formula.create( :base => '044', :offset => '002', :subindex => '0', :ord => '6', :iform => '44.1 / 1.1.i', :word_form => 'join / contact', :abbrev_form => 'J / C', :alpha => "JOC");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '1', :iform => '44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )', :word_form => 'Gather / angle-bar / ( dot^2 *]|[* earth )', :abbrev_form => 'G / AB / ( D^2 *]|[* E )', :alpha => "GO-ABODUTILA-E");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '2', :iform => '44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )', :word_form => 'Gather / angle-bar / ( dot^2 *]|[* ground )', :abbrev_form => 'G / AB / ( D^2 *]|[* G )', :alpha => "GO-ABODUTILAG");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '3', :iform => '44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )', :word_form => 'Gather / contact / ( dot^2 *]|[* ground )', :abbrev_form => 'G / C / ( D^2 *]|[* G )', :alpha => "GOCODUTILAG");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '4', :iform => '44.1 / ( 1.1.c^2 *]|[* 70.1 )', :word_form => 'Gather / ( dot^2 *]|[* ground )', :abbrev_form => 'G / ( D^2 *]|[* G )', :alpha => "GODUTILAG");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '5', :iform => '44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )', :word_form => 'Gather / angle-bar / ( divide *]|[* earth )', :abbrev_form => 'G / AB / ( D *]|[* E )', :alpha => "GO-ABODILA-E");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '6', :iform => '44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )', :word_form => 'Gather / angle-bar / ( divide *]|[* ground )', :abbrev_form => 'G / AB / ( D *]|[* G )', :alpha => "GO-ABODILAG");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '7', :iform => '44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )', :word_form => 'Gather / contact / ( divide *]|[* ground )', :abbrev_form => 'G / C / ( D *]|[* G )', :alpha => "GOCODILAG");
Formula.create( :base => '044', :offset => '003', :subindex => '0', :ord => '8', :iform => '44.1 / ( 129.1 *]|[* 70.1 )', :word_form => 'Gather / ( divide *]|[* ground )', :abbrev_form => 'G / ( D *]|[* G )', :alpha => "GODILAG");
Formula.create( :base => '044', :offset => '015', :subindex => '0', :ord => '1', :iform => '44.1 / 68.1', :word_form => 'Come-together / mouth', :abbrev_form => 'CT / M', :alpha => "CTOM");
Formula.create( :base => '044', :offset => '015', :subindex => '0', :ord => '2', :iform => '44.1 / 68.1', :word_form => 'join / mouth', :abbrev_form => 'J / M', :alpha => "JOM");
Formula.create( :base => '044', :offset => '015', :subindex => '0', :ord => '3', :iform => '44.1 / 68.1', :word_form => 'gather / mouth', :abbrev_form => 'G / M', :alpha => "GOM");
Formula.create( :base => '044', :offset => '028', :subindex => '0', :ord => '1', :iform => '44.1 / short( 33.1)', :word_form => 'Come-together / short( seal)', :abbrev_form => 'CT / SS', :alpha => "CTOSS");
Formula.create( :base => '044', :offset => '028', :subindex => '0', :ord => '2', :iform => '44.1 / short( 33.1)', :word_form => 'gather / short( seal)', :abbrev_form => 'G / SS', :alpha => "GOSS");
Formula.create( :base => '044', :offset => '028', :subindex => '0', :ord => '3', :iform => '44.1 / short( 33.1)', :word_form => 'join / short( seal)', :abbrev_form => 'J / SS', :alpha => "JOSS");
Formula.create( :base => '044', :offset => '040', :subindex => '0', :ord => '1', :iform => '44.1 / 66.1 / 69.1', :word_form => 'Come-together / sprout / enclosure', :abbrev_form => 'CT / S / E', :alpha => "CTOSOE");
Formula.create( :base => '044', :offset => '040', :subindex => '0', :ord => '2', :iform => '44.1 / 66.1 / 69.1', :word_form => 'gather / sprout / enclosure', :abbrev_form => 'G / S / E', :alpha => "GOSOE");
Formula.create( :base => '044', :offset => '040', :subindex => '0', :ord => '3', :iform => '44.1 / 66.1 / 69.1', :word_form => 'Come-together / sprout / quadrangle', :abbrev_form => 'CT / S / Q', :alpha => "CTOSOQ");
Formula.create( :base => '044', :offset => '040', :subindex => '0', :ord => '4', :iform => '44.1 / 66.1 / 69.1', :word_form => 'gather / sprout / quadrangle', :abbrev_form => 'G / S / Q', :alpha => "GOSOQ");
Formula.create( :base => '045', :offset => '000', :subindex => 'a', :ord => '1', :iform => '45.0.a', :word_form => 'abstract( "blade" ) ', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '045', :offset => '000', :subindex => 'b', :ord => '1', :iform => '45.0.b', :word_form => 'abstract( "flat" ) ', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '045', :offset => '001', :subindex => '0', :ord => '1', :iform => '45.1', :word_form => '{"dart" | "stake"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '045', :offset => '002', :subindex => '0', :ord => '1', :iform => '45.1 + 7.1', :word_form => '{"halberd"}', :abbrev_form => 'H', :alpha => "H");
Formula.create( :base => '045', :offset => '002', :subindex => '0', :ord => '2', :iform => '45.1 + 7.1', :word_form => 'Dart + drag', :abbrev_form => 'D + D', :alpha => "DID");
Formula.create( :base => '045', :offset => '002', :subindex => 'a', :ord => '1', :iform => '10.7 /* 45.2', :word_form => 'Follow /* dagger-ax', :abbrev_form => 'F /* DA', :alpha => "FO-ADA");
Formula.create( :base => '045', :offset => '002', :subindex => 'a', :ord => '2', :iform => '10.7 /* 45.2', :word_form => '( person^2 ) /* dagger-ax', :abbrev_form => '( P^2 ) /* DA', :alpha => "PUTO-ADA");
Formula.create( :base => '045', :offset => '066', :subindex => '0', :ord => '1', :iform => '51.1 * 45.1', :word_form => 'Work * dart', :abbrev_form => 'W * D', :alpha => "WD");
Formula.create( :base => '045', :offset => '066', :subindex => '0', :ord => '2', :iform => '51.1 * 45.1', :word_form => 'Work * arrow', :abbrev_form => 'W * A', :alpha => "WA");
Formula.create( :base => '045', :offset => '069', :subindex => '0', :ord => '1', :iform => '10.1.a * 45.1', :word_form => 'Side-man * dart', :abbrev_form => 'SM * D', :alpha => "SMD");
Formula.create( :base => '045', :offset => '072', :subindex => '0', :ord => '1', :iform => '29.1 {} 45.1', :word_form => 'Divide {} dart', :abbrev_form => 'D {} D', :alpha => "DED");
Formula.create( :base => '046', :offset => '001', :subindex => '0', :ord => '1', :iform => '46.1', :word_form => '{"stool | workbench"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '046', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.57.b / 46.1', :word_form => 'basket / table', :abbrev_form => 'B / T', :alpha => "BOT");
Formula.create( :base => '046', :offset => '013', :subindex => '0', :ord => '1', :iform => 'Like( 111.1) / 46.1', :word_form => 'like( field ) / table', :abbrev_form => 'like( F) / T', :alpha => "FLOT");
Formula.create( :base => '047', :offset => '001', :subindex => '0', :ord => '1', :iform => '47.1', :word_form => '{"encompassing-square"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '047', :offset => '002', :subindex => '0', :ord => '1', :iform => '53.1 * 47.1', :word_form => 'Cloth * all-around', :abbrev_form => 'C * AA', :alpha => "CAA");
Formula.create( :base => '047', :offset => '002', :subindex => '0', :ord => '2', :iform => '53.1 * 47.1', :word_form => 'Cloth * all-around-square', :abbrev_form => 'C * AAS', :alpha => "CAAS");
Formula.create( :base => '047', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.3 / 47.1', :word_form => 'Forest / all-around', :abbrev_form => 'F / AA', :alpha => "FOAA");
Formula.create( :base => '047', :offset => '003', :subindex => '0', :ord => '2', :iform => '77.3 / 47.1', :word_form => 'Forest / all-around-square', :abbrev_form => 'F / AAS', :alpha => "FOAAS");
Formula.create( :base => '047', :offset => '004', :subindex => '0', :ord => '1', :iform => '47.1 [.] 125.1', :word_form => 'All-around [.] insect-snake', :abbrev_form => 'AA [ IS ]', :alpha => "AAEIS");
Formula.create( :base => '047', :offset => '004', :subindex => '0', :ord => '2', :iform => '47.1 [.] 125.1', :word_form => 'All-around-square [.] insect-snake', :abbrev_form => 'AAS [ IS ]', :alpha => "AASEIS");
Formula.create( :base => '047', :offset => '008', :subindex => '0', :ord => '1', :iform => '47.1 [.] 178.1', :word_form => 'All-around [.] long-tail-bird', :abbrev_form => 'AA [ LTB ]', :alpha => "AAELTB");
Formula.create( :base => '047', :offset => '008', :subindex => '0', :ord => '2', :iform => '47.1 [.] 178.1', :word_form => 'All-around-square [.] long-tail-bird', :abbrev_form => 'AAS [ LTB ]', :alpha => "AASELTB");
Formula.create( :base => '047', :offset => '009', :subindex => '0', :ord => '1', :iform => '10.1.a * ( 47.1 [.] 53.1)', :word_form => 'Side-man * (All-around / cloth)', :abbrev_form => 'SM *( AA [.] C)', :alpha => "SMAAEC");
Formula.create( :base => '047', :offset => '009', :subindex => '0', :ord => '2', :iform => '10.1.a * ( 47.1 [.] 53.1)', :word_form => 'Side-man * (All-around-square / cloth)', :abbrev_form => 'SM *( AAS [.] C)', :alpha => "SMAASEC");
Formula.create( :base => '048', :offset => '001', :subindex => '0', :ord => '1', :iform => '48.1', :word_form => '{"bird-flying-rapidly"}', :abbrev_form => 'BIF', :alpha => "BIF");
Formula.create( :base => '048', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.78 * 48.1', :word_form => 'Speak-a-word * bird-in-flight', :abbrev_form => 'SAW * BIF', :alpha => "SAWBIF");
Formula.create( :base => '048', :offset => '003', :subindex => '0', :ord => '1', :iform => '41.3 * 48.1', :word_form => 'Stop-and-go * bird-in-flight', :abbrev_form => 'SAG * BIF', :alpha => "SAGBIF");
Formula.create( :base => '048', :offset => '004', :subindex => '0', :ord => '1', :iform => '48.1 / ( 125.1^2)', :word_form => 'Bird-in-flight / ( insect-snake^2)', :abbrev_form => 'BIF / (IS^2)', :alpha => "BIFODIS");
Formula.create( :base => '049', :offset => '001', :subindex => '0', :ord => '1', :iform => '49.1', :word_form => '{"hairs"|"fine feathers"}', :abbrev_form => 'FL', :alpha => "FL");
Formula.create( :base => '049', :offset => '001', :subindex => '0', :ord => '2', :iform => '49.1', :word_form => 'lines:fine', :abbrev_form => 'L:F', :alpha => "L:F");
Formula.create( :base => '049', :offset => '002', :subindex => '0', :ord => '1', :iform => '126.1 * 49.1', :word_form => 'Clothing * fine-lines', :abbrev_form => 'C * FL', :alpha => "CAFL");
Formula.create( :base => '049', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.1 * 49.1', :word_form => 'Wood-tree * fine-lines', :abbrev_form => 'WT * FL', :alpha => "WTAFL");
Formula.create( :base => '049', :offset => '004', :subindex => '0', :ord => '1', :iform => '10.1 / 49.1', :word_form => 'Person / fine-lines', :abbrev_form => 'P / FL', :alpha => "POFL");
Formula.create( :base => '049', :offset => '012', :subindex => '0', :ord => '1', :iform => '37.1 / 49.1', :word_form => 'Short-wing / fine-lines', :abbrev_form => 'SW / FL', :alpha => "SWOFL");
Formula.create( :base => '049', :offset => '018', :subindex => '0', :ord => '1', :iform => '49.1 * 148.12', :word_form => 'Fine-lines * (head->page)', :abbrev_form => 'FL * (H->P)', :alpha => "FLAHTOP");
Formula.create( :base => '050', :offset => '001', :subindex => '0', :ord => '1', :iform => '50.1', :word_form => '{"pestle"}|{"shield"}', :abbrev_form => 'P | S', :alpha => "POS");
Formula.create( :base => '050', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'dis(50.1)', :word_form => 'dis(pestle-shield)', :abbrev_form => 'dis(PS)', :alpha => "DOPS");
Formula.create( :base => '050', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'dis(50.1)', :word_form => 'dis(pestle|shield)', :abbrev_form => 'dis(P|S)', :alpha => "DOPOS");
Formula.create( :base => '050', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'alt(50.1)', :word_form => 'alt(pestle-shield)', :abbrev_form => 'alt(PS)', :alpha => "APS");
Formula.create( :base => '050', :offset => '001', :subindex => 'b', :ord => '2', :iform => 'alt(50.1)', :word_form => 'alt(pestle|shield)', :abbrev_form => 'alt(P|S)', :alpha => "POSA");
Formula.create( :base => '050', :offset => '002', :subindex => '0', :ord => '1', :iform => '132.1 * 50.1', :word_form => 'Meat * pestle-shield', :abbrev_form => 'M * PS', :alpha => "MAPS");
Formula.create( :base => '050', :offset => '002', :subindex => '0', :ord => '2', :iform => '132.1 * 50.1', :word_form => 'Meat * pestle|shield', :abbrev_form => 'M * P|S', :alpha => "MAPOS");
Formula.create( :base => '050', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.1 * 50.1', :word_form => 'Wood-tree * pestle-shield', :abbrev_form => 'WT * PS', :alpha => "WTAPS");
Formula.create( :base => '050', :offset => '003', :subindex => '0', :ord => '2', :iform => '77.1 * 50.1', :word_form => 'Wood-tree * pestle|shield', :abbrev_form => 'WT * P|S', :alpha => "WTAPOS");
Formula.create( :base => '050', :offset => '004', :subindex => '0', :ord => '1', :iform => '71.1 / 50.1', :word_form => 'Bamboo / pestle-shield', :abbrev_form => 'B / PS', :alpha => "BOPS");
Formula.create( :base => '050', :offset => '004', :subindex => '0', :ord => '2', :iform => '71.1 / 50.1', :word_form => 'Bamboo / pestle|shield', :abbrev_form => 'B / P|S', :alpha => "BOPOS");
Formula.create( :base => '050', :offset => '005', :subindex => '0', :ord => '1', :iform => '54.1 * 50.1', :word_form => 'Woman * offend', :abbrev_form => 'W * O', :alpha => "WAO");
Formula.create( :base => '050', :offset => '005', :subindex => '0', :ord => '2', :iform => '54.1 * 50.1', :word_form => 'Woman * pestle-shield', :abbrev_form => 'W * PS', :alpha => "WAPS");
Formula.create( :base => '050', :offset => '005', :subindex => '0', :ord => '3', :iform => '54.1 * 50.1', :word_form => 'Woman * pestle|shield', :abbrev_form => 'W * P|S', :alpha => "WAPOS");
Formula.create( :base => '050', :offset => '006', :subindex => '0', :ord => '1', :iform => '76.1 / 50.1', :word_form => 'Sun /  pestle|shield', :abbrev_form => 'S / P|S', :alpha => "SOPOS");
Formula.create( :base => '050', :offset => '012', :subindex => '0', :ord => '1', :iform => '2.21 * 50.1', :word_form => 'Water * pestle|shield', :abbrev_form => 'W * P|S', :alpha => "WAPOS");
Formula.create( :base => '050', :offset => '013', :subindex => '0', :ord => '2', :iform => '(24.1 {} 3.2^2) / 50.1', :word_form => '(cover {} mow^2) / pestle|shield', :abbrev_form => '(C {} M^2) / P|S', :alpha => "CEDMOPOS");
Formula.create( :base => '050', :offset => '013', :subindex => '0', :ord => '1', :iform => '3.22 / 50.1', :word_form => 'Net / pestle|shield', :abbrev_form => 'N / P|S', :alpha => "NOPOS");
Formula.create( :base => '050', :offset => '013', :subindex => '0', :ord => '3', :iform => '63.2a / 50.1', :word_form => 'Cave-alt / pestle|shield', :abbrev_form => 'CA / P|S', :alpha => "CAOPOS");
Formula.create( :base => '050', :offset => '014', :subindex => '0', :ord => '1', :iform => '46.14 * 50.1', :word_form => 'Nose * pestle-shield', :abbrev_form => 'N * P|S', :alpha => "NAPS");
Formula.create( :base => '050', :offset => '014', :subindex => '0', :ord => '2', :iform => '46.14 * 50.1', :word_form => 'Nose * pestle|shield', :abbrev_form => 'N * P|S', :alpha => "NAPOS");
Formula.create( :base => '050', :offset => '015', :subindex => '0', :ord => '1', :iform => '50.1^2', :word_form => 'Pestle^2', :abbrev_form => 'P^2', :alpha => "DP");
Formula.create( :base => '050', :offset => '015', :subindex => '0', :ord => '2', :iform => '50.1^2', :word_form => '(pestle|shield)^2', :abbrev_form => '(P|S)^2', :alpha => "DPOS");
Formula.create( :base => '050', :offset => '031', :subindex => '0', :ord => '1', :iform => 'Alt( 50.1)', :word_form => 'alt( pestle|shield )', :abbrev_form => 'alt( P|S)', :alpha => "APOS");
Formula.create( :base => '050', :offset => '041', :subindex => '0', :ord => '3', :iform => '123.1 - hind-legs(123.1)', :word_form => 'Sheep - hind-legs(sheep)', :abbrev_form => 'S - HL(S)', :alpha => "SMHLOS");
Formula.create( :base => '050', :offset => '041', :subindex => '0', :ord => '1', :iform => '1c.1^2 / 50.1', :word_form => 'Dot^2 / pestle|shield', :abbrev_form => 'D^2 / P|S', :alpha => "DDOPOS");
Formula.create( :base => '050', :offset => '041', :subindex => '0', :ord => '2', :iform => '29.1 / 50.1', :word_form => 'divide / pestle|shield', :abbrev_form => 'D / P|S', :alpha => "DOPOS");
Formula.create( :base => '050', :offset => '041', :subindex => '0', :ord => '4', :iform => '(all - hind-legs)(123.1)', :word_form => 'all - hind-legs)(sheep)', :abbrev_form => '(A - HL)(S)', :alpha => "AMHLOS");
Formula.create( :base => '050', :offset => '079', :subindex => '0', :ord => '1', :iform => '1.43 / 50b.1', :word_form => 'Up / alt( pestle|shield)', :abbrev_form => 'U / alt( P|S)', :alpha => "UOPOSA");
Formula.create( :base => '050', :offset => '079', :subindex => '0', :ord => '2', :iform => '1.43 / 50.1', :word_form => 'Up / offend', :abbrev_form => 'U / O', :alpha => "UOO");
Formula.create( :base => '050', :offset => '079', :subindex => '0', :ord => '3', :iform => '39.21 / 4.1', :word_form => 'Stand / post', :abbrev_form => 'S / P', :alpha => "SOP");
Formula.create( :base => '050', :offset => '082', :subindex => '0', :ord => '1', :iform => '50.1 * 35.1', :word_form => ' pestle|shield * knife', :abbrev_form => 'P}S * K', :alpha => "POSAK");
Formula.create( :base => '050', :offset => '083', :subindex => '0', :ord => '1', :iform => '158.1 * 50.1', :word_form => 'Vehicle * pestle|shield', :abbrev_form => 'V * P|S', :alpha => "VAPOS");
Formula.create( :base => '051', :offset => '001', :subindex => '0', :ord => '1', :iform => '51.1', :word_form => '{"carpenters square"}', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '051', :offset => '002', :subindex => '0', :ord => '1', :iform => '51.1 * 26.2', :word_form => 'Work * tap', :abbrev_form => 'W * T', :alpha => "WAT");
Formula.create( :base => '051', :offset => '003', :subindex => '0', :ord => '1', :iform => '51.1 * 34.1', :word_form => 'Work * strength', :abbrev_form => 'W * S', :alpha => "WAS");
Formula.create( :base => '051', :offset => '004', :subindex => '0', :ord => '1', :iform => '51.1 / 150.1', :word_form => 'Work / shellfish', :abbrev_form => 'W / SF', :alpha => "WOSF");
Formula.create( :base => '051', :offset => '007', :subindex => '0', :ord => '1', :iform => '( 24.0  / 141.0 ) * 51.1', :word_form => '( cover / pottery ) * work', :abbrev_form => '( C / P ) * W', :alpha => "COPAW");
Formula.create( :base => '051', :offset => '007', :subindex => '0', :ord => '2', :iform => '141.1 * 51.1', :word_form => 'Crock * work', :abbrev_form => 'C * W', :alpha => "CAW");
Formula.create( :base => '051', :offset => '008', :subindex => '0', :ord => '1', :iform => '132.1 * 51.1', :word_form => 'Meat * work', :abbrev_form => 'M * W', :alpha => "MAW");
Formula.create( :base => '051', :offset => '009', :subindex => '0', :ord => '1', :iform => '89.1.a * 51.1', :word_form => 'Side-hand * work', :abbrev_form => 'SH * W', :alpha => "SHAW");
Formula.create( :base => '051', :offset => '010', :subindex => '0', :ord => '1', :iform => '2.21.a * 51.1', :word_form => 'Side-water * work', :abbrev_form => 'SW * W', :alpha => "SWAW");
Formula.create( :base => '051', :offset => '012', :subindex => '0', :ord => '1', :iform => '51.1 * 148.12', :word_form => 'Work * Head->page', :abbrev_form => 'W * (H->P)', :alpha => "WAHTOP");
Formula.create( :base => '051', :offset => '012', :subindex => '0', :ord => '2', :iform => '51.1 * 148.12', :word_form => 'Work * Head->page', :abbrev_form => 'W * (H->P)', :alpha => "WAHYP");
Formula.create( :base => '051', :offset => '012', :subindex => '0', :ord => '3', :iform => '51.1 * 148.12', :word_form => 'Work * Head->page', :abbrev_form => 'W * (H->P)', :alpha => "WAHUP");
Formula.create( :base => '051', :offset => '013', :subindex => '0', :ord => '1', :iform => '153.1 * 51.1', :word_form => 'Silk-thread * work', :abbrev_form => 'ST * W', :alpha => "STAW");
Formula.create( :base => '051', :offset => '014', :subindex => '0', :ord => '1', :iform => '125.1 * 51.1', :word_form => 'Insect-snake * work', :abbrev_form => 'IS * W', :alpha => "ISAW");
Formula.create( :base => '051', :offset => '015', :subindex => '0', :ord => '1', :iform => '63.2 / 51.1', :word_form => 'Cave / work', :abbrev_form => 'C / W', :alpha => "COW");
Formula.create( :base => '051', :offset => '018', :subindex => '0', :ord => '1', :iform => '51.1 * 89.9', :word_form => 'Work * hold-a-stick', :abbrev_form => 'W * HAS', :alpha => "WAHAS");
Formula.create( :base => '051', :offset => '018', :subindex => '0', :ord => '2', :iform => '51.1 * 89.9.a', :word_form => 'Work * all-around-like', :abbrev_form => 'W * AAL', :alpha => "WAAL");
Formula.create( :base => '051', :offset => '018', :subindex => '0', :ord => '3', :iform => '51.1 * 89.9', :word_form => 'Work * hold-a-stick', :abbrev_form => 'W * HAS', :alpha => "WAHAS");
Formula.create( :base => '051', :offset => '018', :subindex => '0', :ord => '4', :iform => '51.1 * 89.9.a', :word_form => 'Work * all-around-like', :abbrev_form => 'W * AAL', :alpha => "WAAL");
Formula.create( :base => '051', :offset => '023', :subindex => '0', :ord => '1', :iform => '51.1 + 1.1', :word_form => 'Work + bar', :abbrev_form => 'W + B', :alpha => "WIB");
Formula.create( :base => '051', :offset => '027', :subindex => '0', :ord => '1', :iform => '10.1^2 [%] 51.1', :word_form => 'Person^2 -][- work', :abbrev_form => 'P^2 -][- W', :alpha => "DBIW");
Formula.create( :base => '051', :offset => '027', :subindex => '0', :ord => '2', :iform => '10.7 -][- 51.1', :word_form => 'Person^2 [%] work', :abbrev_form => 'P^2 [%] W', :alpha => "DBIW");
Formula.create( :base => '051', :offset => '027', :subindex => '0', :ord => '4', :iform => '10.7 [%] 51.1', :word_form => 'follow [%] work', :abbrev_form => 'F [%] W', :alpha => "FIW");
Formula.create( :base => '051', :offset => '027', :subindex => '0', :ord => '3', :iform => '', :word_form => 'follow -][- work', :abbrev_form => 'F -][- W', :alpha => "FIW");
Formula.create( :base => '051', :offset => '031', :subindex => '0', :ord => '1', :iform => 'Alt( 51.1 )', :word_form => 'alt( work )', :abbrev_form => 'alt( W )', :alpha => "AW");
Formula.create( :base => '052', :offset => '000', :subindex => 'a', :ord => '1', :iform => '52.1.a', :word_form => 'abstract( "hollow" )', :abbrev_form => 'H', :alpha => "H");
Formula.create( :base => '052', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 77.1.a ):( 52.0.a )', :word_form => 'wood:hollow', :abbrev_form => 'W:H', :alpha => "WIH");
Formula.create( :base => '052', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 77.1.a ):( 52.0.a )', :word_form => 'wood:hollowed-out', :abbrev_form => 'W:HO', :alpha => "WIHO");
Formula.create( :base => '052', :offset => '001', :subindex => '0', :ord => '1', :iform => '52.1', :word_form => '{"hollowed out piece of wood"}', :abbrev_form => 'HW', :alpha => "HW");
Formula.create( :base => '053', :offset => '000', :subindex => '0', :ord => '1', :iform => '53.0', :word_form => 'abstract( "cloth" ) ', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '053', :offset => '000', :subindex => 'a', :ord => '1', :iform => '53.0.a', :word_form => 'abstract( "towel" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '053', :offset => '000', :subindex => 'b', :ord => '1', :iform => '53.0.b', :word_form => 'abstract( "rag" ) ', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '053', :offset => '000', :subindex => 'c', :ord => '1', :iform => '53.0.c', :word_form => 'abstract( "ragged" ) ', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '053', :offset => '001', :subindex => '0', :ord => '1', :iform => '53.1', :word_form => '{"hanging handkerchief"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '053', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Stack( 53.1)', :word_form => 'stack( cloth )', :abbrev_form => 'SOC', :alpha => "SOC");
Formula.create( :base => '053', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 53.0.a ):( 53.0.c )', :word_form => 'towel:ragged', :abbrev_form => 'T:R', :alpha => "TIR");
Formula.create( :base => '053', :offset => '002', :subindex => '0', :ord => '2', :iform => 'S( 1.1.c^2 ) |%| 53.1', :word_form => 'stack(dot^2) |%| cloth', :abbrev_form => 'S(D^2) |%| T', :alpha => "SODUTILOT");
Formula.create( :base => '053', :offset => '010', :subindex => '0', :ord => '1', :iform => '(14.80->15.1) / 53.1', :word_form => '(father->left-hand) / cloth', :abbrev_form => '(F->LH) / C', :alpha => "FYLHOC");
Formula.create( :base => '053', :offset => '013', :subindex => '0', :ord => '1', :iform => '53.13.a / 53.1.a', :word_form => 'Belt-and-pendants / Stack-of-cloths', :abbrev_form => 'BAP / SOT', :alpha => "BAPOSOT");
Formula.create( :base => '053', :offset => '013', :subindex => 'a', :ord => '1', :iform => '53.13.a', :word_form => '{ "belt with pendants" }', :abbrev_form => 'BAP', :alpha => "BAP");
Formula.create( :base => '054', :offset => '000', :subindex => '0', :ord => '1', :iform => '54.0', :word_form => 'abstract( "female" ) ', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '054', :offset => '000', :subindex => 'a', :ord => '1', :iform => '54.0.a', :word_form => 'abstract( "woman" ) ', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '054', :offset => '000', :subindex => 'b', :ord => '1', :iform => '54.0.b', :word_form => 'abstract( "kneel" ) ', :abbrev_form => 'A( K )', :alpha => "AK");
Formula.create( :base => '054', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 54.0.a )::( 54.0.b )', :word_form => 'Woman::kneel', :abbrev_form => 'W::K', :alpha => "WAK");
Formula.create( :base => '054', :offset => '001', :subindex => '0', :ord => '1', :iform => '54.1', :word_form => '{"kneeling woman"}', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '054', :offset => '002', :subindex => '0', :ord => '1', :iform => '54.1 * 14.1', :word_form => 'Woman * hand-again', :abbrev_form => 'W * HA', :alpha => "WAHA");
Formula.create( :base => '054', :offset => '005', :subindex => '0', :ord => '1', :iform => '54.1 * 68.1', :word_form => 'Woman * mouth', :abbrev_form => 'W * M', :alpha => "WAM");
Formula.create( :base => '054', :offset => '007', :subindex => '0', :ord => '1', :iform => '54.1 * 55.1', :word_form => 'Woman * child', :abbrev_form => 'W * C', :alpha => "WAC");
Formula.create( :base => '054', :offset => '008', :subindex => '0', :ord => '1', :iform => '76.1 / 54.1', :word_form => 'Sun / woman', :abbrev_form => 'S / W', :alpha => "SOW");
Formula.create( :base => '054', :offset => '010', :subindex => '0', :ord => '1', :iform => '63.1 / 54.1', :word_form => 'Roof / woman', :abbrev_form => 'R / W', :alpha => "ROW");
Formula.create( :base => '054', :offset => '014', :subindex => '0', :ord => '1', :iform => '54.1 / (54.1^2)', :word_form => 'Woman / (woman^2)', :abbrev_form => 'W / W^2', :alpha => "WODW");
Formula.create( :base => '054', :offset => '014', :subindex => '0', :ord => '3', :iform => '54.1 * 50.5', :word_form => 'Woman * (pestle | shield )', :abbrev_form => 'W * (P|S)', :alpha => "WAPOS");
Formula.create( :base => '054', :offset => '014', :subindex => '0', :ord => '2', :iform => 'Tripod( 54.1)', :word_form => 'tripod( woman )', :abbrev_form => 'T( W )', :alpha => "TOW");
Formula.create( :base => '054', :offset => '015', :subindex => '0', :ord => '1', :iform => '54.1 [.] stack( 1c.1 )', :word_form => 'Woman [.] stack( dot)', :abbrev_form => 'W [.] S(D)', :alpha => "WESOD");
Formula.create( :base => '054', :offset => '015', :subindex => '0', :ord => '2', :iform => '54.1 |%| stack( 1c.1 )', :word_form => 'Woman |%| stack( dot)', :abbrev_form => 'W |%| S(D)', :alpha => "WISOD");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '6', :iform => '1.1.a + Alt( 54.1) ', :word_form => 'bar + alt( woman )', :abbrev_form => 'B + A(W)', :alpha => "BIAW");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '8', :iform => '1.1.a + Alt( 54.1) ', :word_form => 'bar + alt( woman )', :abbrev_form => 'B + A(W)', :alpha => "BIWA");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '5', :iform => '1a.1 + Alt( 54.1)', :word_form => 'bar + alt( woman )', :abbrev_form => 'B + A(W)', :alpha => "BIAW");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '7', :iform => '1a.1 + Alt( 54.1)', :word_form => 'bar + alt( woman )', :abbrev_form => 'B + A(W)', :alpha => "BIWA");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '1', :iform => 'Alt( 54.1) + 1a.1', :word_form => 'alt( woman ) + bar', :abbrev_form => 'A(W) + B', :alpha => "AWIB");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '2', :iform => 'Alt( 54.1) + 1.1.a', :word_form => 'alt( woman ) + bar', :abbrev_form => 'A(W) + B', :alpha => "AWIB");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '3', :iform => 'Alt( 54.1) + 1a.1', :word_form => 'alt( woman ) + bar', :abbrev_form => 'A(W) + B', :alpha => "WAIB");
Formula.create( :base => '054', :offset => '028', :subindex => '0', :ord => '4', :iform => 'Alt( 54.1) + 1.1.a', :word_form => 'alt( woman ) + bar', :abbrev_form => 'A(W) + B', :alpha => "WAIB");
Formula.create( :base => '055', :offset => '001', :subindex => '0', :ord => '1', :iform => '55.1', :word_form => '{"child with legs bundled"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '055', :offset => '001', :subindex => '0', :ord => '2', :iform => '55.1', :word_form => '{"child with legs bundled"}', :abbrev_form => 'EB1', :alpha => "EB1");
Formula.create( :base => '055', :offset => '002', :subindex => '0', :ord => '1', :iform => '63.1 / 55.1', :word_form => 'Roof / child', :abbrev_form => 'R / C', :alpha => "ROC");
Formula.create( :base => '055', :offset => '003', :subindex => '0', :ord => '1', :iform => '10.1.a * 55.1', :word_form => 'Side-man * child', :abbrev_form => 'SM * C', :alpha => "SMAC");
Formula.create( :base => '055', :offset => '004', :subindex => '0', :ord => '1', :iform => '55.1 * 25.2', :word_form => 'Child * tap', :abbrev_form => 'C * T', :alpha => "CAT");
Formula.create( :base => '055', :offset => '005', :subindex => '0', :ord => '1', :iform => '103.1 / 55.1', :word_form => 'Claw / child', :abbrev_form => 'C / C', :alpha => "COC");
Formula.create( :base => '055', :offset => '005', :subindex => '0', :ord => '3', :iform => '103.1 / 55.1', :word_form => 'Claw / child', :abbrev_form => 'C / TAF', :alpha => "COTAF");
Formula.create( :base => '055', :offset => '010', :subindex => '0', :ord => '1', :iform => '( 108.1 * 162.1 ) / 55.1', :word_form => '(grain * short-tailed-bird)  / child', :abbrev_form => '(G * STB) / C', :alpha => "GASTBOC");
Formula.create( :base => '055', :offset => '010', :subindex => '0', :ord => '2', :iform => '( 108.1 * 162.1 ) / 55.1', :word_form => '(grain * bird-of-short-tail)  / child', :abbrev_form => '(G * BOST ) / C', :alpha => "GABOSTOC");
Formula.create( :base => '055', :offset => '010', :subindex => '0', :ord => '3', :iform => '( 108.1 * 162.1 ) / 55.1', :word_form => '(grain * short( tail( bird)))  / child', :abbrev_form => '(G * S ( T(B))) / C', :alpha => "GASOTOBOC");
Formula.create( :base => '055', :offset => '010', :subindex => '0', :ord => '5', :iform => '108.1 / 55.1', :word_form => 'Grain / child', :abbrev_form => 'G / C', :alpha => "GOC");
Formula.create( :base => '055', :offset => '010', :subindex => '0', :ord => '4', :iform => '162.43 / 55.1', :word_form => 'Immature / child', :abbrev_form => 'I / C', :alpha => "IOC");
Formula.create( :base => '055', :offset => '012', :subindex => '0', :ord => '1', :iform => '55.1 * 8.1', :word_form => 'Child * swallow', :abbrev_form => 'C * S', :alpha => "CAS");
Formula.create( :base => '055', :offset => '012', :subindex => '0', :ord => '2', :iform => '55.1 * 8.1.a', :word_form => 'Child * alt( swallow )', :abbrev_form => 'C * A( S)', :alpha => "CAAS");
Formula.create( :base => '055', :offset => '012', :subindex => '0', :ord => '3', :iform => '55.1 * 8.1.a', :word_form => 'Child * L-hook', :abbrev_form => 'C * LH', :alpha => "CALH");
Formula.create( :base => '055', :offset => '013', :subindex => '0', :ord => '5', :iform => '55.1 \ 77.1', :word_form => 'child \ Wood-tree', :abbrev_form => 'C \ WT', :alpha => "CUWT");
Formula.create( :base => '055', :offset => '013', :subindex => '0', :ord => '6', :iform => '55.1 \ 77.1', :word_form => 'child \ Wood( tree)', :abbrev_form => 'C \ W(T)', :alpha => "CUWOT");
Formula.create( :base => '055', :offset => '013', :subindex => '0', :ord => '7', :iform => '55.1 \ 77.1', :word_form => 'child \ (tree->wood)', :abbrev_form => 'C \ (T->W)', :alpha => "CUTYW");
Formula.create( :base => '055', :offset => '013', :subindex => '0', :ord => '1', :iform => '77.1 / 55.1', :word_form => 'Wood-tree / child', :abbrev_form => 'WT / C', :alpha => "WTOC");
Formula.create( :base => '055', :offset => '013', :subindex => '0', :ord => '2', :iform => '77.1 / 55.1', :word_form => 'Wood( tree) / child', :abbrev_form => 'W(T) / C', :alpha => "WOTOC");
Formula.create( :base => '055', :offset => '013', :subindex => '0', :ord => '3', :iform => '77.1 / 55.1', :word_form => '(tree->wood) / child', :abbrev_form => '(T->W) / C', :alpha => "TYWOC");
Formula.create( :base => '055', :offset => '013', :subindex => '0', :ord => '4', :iform => '77.1 / 55.1', :word_form => '(tree->wood) / child', :abbrev_form => '(T->W) / C', :alpha => "TTOWOC");
Formula.create( :base => '055', :offset => '014', :subindex => '0', :ord => '1', :iform => '55.1 * ( 7.1 / 153.1)', :word_form => 'Child * (drag / silk-thread)', :abbrev_form => 'C * ( D / ST)', :alpha => "CADOST");
Formula.create( :base => '055', :offset => '014', :subindex => '0', :ord => '2', :iform => '55.1 * 153.12', :word_form => 'Child * drag-line', :abbrev_form => 'C * DL', :alpha => "CADL");
Formula.create( :base => '055', :offset => '016', :subindex => '0', :ord => '3', :iform => 'flip( 55.1)', :word_form => 'flip( baby)', :abbrev_form => 'F( B)', :alpha => "FOB");
Formula.create( :base => '055', :offset => '016', :subindex => '0', :ord => '2', :iform => 'inv( 55.1)', :word_form => 'inv( baby)', :abbrev_form => 'inv( B)', :alpha => "IOB");
Formula.create( :base => '055', :offset => '016', :subindex => '0', :ord => '1', :iform => 'Upside-down( 55.1)', :word_form => 'Upside-down( baby)', :abbrev_form => 'USD( B)', :alpha => "USDB");
Formula.create( :base => '055', :offset => '033', :subindex => '0', :ord => '1', :iform => '40.1 / tripod( 55.1)', :word_form => 'Recliner / tripod( child)', :abbrev_form => 'R / T(C)', :alpha => "ROTOC");
Formula.create( :base => '055', :offset => '033', :subindex => '0', :ord => '2', :iform => '40.1 / 55.1 / ( 55.1^2)', :word_form => 'Recliner / child / ( child^2 )', :abbrev_form => 'R / C / (C^2)', :alpha => "ROCODC");
Formula.create( :base => '055', :offset => '033', :subindex => '0', :ord => '3', :iform => '40.1 / 55.1 / ( 55.1^2)', :word_form => 'Recliner / child / ( child^2 )', :abbrev_form => 'R / C / (C^2)', :alpha => "ROCOCUT");
Formula.create( :base => '055', :offset => '035', :subindex => '0', :ord => '3', :iform => '(1 - right-arm)( 55.1)', :word_form => '(1 - right-arm)( child )', :abbrev_form => '(1 - RA)( C )', :alpha => "IMRAOC");
Formula.create( :base => '055', :offset => '035', :subindex => '0', :ord => '2', :iform => '55.1 - right-arm( 55.1 )', :word_form => 'Child - right-arm( child )', :abbrev_form => 'C - RA( C )', :alpha => "CMRAOC");
Formula.create( :base => '055', :offset => '035', :subindex => '0', :ord => '1', :iform => 'Alt( 55.1 )', :word_form => '{"child missing right arm"}', :abbrev_form => 'A( C )', :alpha => "AOC");
Formula.create( :base => '055', :offset => '036', :subindex => '0', :ord => '3', :iform => '(1 - left-arm)( 55.1 )', :word_form => '(1 - left-arm)( child )', :abbrev_form => '(1 - LA)( C )', :alpha => "IMLAOC");
Formula.create( :base => '055', :offset => '036', :subindex => '0', :ord => '2', :iform => '55.1 - left-arm( 55.1 )', :word_form => 'Child - left-arm( child )', :abbrev_form => 'C - LA( C )', :alpha => "CMLAOC");
Formula.create( :base => '055', :offset => '036', :subindex => '0', :ord => '1', :iform => 'Alt( 55.1 )', :word_form => '{"child missing left arm"}', :abbrev_form => 'A( C )', :alpha => "AOC");
Formula.create( :base => '055', :offset => '037', :subindex => '0', :ord => '3', :iform => '(1 - arms)( 55.1 )', :word_form => '(1 - arms)( child )', :abbrev_form => '(1 - A)( C )', :alpha => "OMAOC");
Formula.create( :base => '055', :offset => '037', :subindex => '0', :ord => '5', :iform => '(1 - arms)( 55.1 )', :word_form => '(1 - arms)( child )', :abbrev_form => '(1 - A)( C )', :alpha => "IMAOC");
Formula.create( :base => '055', :offset => '037', :subindex => '0', :ord => '1', :iform => 'Alt( 55.1 )', :word_form => '{"child missing both arms"}', :abbrev_form => 'A( C )', :alpha => "AOC");
Formula.create( :base => '056', :offset => '001', :subindex => '0', :ord => '2', :iform => '56.1', :word_form => '{"funnel"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '056', :offset => '001', :subindex => '0', :ord => '1', :iform => '56.1', :word_form => '{"funnel"}|{"wash-basin"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '056', :offset => '001', :subindex => '0', :ord => '3', :iform => '56.1', :word_form => '{"wash-basin"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '056', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * 56.1', :word_form => 'Side-water * funnel|wash-basin', :abbrev_form => 'SW * F|WB', :alpha => "SWAFOWB");
Formula.create( :base => '056', :offset => '002', :subindex => '0', :ord => '2', :iform => '2.21.a * 56.1', :word_form => 'Side-water * funnel', :abbrev_form => 'SW * F', :alpha => "SWAF");
Formula.create( :base => '056', :offset => '002', :subindex => '0', :ord => '3', :iform => '2.21.a * 56.1', :word_form => 'Side-water * wash-basin', :abbrev_form => 'SW * WB', :alpha => "SWAWB");
Formula.create( :base => '056', :offset => '003', :subindex => '0', :ord => '1', :iform => '177.1 * 56.1', :word_form => 'Horse *  funnel|wash-basin', :abbrev_form => 'H * F|WB', :alpha => "HAFOWB");
Formula.create( :base => '056', :offset => '003', :subindex => '0', :ord => '2', :iform => '177.1 * 56.1', :word_form => 'Horse *  funnel', :abbrev_form => 'H * F', :alpha => "HAF");
Formula.create( :base => '056', :offset => '003', :subindex => '0', :ord => '3', :iform => '177.1 * 56.1', :word_form => 'Horse * wash-basin', :abbrev_form => 'H * WB', :alpha => "HAWB");
Formula.create( :base => '056', :offset => '004', :subindex => '0', :ord => '1', :iform => '65.1 * 56.1', :word_form => 'Bow *  funnel|wash-basin', :abbrev_form => 'B * F|WB', :alpha => "BAFOWB");
Formula.create( :base => '056', :offset => '004', :subindex => '0', :ord => '2', :iform => '65.1 * 56.1', :word_form => 'Bow *  funnel', :abbrev_form => 'B * F', :alpha => "BAF");
Formula.create( :base => '056', :offset => '004', :subindex => '0', :ord => '3', :iform => '65.1 * 56.1', :word_form => 'Bow *  wash-basin', :abbrev_form => 'B * WB', :alpha => "BAWB");
Formula.create( :base => '056', :offset => '005', :subindex => '0', :ord => '1', :iform => '118.1 * 56.1', :word_form => 'Waving-banner * funnel|wash-basin', :abbrev_form => 'WB * F|WB', :alpha => "WBAFOWB");
Formula.create( :base => '056', :offset => '005', :subindex => '0', :ord => '3', :iform => '118.1 * 56.1', :word_form => 'Waving-banner * funnel', :abbrev_form => 'WB * F', :alpha => "WBAF");
Formula.create( :base => '056', :offset => '005', :subindex => '0', :ord => '5', :iform => '118.1 * 56.1', :word_form => 'Waving-banner * wash-basin', :abbrev_form => 'WB * WB', :alpha => "WBAWB");
Formula.create( :base => '056', :offset => '006', :subindex => '0', :ord => '1', :iform => '70.1 * 56.1', :word_form => 'Earth * funnel|wash-basin', :abbrev_form => 'E * F|WB', :alpha => "EAFOWB");
Formula.create( :base => '056', :offset => '006', :subindex => '0', :ord => '2', :iform => '70.1 * 56.1', :word_form => 'Earth * funnel', :abbrev_form => 'E * F', :alpha => "EAF");
Formula.create( :base => '056', :offset => '006', :subindex => '0', :ord => '3', :iform => '70.1 * 56.1', :word_form => 'Earth * wash-basin', :abbrev_form => 'E * WB', :alpha => "EAWB");
Formula.create( :base => '056', :offset => '007', :subindex => '0', :ord => '1', :iform => '10.1.a * 56.1', :word_form => 'Side-person * funnel|wash-basin', :abbrev_form => 'SP * F|WB', :alpha => "SPAFOWB");
Formula.create( :base => '056', :offset => '007', :subindex => '0', :ord => '2', :iform => '10.1.a * 56.1', :word_form => 'Side-person * funnel', :abbrev_form => 'SP * F', :alpha => "SPAF");
Formula.create( :base => '056', :offset => '007', :subindex => '0', :ord => '3', :iform => '10.1.a * 56.1', :word_form => 'Side-person * wash-basin', :abbrev_form => 'SP * WB', :alpha => "SPAWB");
Formula.create( :base => '056', :offset => '008', :subindex => '0', :ord => '1', :iform => '54.1 * 56.1', :word_form => 'Woman * funnel|wash-basin', :abbrev_form => 'W * F|WB', :alpha => "WAFOWB");
Formula.create( :base => '056', :offset => '008', :subindex => '0', :ord => '2', :iform => '54.1 * 56.1', :word_form => 'Woman * funnel', :abbrev_form => 'W * F', :alpha => "WAF");
Formula.create( :base => '056', :offset => '008', :subindex => '0', :ord => '3', :iform => '54.1 * 56.1', :word_form => 'Woman * wash-basin', :abbrev_form => 'W * WB', :alpha => "WAWB");
Formula.create( :base => '056', :offset => '009', :subindex => '0', :ord => '1', :iform => '92.1 * 56.1', :word_form => 'Ox * funnel|wash-basin', :abbrev_form => 'O * F|WB', :alpha => "OAFOWB");
Formula.create( :base => '056', :offset => '009', :subindex => '0', :ord => '2', :iform => '92.1 * 56.1', :word_form => 'Ox * funnel', :abbrev_form => 'O * F', :alpha => "OAF");
Formula.create( :base => '056', :offset => '009', :subindex => '0', :ord => '3', :iform => '92.1 * 56.1', :word_form => 'Ox * wash-basin', :abbrev_form => 'O * WB', :alpha => "OAWB");
Formula.create( :base => '056', :offset => '010', :subindex => '0', :ord => '1', :iform => '89.1.a * 125.13', :word_form => 'Side-hand * up-right( insect|snake)', :abbrev_form => 'SH * UR( I|S)', :alpha => "SHAURIOS");
Formula.create( :base => '056', :offset => '010', :subindex => '0', :ord => '2', :iform => '89.1.a * 125.13', :word_form => 'Side-hand * up-right( insect|snake)', :abbrev_form => 'SH * UR( I|S)', :alpha => "SHAURIS");
Formula.create( :base => '056', :offset => '010', :subindex => '0', :ord => '3', :iform => '89.1.a * 125.13', :word_form => 'Side-hand * up-right( insect|snake)', :abbrev_form => 'SH * UR( I|S)', :alpha => "SHURIOS");
Formula.create( :base => '056', :offset => '010', :subindex => '0', :ord => '4', :iform => '89.1.a * ( 10.1.d / 56.1 )', :word_form => 'Side-hand * ( top-person /  funnel|wash-basin)', :abbrev_form => 'SH * (TP / F|WB)', :alpha => "SHATPOFOWB");
Formula.create( :base => '056', :offset => '010', :subindex => '0', :ord => '5', :iform => '89.1.a * ( 10.1.d / 56.1 )', :word_form => 'Side-hand * ( top-person /  funnel )', :abbrev_form => 'SH * (TP / F)', :alpha => "SHATPOF");
Formula.create( :base => '056', :offset => '010', :subindex => '0', :ord => '6', :iform => '89.1.a * ( 10.1.d / 56.1 )', :word_form => 'Side-hand * ( top-person / wash-basin)', :abbrev_form => 'SH * (TP / WB)', :alpha => "SHATPOWB");
Formula.create( :base => '056', :offset => '011', :subindex => '0', :ord => '1', :iform => '22.2 [.] 56.1', :word_form => 'Hollow-wood [.] funnel|wash-basin', :abbrev_form => 'HW [.] F|WB', :alpha => "HWEFOWB");
Formula.create( :base => '056', :offset => '011', :subindex => '0', :ord => '2', :iform => '22.2 [.] 56.1', :word_form => 'Hollow-wood [.] funnel', :abbrev_form => 'HW [.] F', :alpha => "HWEF");
Formula.create( :base => '056', :offset => '011', :subindex => '0', :ord => '3', :iform => '22.2 [.] 56.1', :word_form => 'Hollow-wood [.] wash-basin', :abbrev_form => 'HW [.] WB', :alpha => "HWEWB");
Formula.create( :base => '056', :offset => '011', :subindex => '0', :ord => '4', :iform => '22.2 [.] 56.1', :word_form => 'Box [.] funnel|wash-basin', :abbrev_form => 'B [.] F|WB', :alpha => "BEFOWB");
Formula.create( :base => '056', :offset => '011', :subindex => '0', :ord => '5', :iform => '22.2 [.] 56.1', :word_form => 'Box [.] funnel', :abbrev_form => 'B [.] F', :alpha => "BEF");
Formula.create( :base => '056', :offset => '011', :subindex => '0', :ord => '6', :iform => '22.2 [.] 56.1', :word_form => 'Box [.] wash-basin', :abbrev_form => 'B [.] WB', :alpha => "BEWB");
Formula.create( :base => '057', :offset => '001', :subindex => '0', :ord => '1', :iform => '57.1', :word_form => '{"threads  in loom"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '057', :offset => '001', :subindex => '0', :ord => '2', :iform => '57.1', :word_form => '{"threads  in loom"}', :abbrev_form => 'ST', :alpha => "ST");
Formula.create( :base => '057', :offset => '001', :subindex => '0', :ord => '3', :iform => '57.1', :word_form => '{"threads  in loom"}', :abbrev_form => 'HS6', :alpha => "HS6");
Formula.create( :base => '057', :offset => '002', :subindex => '0', :ord => '1', :iform => '153.1 * 57.1', :word_form => 'Silk-thread * threads-on-loom', :abbrev_form => 'ST * TOL', :alpha => "STATOL");
Formula.create( :base => '057', :offset => '003', :subindex => '0', :ord => '1', :iform => '68.78 * 57.1', :word_form => 'Speak-a-word * threads-on-loom', :abbrev_form => 'SAW * TOL', :alpha => "SAWATOL");
Formula.create( :base => '057', :offset => '004', :subindex => '0', :ord => '1', :iform => '57.1 / 83.1', :word_form => 'Threads-on-loom / heart', :abbrev_form => 'TOL / H', :alpha => "TOLOH");
Formula.create( :base => '057', :offset => '004', :subindex => '0', :ord => '2', :iform => '57.1 / 83.1', :word_form => 'heart \ Threads-on-loom', :abbrev_form => 'H \TOL', :alpha => "HUTOL");
Formula.create( :base => '057', :offset => '005', :subindex => '0', :ord => '3', :iform => '88.58 * 57.1', :word_form => 'Walk * Threads-on-loom', :abbrev_form => 'W * TOL', :alpha => "WATOL");
Formula.create( :base => '057', :offset => '005', :subindex => '0', :ord => '1', :iform => '(99.1/88.1) * 57.1', :word_form => '((bent-over->die-young) / stop) * Threads-on-loom', :abbrev_form => '((BO-DY)/S) * TOL', :alpha => "BODYOSATOL");
Formula.create( :base => '057', :offset => '006', :subindex => '0', :ord => '2', :iform => '159.1 * 57.1', :word_form => 'Wine-jug * Threads-on-loom', :abbrev_form => 'WJ * TOL', :alpha => "WJATOL");
Formula.create( :base => '057', :offset => '006', :subindex => '0', :ord => '3', :iform => '159.1 * 57.1', :word_form => 'Jug-of-wine  * Threads-on-loom', :abbrev_form => 'J(W) * TOL', :alpha => "JOWATOL");
Formula.create( :base => '057', :offset => '007', :subindex => '0', :ord => '1', :iform => '54.1 * 57.1', :word_form => 'Woman * Threads-on-loom', :abbrev_form => 'W * TOL', :alpha => "WATOL");
Formula.create( :base => '057', :offset => '008', :subindex => '0', :ord => '1', :iform => '57.1 * 26.2', :word_form => 'Threads-on-loom * tap', :abbrev_form => 'TOL * T', :alpha => "TOLAT");
Formula.create( :base => '058', :offset => '001', :subindex => '0', :ord => '1', :iform => '58.1', :word_form => '{"snake"} | {"fetus"}', :abbrev_form => 'S|F', :alpha => "SOF");
Formula.create( :base => '058', :offset => '002', :subindex => '0', :ord => '1', :iform => '1.46.a * 58.1', :word_form => 'Side-revelation * snake-or-fetus', :abbrev_form => 'SR * SOF', :alpha => "SRASOF");
Formula.create( :base => '058', :offset => '003', :subindex => '0', :ord => '1', :iform => 'Alt( 58.1)', :word_form => 'alt( snake-or-fetus )', :abbrev_form => 'alt( SOF )', :alpha => "AOSOF");
Formula.create( :base => '059', :offset => '000', :subindex => '0', :ord => '1', :iform => '59.0', :word_form => 'abstract( "fetus" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '059', :offset => '000', :subindex => 'a', :ord => '1', :iform => '59.0.a', :word_form => 'abstract( "new born child" )', :abbrev_form => 'A( NBC )', :alpha => "ANBC");
Formula.create( :base => '059', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 59.0 | 59.0.a }', :word_form => '{ fetus | Child-is-born }', :abbrev_form => '{ F | CIB }', :alpha => "FOCIB");
Formula.create( :base => '059', :offset => '001', :subindex => '0', :ord => '1', :iform => '59.1', :word_form => '{"fetus"|"new-born-child"}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '059', :offset => '001', :subindex => '0', :ord => '3', :iform => '59.1', :word_form => '{"fetus"|"new-born-child"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '059', :offset => '002', :subindex => '0', :ord => '1', :iform => '59.1^2', :word_form => 'Tiny^2', :abbrev_form => 'T^2', :alpha => "TUT");
Formula.create( :base => '059', :offset => '002', :subindex => '0', :ord => '2', :iform => '59.1^2', :word_form => 'Tiny^2', :abbrev_form => 'T^2', :alpha => "DT");
Formula.create( :base => '059', :offset => '019', :subindex => '0', :ord => '1', :iform => '59.1 * 34.1', :word_form => 'Tiny * strength', :abbrev_form => 'T * S', :alpha => "TAS");
Formula.create( :base => '059', :offset => '023', :subindex => '0', :ord => '1', :iform => 'Inv( 102.1)', :word_form => 'inv( give )', :abbrev_form => 'inv( G )', :alpha => "IOG");
Formula.create( :base => '059', :offset => '024', :subindex => '0', :ord => '1', :iform => '24.1 / 59.1', :word_form => 'Cover / tiny', :abbrev_form => 'C / T', :alpha => "COT");
Formula.create( :base => '059', :offset => '024', :subindex => '0', :ord => '2', :iform => '32.1 / 59.1', :word_form => 'Enter / tiny', :abbrev_form => 'E / T', :alpha => "EOT");
Formula.create( :base => '059', :offset => '036', :subindex => '0', :ord => '1', :iform => '(66.1 / 59.1) | 59.36.a', :word_form => '(sprout / fetus ) | shuttle', :abbrev_form => '(S / F) | S', :alpha => "SOFOS");
Formula.create( :base => '059', :offset => '036', :subindex => 'a', :ord => '1', :iform => '59.36.a', :word_form => '{"shuttle"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '060', :offset => '001', :subindex => '0', :ord => '1', :iform => '60.1', :word_form => '{"half-room"|"cliff-room"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '060', :offset => '002', :subindex => '0', :ord => '1', :iform => '60.1 / 77.1', :word_form => 'Shelter / (tree->wood)', :abbrev_form => 'S / (T->W)', :alpha => "SOTYW");
Formula.create( :base => '060', :offset => '002', :subindex => '0', :ord => '2', :iform => '60.1 / 77.1', :word_form => 'Shelter / wood-tree', :abbrev_form => 'S / WT', :alpha => "SOWT");
Formula.create( :base => '061', :offset => '001', :subindex => '0', :ord => '1', :iform => '61.1.a [*] 61.1.b', :word_form => 'Ladle [*] contents', :abbrev_form => 'L [*] C', :alpha => "LEC");
Formula.create( :base => '061', :offset => '001', :subindex => '0', :ord => '2', :iform => '61.1.a [*] 1.1.c', :word_form => 'Ladle [*] dot', :abbrev_form => 'L [*] D', :alpha => "LED");
Formula.create( :base => '061', :offset => '001', :subindex => 'a', :ord => '1', :iform => '61.1.a', :word_form => '{"ladle"}', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '061', :offset => '001', :subindex => 'b', :ord => '1', :iform => '1.1.c', :word_form => 'dot', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '061', :offset => '002', :subindex => '0', :ord => '1', :iform => '77.1 * 61.1', :word_form => '(tree->wood) * spoon', :abbrev_form => '(T->W) * S', :alpha => "TYWAS");
Formula.create( :base => '061', :offset => '002', :subindex => '0', :ord => '2', :iform => '77.1 * (61.1.a [*] 61.1.b)', :word_form => '(tree->wood) * ( Ladle [*] contents)', :abbrev_form => '(T->W) * ( L [*] C)', :alpha => "TYWALEC");
Formula.create( :base => '061', :offset => '003', :subindex => '0', :ord => '1', :iform => '82.1 * 61.1', :word_form => 'Fire * spoon', :abbrev_form => 'F * S', :alpha => "FAS");
Formula.create( :base => '061', :offset => '003', :subindex => '0', :ord => '2', :iform => '82.1 * (61.1.a [*] 61.1.b)', :word_form => 'Fire * ( Ladle [*] contents)', :abbrev_form => 'F * ( L [*] C)', :alpha => "FALEC");
Formula.create( :base => '061', :offset => '004', :subindex => '0', :ord => '1', :iform => '159.1 * 61.1', :word_form => 'Jug-of-wine * spoon', :abbrev_form => 'JOW * S', :alpha => "JOWAS");
Formula.create( :base => '061', :offset => '004', :subindex => '0', :ord => '2', :iform => '159.1 * (61.1.a [*] 61.1.b)', :word_form => 'Jug-of-wine * ( Ladle [*] contents)', :abbrev_form => 'JOW * ( L [*] C)', :alpha => "JOWALEC");
Formula.create( :base => '061', :offset => '005', :subindex => '0', :ord => '1', :iform => '44.3 * 61.1', :word_form => 'Gold * spoon', :abbrev_form => 'G * S', :alpha => "GAS");
Formula.create( :base => '061', :offset => '005', :subindex => '0', :ord => '2', :iform => '44.3 * (61.1.a [*] 61.1.b)', :word_form => 'Gold * ( Ladle [*] contents)', :abbrev_form => 'G * ( L [*] C)', :alpha => "GALEC");
Formula.create( :base => '061', :offset => '005', :subindex => '0', :ord => '3', :iform => '44.3 * 18.36', :word_form => 'Gold * alt( tangle-mouth)', :abbrev_form => 'G * A( TM )', :alpha => "GATMA");
Formula.create( :base => '061', :offset => '005', :subindex => '0', :ord => '4', :iform => '44.3 * 18.36', :word_form => 'Gold * hook', :abbrev_form => 'G * H', :alpha => "GAH");
Formula.create( :base => '061', :offset => '006', :subindex => '0', :ord => '1', :iform => '146.1 * 61.1', :word_form => 'Cat-like * spoon', :abbrev_form => 'CL * S', :alpha => "CLAS");
Formula.create( :base => '061', :offset => '006', :subindex => '0', :ord => '2', :iform => '146.1 * (61.1.a [*] 61.1.b)', :word_form => 'Cat-like * ( Ladle [*] contents)', :abbrev_form => 'CL * ( L [*] C)', :alpha => "CLALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '5', :iform => '(76.1-> 76.2 ) * 61.1', :word_form => '(sun->White) * spoon', :abbrev_form => '(S->W) * S', :alpha => "STOWAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '6', :iform => '(76.1-> 76.2 ) * (61.1.a [*] 61.1.b)', :word_form => '(sun->White) * ( Ladle [*] contents)', :abbrev_form => '(S->W) * ( L [*] C)', :alpha => "STOWALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '7', :iform => '(76.1-> 76.2 ) * 61.1', :word_form => '(sun->White) * spoon', :abbrev_form => '(S->W) * S', :alpha => "SYWAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '8', :iform => '(76.1-> 76.2 ) * (61.1.a [*] 61.1.b)', :word_form => '(sun->White) * ( Ladle [*] contents)', :abbrev_form => '(S->W) * ( L [*] C)', :alpha => "SYWALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '13', :iform => '(76.1-> 76.2 ) * 61.1', :word_form => '(sun->White) * spoon', :abbrev_form => '(S->W) * S', :alpha => "STOWAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '14', :iform => '(76.1-> 76.2 ) * (61.1.a [*] 61.1.b)', :word_form => '(sun->White) * ( Ladle [*] contents)', :abbrev_form => '(S->W) * ( L [*] C)', :alpha => "STOWALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '15', :iform => '(76.1-> 76.2 ) * 61.1', :word_form => '(sun->White) * spoon', :abbrev_form => '(S->W) * S', :alpha => "SYWAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '16', :iform => '(76.1-> 76.2 ) * (61.1.a [*] 61.1.b)', :word_form => '(sun->White) * ( Ladle [*] contents)', :abbrev_form => '(S->W) * ( L [*] C)', :alpha => "SYWALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '1', :iform => ' 76.1 * 61.1', :word_form => 'Sun * spoon', :abbrev_form => 'S * S', :alpha => "SAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '2', :iform => ' 76.1 * (61.1.a [*] 61.1.b)', :word_form => 'sun * ( Ladle [*] contents)', :abbrev_form => 'S * ( L [*] C)', :alpha => "SALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '9', :iform => ' 76.1 * 61.1', :word_form => 'Sun * spoon', :abbrev_form => 'S * S', :alpha => "SAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '10', :iform => ' 76.1 * (61.1.a [*] 61.1.b)', :word_form => 'sun * ( Ladle [*] contents)', :abbrev_form => 'S * ( L [*] C)', :alpha => "SALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '3', :iform => ' 76.2 * 61.1', :word_form => 'White  * spoon', :abbrev_form => 'W * S', :alpha => "WAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '4', :iform => ' 76.2 * (61.1.a [*] 61.1.b)', :word_form => 'White * ( Ladle [*] contents)', :abbrev_form => 'W * ( L [*] C)', :alpha => "WALEC");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '11', :iform => ' 76.2 * 61.1', :word_form => 'White  * spoon', :abbrev_form => 'W * S', :alpha => "WAS");
Formula.create( :base => '061', :offset => '007', :subindex => '0', :ord => '12', :iform => ' 76.2 * (61.1.a [*] 61.1.b)', :word_form => 'White * ( Ladle [*] contents)', :abbrev_form => 'W * ( L [*] C)', :alpha => "WALEC");
Formula.create( :base => '061', :offset => '008', :subindex => '0', :ord => '1', :iform => '153.1 * 61.1', :word_form => 'Silk-thread * spoon', :abbrev_form => 'ST * S', :alpha => "STAS");
Formula.create( :base => '061', :offset => '008', :subindex => '0', :ord => '2', :iform => '153.1 * (61.1.a [*] 61.1.b)', :word_form => 'Silk-thread * ( Ladle [*] contents)', :abbrev_form => 'ST * ( L [*] C)', :alpha => "STALEC");
Formula.create( :base => '061', :offset => '009', :subindex => '0', :ord => '1', :iform => '61.1.b / 61.1', :word_form => 'Contents / spoon', :abbrev_form => 'C / S', :alpha => "COS");
Formula.create( :base => '061', :offset => '009', :subindex => '0', :ord => '2', :iform => '61.1.b / (61.1.a [*] 61.1.b)', :word_form => 'Contents / ( Ladle [*] contents)', :abbrev_form => 'C  / ( L [*] C)', :alpha => "COLEC");
Formula.create( :base => '062', :offset => '001', :subindex => '0', :ord => '1', :iform => '62.1.a / 62.1.b', :word_form => 'Sprout / root', :abbrev_form => 'S / R', :alpha => "SOR");
Formula.create( :base => '062', :offset => '001', :subindex => 'a', :ord => '1', :iform => '62.1.a', :word_form => '{"sprout"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '062', :offset => '001', :subindex => 'b', :ord => '1', :iform => '62.1.b', :word_form => '{"root"}', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '062', :offset => '002', :subindex => '0', :ord => '1', :iform => '63.1 / 62.1', :word_form => 'Roof / sprout-over-root', :abbrev_form => 'R / SOR', :alpha => "ROSOR");
Formula.create( :base => '062', :offset => '003', :subindex => '0', :ord => '1', :iform => '68.78 * (63.1 / 62.1)', :word_form => 'Speak-a-word * (Roof / sprout-over-root)', :abbrev_form => 'SAW * ( R / SOR )', :alpha => "SAWAROSOR");
Formula.create( :base => '062', :offset => '004', :subindex => '0', :ord => '1', :iform => '89.1.a * 62.1', :word_form => 'Side-hand * Sprout-over-root', :abbrev_form => 'SH * SOR', :alpha => "SHASOR");
Formula.create( :base => '062', :offset => '005', :subindex => '0', :ord => '1', :iform => '68.78 * 62.1', :word_form => 'Speak-a-word * Sprout-over-root', :abbrev_form => 'SAW * SOR', :alpha => "SAWASOR");
Formula.create( :base => '063', :offset => '000', :subindex => '0', :ord => '1', :iform => '63.0', :word_form => 'Abstract( "roof" )', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '063', :offset => '000', :subindex => 'a', :ord => '1', :iform => '63.0.a', :word_form => 'Abstract( "hut" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '063', :offset => '001', :subindex => '0', :ord => '1', :iform => '63.1', :word_form => '{"hut" | "roof" }', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '063', :offset => '001', :subindex => '0', :ord => '2', :iform => '63.1', :word_form => 'hut | roof', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '063', :offset => '002', :subindex => '0', :ord => '1', :iform => '63.1 / 29.1', :word_form => 'Roof / divide', :abbrev_form => 'R / D', :alpha => "ROD");
Formula.create( :base => '063', :offset => '002', :subindex => 'a', :ord => '2', :iform => '24.1 / 29.1', :word_form => 'Cover / divide', :abbrev_form => 'C / D', :alpha => "COD");
Formula.create( :base => '063', :offset => '002', :subindex => 'a', :ord => '1', :iform => 'Dis( 63.2)', :word_form => 'dis( cave )', :abbrev_form => 'dis( C )', :alpha => "DOC");
Formula.create( :base => '063', :offset => '015', :subindex => '0', :ord => '1', :iform => '63.1 [*] 68.1', :word_form => 'Roof [*] smoke-hole', :abbrev_form => 'R [*] SH', :alpha => "RESH");
Formula.create( :base => '063', :offset => '015', :subindex => '0', :ord => '2', :iform => '63.1 / 68.1', :word_form => 'Roof / smoke-hole', :abbrev_form => 'R / SH', :alpha => "ROSH");
Formula.create( :base => '063', :offset => '015', :subindex => '0', :ord => '3', :iform => '63.1 / 68.1', :word_form => 'Roof / opening', :abbrev_form => 'R / O', :alpha => "ROO");
Formula.create( :base => '063', :offset => '039', :subindex => '0', :ord => '1', :iform => '63.1 / (10.1.f + 15.65)', :word_form => 'Roof / ( alt-person + hands-at-side )', :abbrev_form => 'R / (AP + HAS)', :alpha => "ROAPIHAS");
Formula.create( :base => '063', :offset => '041', :subindex => '0', :ord => '1', :iform => '63.1 / 77.1', :word_form => 'Roof / wood-tree', :abbrev_form => 'R / WT', :alpha => "ROWT");
Formula.create( :base => '063', :offset => '041', :subindex => '0', :ord => '3', :iform => '63.1 / 77.1', :word_form => 'Roof / ( tree->wood)', :abbrev_form => 'R / (T->W)', :alpha => "ROTYW");
Formula.create( :base => '064', :offset => '001', :subindex => '0', :ord => '1', :iform => '64.1', :word_form => '{"sprouting-plant"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '064', :offset => '001', :subindex => '0', :ord => '2', :iform => '66.0.a->64.1', :word_form => 'sprout->talent', :abbrev_form => 'S->T', :alpha => "SYT");
Formula.create( :base => '064', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Like( 64.1)', :word_form => 'like( sprout-talent )', :abbrev_form => 'like( ST )', :alpha => "STL");
Formula.create( :base => '064', :offset => '002', :subindex => '0', :ord => '1', :iform => '150.1 * 64.1', :word_form => 'Shell-fish * sprout-talent', :abbrev_form => 'SF * ST', :alpha => "SFAST");
Formula.create( :base => '064', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.1 * 64.1', :word_form => '(tree->wood) * sprout-talent', :abbrev_form => 'TYW * ST', :alpha => "TYWAST");
Formula.create( :base => '064', :offset => '004', :subindex => '0', :ord => '1', :iform => '64.1 * 70.1', :word_form => 'Sprout-talent * earth', :abbrev_form => 'ST * E', :alpha => "STAE");
Formula.create( :base => '064', :offset => '005', :subindex => '0', :ord => '1', :iform => '64.1 * 55.1', :word_form => 'Sprout-talent * child', :abbrev_form => 'ST * C', :alpha => "STAC");
Formula.create( :base => '064', :offset => '005', :subindex => '0', :ord => '2', :iform => '64.1 / 55.1', :word_form => 'Sprout-talent / child', :abbrev_form => 'ST / C', :alpha => "STOC");
Formula.create( :base => '064', :offset => '007', :subindex => '0', :ord => '1', :iform => '78.17 [*] 64.1.a', :word_form => 'door [*] Sprout-talent-like', :abbrev_form => 'D [*] STL', :alpha => "DESTL");
Formula.create( :base => '065', :offset => '001', :subindex => '0', :ord => '1', :iform => '65.1', :word_form => '{"bow"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '065', :offset => '001', :subindex => 'a', :ord => '1', :iform => '65.1.a', :word_form => '{"waving lines"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '065', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Like( 65.1)', :word_form => 'like( bow )', :abbrev_form => 'like( B )', :alpha => "BL");
Formula.create( :base => '065', :offset => '001', :subindex => 'c', :ord => '1', :iform => '65.1.a->65.1', :word_form => 'steam->bow', :abbrev_form => 'S->B', :alpha => "STOB");
Formula.create( :base => '065', :offset => '001', :subindex => 'c', :ord => '2', :iform => '65.1.a->65.1', :word_form => 'steam->bow', :abbrev_form => 'S->B', :alpha => "SYB");
Formula.create( :base => '065', :offset => '001', :subindex => 'd', :ord => '1', :iform => '65.1.b', :word_form => '{"winding string"}', :abbrev_form => 'WS', :alpha => "WS");
Formula.create( :base => '065', :offset => '001', :subindex => 'e', :ord => '1', :iform => 'Like( 65.1)', :word_form => 'like( bow )', :abbrev_form => 'like( B )', :alpha => "BL");
Formula.create( :base => '065', :offset => '001', :subindex => 'f', :ord => '1', :iform => '65.1.d->65.1', :word_form => 'Winding-string->bow', :abbrev_form => 'WS->B', :alpha => "W-STOB");
Formula.create( :base => '065', :offset => '001', :subindex => 'f', :ord => '2', :iform => '65.1.d->65.1', :word_form => 'Winding-string->bow', :abbrev_form => 'WS->B', :alpha => "W-SYB");
Formula.create( :base => '065', :offset => '002', :subindex => '0', :ord => '1', :iform => '147.1 * 65.1', :word_form => 'Profile-of-Body * bow', :abbrev_form => 'POB * B', :alpha => "POBOB");
Formula.create( :base => '065', :offset => '004', :subindex => '0', :ord => '1', :iform => '63.2 / 65.1', :word_form => 'Cave / bow', :abbrev_form => 'C / B', :alpha => "COB");
Formula.create( :base => '065', :offset => '005', :subindex => '0', :ord => '1', :iform => '65.1 * 15.14.a', :word_form => 'Bow * forearm-alt', :abbrev_form => 'B * FAA', :alpha => "BAFAA");
Formula.create( :base => '065', :offset => '009', :subindex => '0', :ord => '1', :iform => '65.1 * 4.1.c', :word_form => 'Bow * line', :abbrev_form => 'B * L', :alpha => "BAL");
Formula.create( :base => '065', :offset => '011', :subindex => '0', :ord => '1', :iform => '39.1 + 65.1', :word_form => 'Big-person + bow', :abbrev_form => 'BP + B', :alpha => "BPIB");
Formula.create( :base => '065', :offset => '013', :subindex => '0', :ord => '1', :iform => '10.1.g * 65.1', :word_form => 'Person-to-post + bow', :abbrev_form => 'PTOP + B', :alpha => "PTOPIB");
Formula.create( :base => '065', :offset => '016', :subindex => '0', :ord => '1', :iform => '162.1 / rot( 65.1)', :word_form => 'Short-tail-bird / rot( bow )', :abbrev_form => 'STB / rot( B)', :alpha => "STBORB");
Formula.create( :base => '065', :offset => '018', :subindex => '0', :ord => '5', :iform => '65.1^2 / 138.1', :word_form => 'bow^2 |*| rice', :abbrev_form => 'B^2 / R', :alpha => "D-BER");
Formula.create( :base => '065', :offset => '018', :subindex => '0', :ord => '6', :iform => '65.1^2 / 138.1', :word_form => 'bow^2 |*| rice', :abbrev_form => 'B^2 / R', :alpha => "BUTER");
Formula.create( :base => '065', :offset => '018', :subindex => '0', :ord => '1', :iform => '(65.1.a->65.1)^2 / 138.1', :word_form => '(steam->bow)^2 |*| rice', :abbrev_form => '(S->B)^2  / R', :alpha => "STOBUTER");
Formula.create( :base => '065', :offset => '018', :subindex => '0', :ord => '2', :iform => '(65.1.a->65.1)^2 / 138.1', :word_form => '(steam->bow)^2 |*| rice', :abbrev_form => '(S->B)^2  / R', :alpha => "D-STOBER");
Formula.create( :base => '065', :offset => '018', :subindex => '0', :ord => '3', :iform => '(65.1.a->65.1)^2 / 138.1', :word_form => '(steam->bow)^2 |*| rice', :abbrev_form => '(S->B)^2  / R', :alpha => "SYBUTER");
Formula.create( :base => '065', :offset => '018', :subindex => '0', :ord => '4', :iform => '(65.1.a->65.1)^2 / 138.1', :word_form => '(steam->bow)^2 |*| rice', :abbrev_form => '(S->B)^2  / R', :alpha => "D-SYBER");
Formula.create( :base => '065', :offset => '019', :subindex => '0', :ord => '1', :iform => '45.1 + (65.1.d->65.1)', :word_form => 'Dart + (Winding-string->bow)', :abbrev_form => 'D + (WS->B)', :alpha => "DIW-STOB");
Formula.create( :base => '065', :offset => '019', :subindex => '0', :ord => '2', :iform => '45.1 + (65.1.d->65.1)', :word_form => 'Dart + (Winding-string->bow)', :abbrev_form => 'D + (WS->B)', :alpha => "DIW-SYB");
Formula.create( :base => '065', :offset => '019', :subindex => '0', :ord => '3', :iform => '45.1 + 65.1.d', :word_form => 'Dart + Winding-string', :abbrev_form => 'D + WS', :alpha => "DIWS");
Formula.create( :base => '065', :offset => '019', :subindex => '0', :ord => '5', :iform => '45.1 + 65.1', :word_form => 'Dart + bow', :abbrev_form => 'D + B', :alpha => "DIB");
Formula.create( :base => '065', :offset => '019', :subindex => '0', :ord => '7', :iform => '45.1 + (65.1.d->65.1)', :word_form => 'Dart + (Winding-string->bow)', :abbrev_form => 'D + (WS->B)', :alpha => "DIW-STOB");
Formula.create( :base => '065', :offset => '019', :subindex => '0', :ord => '8', :iform => '45.1 + (65.1.d->65.1)', :word_form => 'Dart + (Winding-string->bow)', :abbrev_form => 'D + (WS->B)', :alpha => "DIW-SYB");
Formula.create( :base => '065', :offset => '019', :subindex => '0', :ord => '6', :iform => '65.1 + 45.1', :word_form => 'bow + dart', :abbrev_form => 'B + D', :alpha => "BID");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '1', :iform => '1.1.a + dis( 29.1 {} 66.1 )', :word_form => 'Bar + dis( divide |*| sprout )', :abbrev_form => 'B + D( D |*| S )', :alpha => "BIDODES");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '2', :iform => '1.1.a + dis( 29.60 )', :word_form => 'Bar + dis( sprout-and-divide )', :abbrev_form => 'B + D( SAD)', :alpha => "BIDOSAD");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '3', :iform => '1.1.a + dis( 29.60 )', :word_form => 'Bar + dis( sprout-in-divide )', :abbrev_form => 'B + D( SID)', :alpha => "BIDOSID");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '4', :iform => '1.1.a + alt( 29.1 {} 66.1 )', :word_form => 'Bar + alt( divide |*| sprout )', :abbrev_form => 'B + A( D |*| S )', :alpha => "BIADES");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '5', :iform => '1.1.a + alt( 29.60 )', :word_form => 'Bar + alt( sprout-and-divide )', :abbrev_form => 'B + A( SAD)', :alpha => "BIASAD");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '6', :iform => '1.1.a + alt( 29.60 )', :word_form => 'Bar + alt( sprout-in-divide )', :abbrev_form => 'B + A( SID)', :alpha => "BIASID");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '7', :iform => '1.1.a + alt( 29.1 {} 66.1 )', :word_form => 'Bar + alt( divide |*| sprout )', :abbrev_form => 'B + A( D |*| S )', :alpha => "BIDESA");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '8', :iform => '1.1.a + alt( 29.60 )', :word_form => 'Bar + alt( sprout-and-divide )', :abbrev_form => 'B + A( SAD)', :alpha => "BISADA");
Formula.create( :base => '065', :offset => '024', :subindex => '0', :ord => '9', :iform => '1.1.a + alt( 29.60 )', :word_form => 'Bar + alt( sprout-in-divide )', :abbrev_form => 'B + A( SID)', :alpha => "BISIDA");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '2', :iform => '(3.1 * 4.1.d) + 65.1.d', :word_form => '(Falling-left * stick) + winding-string', :abbrev_form => '(FL * S) + WS', :alpha => "FLASIWS");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '3', :iform => '(3.1 * 4.1.d) + 65.1', :word_form => '(Falling-left * stick) + bow', :abbrev_form => '(FL * S) + B', :alpha => "FLASIB");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '7', :iform => '(3.1 * 4.1.d ) + 65.1.d', :word_form => '(Falling-left * stick) +( winding-string->bow)', :abbrev_form => '(FL * S) + (WS->B)', :alpha => "FLASIW-STOB");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '8', :iform => '(3.1 * 4.1.d ) + 65.1.d', :word_form => '(Falling-left * stick) +( winding-string->bow)', :abbrev_form => '(FL * S) + (WS->B)', :alpha => "FLASIW-SYB");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '1', :iform => '(4.1.d^2 ) + 65.1.d', :word_form => 'stick^2 + winding-string', :abbrev_form => 'S^2 + WS', :alpha => "SUTIWS");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '5', :iform => '(4.1.d^2 ) + 65.1.d', :word_form => 'stick^2 + (winding-string->bow)', :abbrev_form => 'S^2 + (WS->B)', :alpha => "SUTIW-STOB");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '6', :iform => '(4.1.d^2 ) + 65.1.d', :word_form => 'stick^2 + (winding-string->bow)', :abbrev_form => 'S^2 + (WS->B)', :alpha => "SUTIW-SYB");
Formula.create( :base => '065', :offset => '026', :subindex => '0', :ord => '4', :iform => '65.1 + (3.1 * 4.1.d)', :word_form => 'bow + (Falling-left * stick)', :abbrev_form => 'B + (FL * S)', :alpha => "BIFLAS");
Formula.create( :base => '066', :offset => '000', :subindex => '0', :ord => '1', :iform => '66.0', :word_form => 'abstract( "plant" )', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '066', :offset => '000', :subindex => 'a', :ord => '1', :iform => '66.0.a', :word_form => 'abstract( "sprout" )', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '066', :offset => '000', :subindex => 'b', :ord => '1', :iform => '66.0.b', :word_form => 'abstract( "Z" )', :abbrev_form => 'A( Z )', :alpha => "AZ");
Formula.create( :base => '066', :offset => '001', :subindex => '0', :ord => '1', :iform => '66.1', :word_form => '{"sprouting plant"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '066', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 66.1 ) / 1.1.b', :word_form => 'Alt( Sprout ) / ground', :abbrev_form => 'A( S)', :alpha => "AOS");
Formula.create( :base => '066', :offset => '002', :subindex => '0', :ord => '1', :iform => '66.1^2', :word_form => 'Sprout^2', :abbrev_form => 'S^2', :alpha => "DS");
Formula.create( :base => '066', :offset => '002', :subindex => '0', :ord => '2', :iform => '66.1^2', :word_form => 'Sprout^2', :abbrev_form => 'S^2', :alpha => "SUT");
Formula.create( :base => '066', :offset => '002', :subindex => 'a', :ord => '1', :iform => 'Dis( 66.2)', :word_form => 'dis( grass )', :abbrev_form => 'dis( G )', :alpha => "DOG");
Formula.create( :base => '066', :offset => '002', :subindex => 'b', :ord => '1', :iform => '73.10.a->66.2.a', :word_form => 'Scorpion-claws->grass-at-top', :abbrev_form => 'SC->GAT', :alpha => "SCYGAT");
Formula.create( :base => '066', :offset => '003', :subindex => '0', :ord => '2', :iform => '10.1.d ', :word_form => 'Top-person / grab', :abbrev_form => 'TP / G', :alpha => "T-POG");
Formula.create( :base => '066', :offset => '003', :subindex => '0', :ord => '1', :iform => 'Stack( 18.1 / 66.1 )', :word_form => 'stack( wrap / sprout )', :abbrev_form => 'S( W / S)', :alpha => "SOWOS");
Formula.create( :base => '066', :offset => '008', :subindex => '0', :ord => '1', :iform => '66.1 / (66.1^2)', :word_form => 'sprout / (sprout^2)', :abbrev_form => 'S / S^2', :alpha => "SODS");
Formula.create( :base => '066', :offset => '008', :subindex => '0', :ord => '2', :iform => '66.1 / (66.1^2)', :word_form => 'sprout / (sprout^2)', :abbrev_form => 'S / S^2', :alpha => "SOSUT");
Formula.create( :base => '066', :offset => '008', :subindex => '0', :ord => '3', :iform => 'Tri( 66.1 )', :word_form => 'tri( sprout )', :abbrev_form => 'Tri( S )', :alpha => "TOS");
Formula.create( :base => '066', :offset => '015', :subindex => '0', :ord => '1', :iform => 'Stack( 66.2 )', :word_form => 'stack( double-sprout )', :abbrev_form => 'S( DS )', :alpha => "SODS");
Formula.create( :base => '066', :offset => '015', :subindex => '0', :ord => '2', :iform => 'Stack( 66.2 )', :word_form => 'Stack( grass )', :abbrev_form => 'S( G )', :alpha => "SOG");
Formula.create( :base => '066', :offset => '033', :subindex => '0', :ord => '2', :iform => '31.1 / 11.35', :word_form => 'Ten / pi-table', :abbrev_form => 'T / PT', :alpha => "TOPT");
Formula.create( :base => '066', :offset => '033', :subindex => '0', :ord => '1', :iform => '66.1 / 31.1.a / 29.1', :word_form => 'Sprout / enter-alt / divide', :abbrev_form => 'S / EA / D', :alpha => "SOE-AOD");
Formula.create( :base => '066', :offset => '033', :subindex => '0', :ord => '3', :iform => '70.1 / 11.1', :word_form => 'Earth / legs', :abbrev_form => 'E / L', :alpha => "EOL");
Formula.create( :base => '066', :offset => '033', :subindex => '0', :ord => '4', :iform => '70.1 / 29.1', :word_form => 'Earth / divide', :abbrev_form => 'E / D', :alpha => "EOD");
Formula.create( :base => '066', :offset => '048', :subindex => '0', :ord => '1', :iform => '66.1 + 1.1.b', :word_form => 'Sprout + ground', :abbrev_form => 'S + G', :alpha => "SIG");
Formula.create( :base => '066', :offset => '056', :subindex => '0', :ord => '5', :iform => '66.0.a-> ( 1.1.c / 66.0.b )', :word_form => 'sprout->( dot / Z )', :abbrev_form => 'S->( D / Z )', :alpha => "SYDOZ");
Formula.create( :base => '066', :offset => '056', :subindex => '0', :ord => '1', :iform => 'Alt( 66.1 ) / 1.1.b', :word_form => 'Alt( Sprout ) / ground', :abbrev_form => 'A( S ) / G', :alpha => "ASOG");
Formula.create( :base => '067', :offset => '001', :subindex => '0', :ord => '1', :iform => '67.1', :word_form => '{"mountain"}', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '067', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.78 * 67.1', :word_form => 'Speak-a-word * mountain', :abbrev_form => 'SAW * M', :alpha => "SAWAM");
Formula.create( :base => '067', :offset => '003', :subindex => '0', :ord => '1', :iform => '129.1 * 67.1', :word_form => 'Boat * mountain', :abbrev_form => 'B * M', :alpha => "BAM");
Formula.create( :base => '067', :offset => '004', :subindex => '0', :ord => '1', :iform => '10.1.a * 67.1', :word_form => 'Side-person * mountain', :abbrev_form => 'SP * M', :alpha => "SPAM");
Formula.create( :base => '067', :offset => '005', :subindex => '0', :ord => '1', :iform => '67.1 / 21.1', :word_form => 'Mountain / cliff', :abbrev_form => 'M / C', :alpha => "MOC");
Formula.create( :base => '067', :offset => '009', :subindex => '0', :ord => '1', :iform => '67.1 / 21.17', :word_form => 'Mountain / stone', :abbrev_form => 'M / S', :alpha => "MOS");
Formula.create( :base => '068', :offset => '000', :subindex => '0', :ord => '1', :iform => '68.0', :word_form => 'abstract( mouth )', :abbrev_form => 'A( M )', :alpha => "AM");
Formula.create( :base => '068', :offset => '000', :subindex => 'a', :ord => '1', :iform => '68.0.a', :word_form => 'abstract( open )', :abbrev_form => 'A( O )', :alpha => "AO");
Formula.create( :base => '068', :offset => '000', :subindex => 'b', :ord => '1', :iform => '68.0.b', :word_form => 'abstract( object )', :abbrev_form => 'A( O )', :alpha => "AO");
Formula.create( :base => '068', :offset => '001', :subindex => '0', :ord => '2', :iform => '68.0.b->68.0', :word_form => 'object->mouth', :abbrev_form => 'O->M', :alpha => "OYM");
Formula.create( :base => '068', :offset => '001', :subindex => '0', :ord => '1', :iform => '68.1', :word_form => '{"mouth"}', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '068', :offset => '001', :subindex => '0', :ord => '3', :iform => '68.1', :word_form => 'mouth', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '068', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 68.1 )', :word_form => 'alt( opening )', :abbrev_form => 'A( O)', :alpha => "AOO");
Formula.create( :base => '068', :offset => '001', :subindex => 'b', :ord => '1', :iform => '68.1', :word_form => 'opening', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '068', :offset => '001', :subindex => 'c', :ord => '1', :iform => '161.0.a->68.1', :word_form => 'drop->mouth', :abbrev_form => 'D->M', :alpha => "DYM");
Formula.create( :base => '068', :offset => '001', :subindex => 'd', :ord => '1', :iform => '(( 125.0.a ).( 143.0 )->68.1', :word_form => 'insect.head->mouth', :abbrev_form => 'I.H->M', :alpha => "IEHYM");
Formula.create( :base => '068', :offset => '001', :subindex => 'd', :ord => '2', :iform => '(( 125.0.a ).( 143.0 )->68.1', :word_form => 'insect.head->mouth', :abbrev_form => 'I.H->M', :alpha => "HOI-YM");
Formula.create( :base => '068', :offset => '001', :subindex => 'e', :ord => '1', :iform => '68.1:->68.46', :word_form => 'mouth:->say', :abbrev_form => 'M:->S', :alpha => "MYS");
Formula.create( :base => '068', :offset => '002', :subindex => '0', :ord => '1', :iform => '89.1.a * 68.1', :word_form => 'Side-hand * mouth', :abbrev_form => 'SH * M', :alpha => "SHAM");
Formula.create( :base => '068', :offset => '003', :subindex => '0', :ord => '1', :iform => '44.3 * 68.1', :word_form => 'Gold * opening', :abbrev_form => 'G * O', :alpha => "GAO");
Formula.create( :base => '068', :offset => '004', :subindex => '0', :ord => '1', :iform => '68.1 * 33.1', :word_form => 'Mouth * kneeler', :abbrev_form => 'M * K', :alpha => "MAK");
Formula.create( :base => '068', :offset => '004', :subindex => '0', :ord => '2', :iform => '68.1 * 33.1', :word_form => 'opening * kneeler', :abbrev_form => 'O * K', :alpha => "OAK");
Formula.create( :base => '068', :offset => '005', :subindex => '0', :ord => '1', :iform => '68.1 ^ 2', :word_form => 'Mouth ^ 2', :abbrev_form => 'M ^ 2', :alpha => "MUT");
Formula.create( :base => '068', :offset => '005', :subindex => '0', :ord => '2', :iform => '68.1 ^ 2', :word_form => 'Mouth ^ 2', :abbrev_form => 'M ^ 2', :alpha => "DM");
Formula.create( :base => '068', :offset => '005', :subindex => 'a', :ord => '1', :iform => '68.1.a^2->68.5', :word_form => 'object^2->cry', :abbrev_form => 'O^2->C', :alpha => "OUTYC");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '1', :iform => '68.1 / 68.1 ^ 2', :word_form => 'Mouth / Mouth ^ 2', :abbrev_form => 'M / M ^ 2', :alpha => "MOMUT");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '2', :iform => '68.1 / 68.1 ^ 2', :word_form => 'Mouth / Mouth ^ 2', :abbrev_form => 'M / M ^ 2', :alpha => "MOD-M");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '3', :iform => '68.1 ^ 3', :word_form => 'Mouth ^ 3', :abbrev_form => 'M ^ 3', :alpha => "TM");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '6', :iform => '68.1.a / 68.1.a ^ 2', :word_form => 'object / object ^ 2', :abbrev_form => 'O / O ^ 2', :alpha => "OO-OUT");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '7', :iform => '68.1.a / 68.1.a ^ 2', :word_form => 'object / object ^ 2', :abbrev_form => 'O / O ^ 2', :alpha => "OODO");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '8', :iform => '68.1.a ^ 3', :word_form => 'object ^ 3', :abbrev_form => 'O ^ 3', :alpha => "TO");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '4', :iform => 'Triplet( 68.1 )', :word_form => 'triplet( Mouth )', :abbrev_form => 'T( M )', :alpha => "TOM");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '9', :iform => 'Triplet( 68.1.a )', :word_form => 'triplet( object )', :abbrev_form => 'T( O )', :alpha => "TOO");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '5', :iform => 'Tripod( 68.1 )', :word_form => 'tripod( Mouth )', :abbrev_form => 'T( M )', :alpha => "TOM");
Formula.create( :base => '068', :offset => '021', :subindex => '0', :ord => '10', :iform => 'Tripod( 68.1.a )', :word_form => 'tripod( object )', :abbrev_form => 'T( O )', :alpha => "TOO");
Formula.create( :base => '068', :offset => '041', :subindex => '0', :ord => '1', :iform => 'Stack( 68.1^2)', :word_form => 'stack( mouth^2)', :abbrev_form => 'S(M^2)', :alpha => "SOMUT");
Formula.create( :base => '068', :offset => '041', :subindex => '0', :ord => '3', :iform => 'Stack( 68.1)^2', :word_form => 'stack( mouth ) ^ 2', :abbrev_form => 'S(M)^2', :alpha => "SOMUT");
Formula.create( :base => '068', :offset => '041', :subindex => '0', :ord => '2', :iform => 'Stack( 68.5)', :word_form => 'stack( cry )', :abbrev_form => 'S(C)', :alpha => "SOC");
Formula.create( :base => '068', :offset => '046', :subindex => '0', :ord => '1', :iform => '68.1 [*] 1.1.a', :word_form => 'Mouth [*] dash', :abbrev_form => 'M [*] D ', :alpha => "MED");
Formula.create( :base => '068', :offset => '046', :subindex => '0', :ord => '2', :iform => '68.1 [*] 1.1.a', :word_form => 'Mouth [*] bar', :abbrev_form => 'M [*] B', :alpha => "MEB");
Formula.create( :base => '068', :offset => '057', :subindex => '0', :ord => '1', :iform => 'Dis( 68.1) [.] 1.1.e', :word_form => 'dis( mouth ) [.] object', :abbrev_form => 'D( M ) [.] O', :alpha => "DOMEO");
Formula.create( :base => '068', :offset => '057', :subindex => 'a', :ord => '1', :iform => '68.57.a', :word_form => '{"basket"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '068', :offset => '057', :subindex => 'b', :ord => '1', :iform => '68.57.a->like( 68.57)', :word_form => 'basket->like( sweet )', :abbrev_form => 'B->L(S)', :alpha => "B-TOLS");
Formula.create( :base => '068', :offset => '057', :subindex => 'b', :ord => '2', :iform => '68.57.a->like( 68.57)', :word_form => 'basket->like( sweet )', :abbrev_form => 'B->L(S)', :alpha => "BYS-L");
Formula.create( :base => '068', :offset => '057', :subindex => 'b', :ord => '3', :iform => '68.57.a->like( 68.57)', :word_form => 'basket->like( sweet )', :abbrev_form => 'B->L(S)', :alpha => "BYLS");
Formula.create( :base => '068', :offset => '068', :subindex => '0', :ord => '1', :iform => '68.1 / 29.1.a', :word_form => 'Mouth / breath', :abbrev_form => 'M / B', :alpha => "MOB");
Formula.create( :base => '068', :offset => '068', :subindex => '0', :ord => '2', :iform => '68.1 / 29.1.a', :word_form => 'Mouth / divide-breath', :abbrev_form => 'M / DB', :alpha => "MODB");
Formula.create( :base => '068', :offset => '068', :subindex => '0', :ord => '3', :iform => '68.1 / 29.1', :word_form => 'Mouth / divide', :abbrev_form => 'M / D', :alpha => "MOD");
Formula.create( :base => '068', :offset => '068', :subindex => '0', :ord => '4', :iform => '68.1 / (29.1.a->29.1)', :word_form => 'Mouth / ( breath->divide)', :abbrev_form => 'M / ( B->D)', :alpha => "MOBYD");
Formula.create( :base => '068', :offset => '070', :subindex => '0', :ord => '2', :iform => '50.1 / 68.1', :word_form => '(pestle | shield) / mouth', :abbrev_form => '(P | S) / M', :alpha => "POSOM");
Formula.create( :base => '068', :offset => '070', :subindex => '0', :ord => '1', :iform => '68.7', :word_form => '{"tongue"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '068', :offset => '078', :subindex => '0', :ord => '1', :iform => '1.43 / 50.1 / 68.1', :word_form => 'Up / offend / mouth', :abbrev_form => 'U / O / M', :alpha => "UO-OOM");
Formula.create( :base => '068', :offset => '078', :subindex => '0', :ord => '3', :iform => '50.79 / 68.1', :word_form => 'crime / mouth', :abbrev_form => 'C / M', :alpha => "COM");
Formula.create( :base => '068', :offset => '106', :subindex => '0', :ord => '1', :iform => '2.21.b / 68.1', :word_form => 'Water-in-valley / mouth', :abbrev_form => 'WIV / M', :alpha => "WIVOM");
Formula.create( :base => '068', :offset => '106', :subindex => '0', :ord => '2', :iform => '2.21.b / 68.1', :word_form => 'Water-in-valley / opening', :abbrev_form => 'WIV / O', :alpha => "WIVOO");
Formula.create( :base => '068', :offset => '118', :subindex => '0', :ord => '1', :iform => '( 2.21.c | 29.1 ) / 68.1', :word_form => '(water-in-ravine | divide ) / mouth', :abbrev_form => '(WIR | D ) / M', :alpha => "WIRODOM");
Formula.create( :base => '068', :offset => '118', :subindex => '0', :ord => '2', :iform => '( 2.21.c | 29.1 ) / 68.1', :word_form => '(water-in-ravine | divide) / opening', :abbrev_form => '(WIR | D ) / O', :alpha => "WIRODOO");
Formula.create( :base => '068', :offset => '118', :subindex => '0', :ord => '3', :iform => '( 29.1 | 2.21.c ) / 68.1', :word_form => '(divide | water-in-ravine ) / mouth', :abbrev_form => '(D | WIR ) / M', :alpha => "DOWIROM");
Formula.create( :base => '068', :offset => '118', :subindex => '0', :ord => '4', :iform => '( 29.1 | 2.21.c ) / 68.1', :word_form => '(divide | water-in-ravine) / opening', :abbrev_form => '(D | WIR ) / O', :alpha => "DOWIROO");
Formula.create( :base => '069', :offset => '000', :subindex => '0', :ord => '1', :iform => '69.0', :word_form => 'Abstract( "perimeter" )', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '069', :offset => '001', :subindex => '0', :ord => '1', :iform => '69.1', :word_form => '{"enclosure"}', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '069', :offset => '001', :subindex => '0', :ord => '2', :iform => '69.1', :word_form => '{"enclosure"}', :abbrev_form => 'Q', :alpha => "Q");
Formula.create( :base => '069', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Like( 69.1)', :word_form => 'like( square-enclosure)', :abbrev_form => 'L( SE)', :alpha => "LOSE");
Formula.create( :base => '069', :offset => '002', :subindex => '0', :ord => '1', :iform => '69.1 [*] 69.1', :word_form => 'Square-enclosure [*] square-enclosure', :abbrev_form => 'SE [*] SE', :alpha => "SEESE");
Formula.create( :base => '069', :offset => '002', :subindex => 'a', :ord => '1', :iform => '69.1 [*] 69.1.a', :word_form => 'Square-enclosure [*] swirl', :abbrev_form => 'SE [*] S', :alpha => "SEES");
Formula.create( :base => '069', :offset => '002', :subindex => 'a', :ord => '4', :iform => '69.1 [] 69.1.a', :word_form => 'Square [] swirl', :abbrev_form => 'S [] S', :alpha => "SES");
Formula.create( :base => '069', :offset => '006', :subindex => '0', :ord => '1', :iform => '32.1 / 69.2', :word_form => 'Enter / ( square [] ( square [] nothing ))', :abbrev_form => 'E / ( S [] ( S [] N ))', :alpha => "EOSESEN");
Formula.create( :base => '069', :offset => '006', :subindex => '0', :ord => '2', :iform => '32.1 / 69.2', :word_form => '( roots:->go-in ) / ( square [] ( square [] nothing ))', :abbrev_form => '( R:->GI ) / ( S [] ( S [] N ))', :alpha => "RYGI-OSESEN");
Formula.create( :base => '069', :offset => '013', :subindex => '0', :ord => '1', :iform => '69.1 [*] 77.1', :word_form => 'Square-enclosure [*] (tree->wood)', :abbrev_form => 'SE [*] (T->W)', :alpha => "SEETYW");
Formula.create( :base => '069', :offset => '017', :subindex => '0', :ord => '1', :iform => '69.1 [*] 108.1', :word_form => 'Square-enclosure [*] grain', :abbrev_form => 'SE [*] G', :alpha => "SEEG");
Formula.create( :base => '069', :offset => '019', :subindex => '0', :ord => '1', :iform => '69.1 [*] 10.1', :word_form => 'Square-enclosure [*] person', :abbrev_form => 'SE [*] P', :alpha => "SEEP");
Formula.create( :base => '069', :offset => '025', :subindex => '0', :ord => '1', :iform => '69.1 [*] 4.1', :word_form => 'Square-enclosure [*] post', :abbrev_form => 'SE [*] P', :alpha => "SEEP");
Formula.create( :base => '069', :offset => '025', :subindex => 'a', :ord => '1', :iform => '69.25', :word_form => '{"bilateral-object"}', :abbrev_form => 'BO', :alpha => "BO");
Formula.create( :base => '069', :offset => '025', :subindex => 'b', :ord => '1', :iform => 'Right( 69.25.a)', :word_form => 'right( bilateral-object )', :abbrev_form => 'R( BO)', :alpha => "ROBO");
Formula.create( :base => '069', :offset => '084', :subindex => '0', :ord => '4', :iform => '1.1.a / 69.1 / 29.1 / 1.1.a', :word_form => 'Dash / square-enclosure / divide / dash', :abbrev_form => 'D / SE / D / D', :alpha => "DOSEODOD");
Formula.create( :base => '069', :offset => '084', :subindex => '0', :ord => '5', :iform => '1.1.a / 69.1 / 29.1 / 1.1.a', :word_form => 'bar / square-enclosure / divide / bar', :abbrev_form => 'B / SE / D / B', :alpha => "BOSEODOB");
Formula.create( :base => '069', :offset => '084', :subindex => '0', :ord => '1', :iform => '69.84', :word_form => '{"serving container"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '069', :offset => '118', :subindex => '0', :ord => '1', :iform => 'Mod( 69.1 )', :word_form => '{"square with indented-section"}', :abbrev_form => 'M( SE )', :alpha => "MOSE");
Formula.create( :base => '069', :offset => '119', :subindex => '0', :ord => '1', :iform => 'Mod( 69.1 )', :word_form => '{"square with protruding section"}', :abbrev_form => 'M( SE )', :alpha => "MOSE");
Formula.create( :base => '070', :offset => '001', :subindex => '0', :ord => '3', :iform => '31.1 / 1.1.a', :word_form => 'Ten / dash', :abbrev_form => 'T / D', :alpha => "TOD");
Formula.create( :base => '070', :offset => '001', :subindex => '0', :ord => '4', :iform => '31.1 / 1.1.a', :word_form => 'Ten / bar', :abbrev_form => 'T / B', :alpha => "TOB");
Formula.create( :base => '070', :offset => '001', :subindex => '0', :ord => '5', :iform => '31.1 / 1.1.b', :word_form => 'Ten / ground', :abbrev_form => 'T / G', :alpha => "TOG");
Formula.create( :base => '070', :offset => '001', :subindex => '0', :ord => '6', :iform => '31.1 / 1.1.b', :word_form => 'Ten / surface', :abbrev_form => 'T / S', :alpha => "TOS");
Formula.create( :base => '070', :offset => '001', :subindex => '0', :ord => '1', :iform => '70.1', :word_form => '{"object in earth"}', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '070', :offset => '001', :subindex => '0', :ord => '2', :iform => '70.1', :word_form => '{"object in earth"}', :abbrev_form => 'G', :alpha => "G");
Formula.create( :base => '070', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1 * 70.1', :word_form => 'Mouth * earth', :abbrev_form => 'M * E', :alpha => "MAE");
Formula.create( :base => '070', :offset => '002', :subindex => '0', :ord => '2', :iform => '68.1 * 70.1', :word_form => 'Mouth * ground', :abbrev_form => 'M * G', :alpha => "MAG");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '3', :iform => '(41.1 * 88.1 ) * 70.1', :word_form => '( Left-step * stop ) * earth', :abbrev_form => '(LS * S ) * E', :alpha => "LSASAE");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '4', :iform => '(41.1 * 88.1 ) * 70.1', :word_form => '( Left-step * stop ) * ground', :abbrev_form => '(LS * S ) * G', :alpha => "LSASAG");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '5', :iform => '(41.1 / 88.1 ) * 70.1', :word_form => '( Left-step / stop ) * earth', :abbrev_form => '(LS / S ) * E', :alpha => "LSOSAE");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '6', :iform => '(41.1 / 88.1 ) * 70.1', :word_form => '( Left-step / stop ) * ground', :abbrev_form => '(LS / S ) * G', :alpha => "LSOSAG");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '7', :iform => '(41.1 * 88.1 ) * 70.1', :word_form => '( Left * stop ) * earth', :abbrev_form => '(L * S ) * E', :alpha => "LASAE");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '8', :iform => '(41.1 * 88.1 ) * 70.1', :word_form => '( Left * stop ) * ground', :abbrev_form => '(L * S ) * G', :alpha => "LASAG");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '9', :iform => '(41.1 / 88.1 ) * 70.1', :word_form => '( Left / stop ) * earth', :abbrev_form => '(L / S ) * E', :alpha => "LOSAE");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '10', :iform => '(41.1 / 88.1 ) * 70.1', :word_form => '( Left / stop ) * ground', :abbrev_form => '(L / S ) * G', :alpha => "LOSAG");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '1', :iform => '41.3 * 70.1', :word_form => 'Step-and-stop * earth', :abbrev_form => 'SAS * E', :alpha => "SASAE");
Formula.create( :base => '070', :offset => '003', :subindex => '0', :ord => '2', :iform => '41.3 * 70.1', :word_form => 'Step-and-stop * ground', :abbrev_form => 'SAS * G', :alpha => "SASAG");
Formula.create( :base => '070', :offset => '004', :subindex => '0', :ord => '1', :iform => '132.1.a * 70.1', :word_form => 'Meat * ground', :abbrev_form => 'M * G', :alpha => "MAG");
Formula.create( :base => '070', :offset => '004', :subindex => '0', :ord => '2', :iform => '132.1.a * 70.1', :word_form => 'Meat-like-moon * ground', :abbrev_form => 'MLM * G', :alpha => "MLMAG");
Formula.create( :base => '070', :offset => '004', :subindex => '0', :ord => '3', :iform => '132.1.a * 70.1', :word_form => 'Meat * earth', :abbrev_form => 'M * E', :alpha => "MAE");
Formula.create( :base => '070', :offset => '004', :subindex => '0', :ord => '4', :iform => '132.1.a * 70.1', :word_form => 'Meat-like-moon * earth', :abbrev_form => 'MLM * E', :alpha => "MLMAE");
Formula.create( :base => '070', :offset => '005', :subindex => '0', :ord => '1', :iform => '77.1 * 70.1', :word_form => '(tree->wood) * ground', :abbrev_form => '(T->W) * G', :alpha => "TYWAG");
Formula.create( :base => '070', :offset => '005', :subindex => '0', :ord => '2', :iform => '77.1 * 70.1', :word_form => '(tree->wood) * earth', :abbrev_form => '(T->W) * E', :alpha => "TYWAE");
Formula.create( :base => '070', :offset => '006', :subindex => '0', :ord => '1', :iform => '146.1 * 70.1', :word_form => 'Revelation * earth', :abbrev_form => 'R * E', :alpha => "RAE");
Formula.create( :base => '070', :offset => '006', :subindex => '0', :ord => '3', :iform => '146.1 * 70.1', :word_form => 'Revelation * ground', :abbrev_form => 'R * G', :alpha => "RAG");
Formula.create( :base => '070', :offset => '007', :subindex => '0', :ord => '1', :iform => 'Stack( 70.1 )', :word_form => 'stack( earth )', :abbrev_form => 'S( E )', :alpha => "SOE");
Formula.create( :base => '070', :offset => '026', :subindex => '0', :ord => '1', :iform => '70.1 / (70.1^2)', :word_form => 'Earth / (earth^2)', :abbrev_form => 'E / (E^2)', :alpha => "EODE");
Formula.create( :base => '070', :offset => '026', :subindex => '0', :ord => '2', :iform => '70.1 / (70.1^2)', :word_form => 'Earth / (earth^2)', :abbrev_form => 'E / (E^2)', :alpha => "EOEUT");
Formula.create( :base => '070', :offset => '026', :subindex => '0', :ord => '3', :iform => 'Tripod( 70.1 )', :word_form => 'tripod(earth)', :abbrev_form => 'T(E)', :alpha => "TOE");
Formula.create( :base => '070', :offset => '036', :subindex => '0', :ord => '1', :iform => '10.1.a + ( 31.2 | 70.1 )', :word_form => 'Side-person + ( scholar | earth )', :abbrev_form => 'SP + ( S | E )', :alpha => "SPISOE");
Formula.create( :base => '070', :offset => '036', :subindex => '0', :ord => '2', :iform => '70.36.a | 70.36.b', :word_form => 'Good | stand', :abbrev_form => 'G | S', :alpha => "GOS");
Formula.create( :base => '070', :offset => '036', :subindex => 'a', :ord => '1', :iform => '10.1.a + 31.2', :word_form => 'Side-person + scholar', :abbrev_form => 'SP + S', :alpha => "SPIS");
Formula.create( :base => '070', :offset => '036', :subindex => 'b', :ord => '1', :iform => '10.1.a + 70.1', :word_form => 'Side-person + earth', :abbrev_form => 'SP + E', :alpha => "SPIE");
Formula.create( :base => '070', :offset => '050', :subindex => '0', :ord => '1', :iform => '(10.1^2) |*| 70.1', :word_form => '(person^2) |*| earth', :abbrev_form => '(P^2) |*| E', :alpha => "DPEE");
Formula.create( :base => '070', :offset => '050', :subindex => '0', :ord => '2', :iform => '(10.1^2) |*| 70.1', :word_form => '(person^2) |*| earth', :abbrev_form => '(P^2) |*| E', :alpha => "PUTEE");
Formula.create( :base => '070', :offset => '050', :subindex => '0', :ord => '3', :iform => '(10.7) |*| 70.1', :word_form => 'follow |*| earth', :abbrev_form => 'F |*| E', :alpha => "FEE");
Formula.create( :base => '070', :offset => '053', :subindex => '0', :ord => '1', :iform => '82.1 * 70.1', :word_form => 'Fire * earth', :abbrev_form => 'F * E', :alpha => "FAE");
Formula.create( :base => '070', :offset => '054', :subindex => '0', :ord => '1', :iform => '76.1 / 70.1', :word_form => 'Sun / earth', :abbrev_form => 'S / E', :alpha => "SOE");
Formula.create( :base => '070', :offset => '054', :subindex => '0', :ord => '2', :iform => '76.1 / 51.1', :word_form => 'Sun / work', :abbrev_form => 'S / WT', :alpha => "SOW");
Formula.create( :base => '070', :offset => '054', :subindex => '0', :ord => '3', :iform => '76.1 / (70.1->51.1)', :word_form => 'Sun / (earth->work)', :abbrev_form => 'S / (E->W)', :alpha => "SOEY-W");
Formula.create( :base => '070', :offset => '056', :subindex => '0', :ord => '1', :iform => '66.1.a / 70.1', :word_form => 'Alt-sprout / earth', :abbrev_form => 'AS / E', :alpha => "ASOE");
Formula.create( :base => '070', :offset => '076', :subindex => '0', :ord => '1', :iform => '70.56 / 4.1.e', :word_form => 'Sprout-earth /+ tap-root', :abbrev_form => 'SE /+ TR', :alpha => "SEO-ITR");
Formula.create( :base => '071', :offset => '000', :subindex => '0', :ord => '1', :iform => '71.0', :word_form => 'abstract( "bamboo" )', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '071', :offset => '001', :subindex => '0', :ord => '1', :iform => '71.1', :word_form => '{"bamboo shoot"}', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '071', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'alt( 71.1)', :word_form => 'alt( bamboo-shoot)', :abbrev_form => 'A( BS)', :alpha => "ABS");
Formula.create( :base => '071', :offset => '002', :subindex => '0', :ord => '3', :iform => '31.1 / 14.1', :word_form => 'ten / hand-again', :abbrev_form => 'T / HA', :alpha => "TOHA");
Formula.create( :base => '071', :offset => '002', :subindex => '0', :ord => '1', :iform => '71.1 / 14.1', :word_form => 'Bamboo-shoot / hand-again', :abbrev_form => 'BS / HA', :alpha => "B-SOHA");
Formula.create( :base => '071', :offset => '002', :subindex => '0', :ord => '2', :iform => '71.1 / 14.1', :word_form => 'one / hand-again', :abbrev_form => 'O / HA', :alpha => "O-OHA");
Formula.create( :base => '071', :offset => '002', :subindex => '0', :ord => '4', :iform => '(71.1->31.1) / 14.1', :word_form => '(Bamboo-shoot->ten) / hand-again', :abbrev_form => '(BS->T) / HA', :alpha => "B-SYTOHA");
Formula.create( :base => '071', :offset => '002', :subindex => '0', :ord => '5', :iform => '(71.1->31.1) / 14.1', :word_form => '(one->ten) / hand-again', :abbrev_form => '(O->T) / HA', :alpha => "OYTOHA");
Formula.create( :base => '071', :offset => '011', :subindex => '0', :ord => '1', :iform => '71.1.a^2', :word_form => 'Alt-bamboo-shoot^2', :abbrev_form => 'ABS^2', :alpha => "DABS");
Formula.create( :base => '071', :offset => '011', :subindex => '0', :ord => '2', :iform => '71.1.a^2', :word_form => 'Alt-bamboo-shoot^2', :abbrev_form => 'ABS^2', :alpha => "ABSUT");
Formula.create( :base => '071', :offset => '011', :subindex => 'a', :ord => '1', :iform => 'At-top( 71.1.a^2 )', :word_form => 'At-top( Alt-bamboo-shoot^2 )', :abbrev_form => 'AT( ABS^2 )', :alpha => "ATO-ABSUT");
Formula.create( :base => '072', :offset => '001', :subindex => '0', :ord => '1', :iform => '72.1', :word_form => '{"crescent moon"}', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '072', :offset => '001', :subindex => '0', :ord => '2', :iform => '72.1', :word_form => '{"partial crescent moon"}', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '072', :offset => '001', :subindex => '0', :ord => '3', :iform => 'Top( 80.0:80.0.a )', :word_form => 'Top( moon:crescent )', :abbrev_form => 'T( M:C )', :alpha => "TOMIC");
Formula.create( :base => '072', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * 72.1', :word_form => 'Side-water * evening', :abbrev_form => 'SW * E', :alpha => "SWA-E");
Formula.create( :base => '072', :offset => '002', :subindex => '0', :ord => '2', :iform => '2.21.a * 72.1', :word_form => 'Side-water * crescent-moon', :abbrev_form => 'SW * CM', :alpha => "SWAC-M");
Formula.create( :base => '072', :offset => '003', :subindex => '0', :ord => '1', :iform => '21,17 * 72.1', :word_form => 'Stone * evening', :abbrev_form => 'S * E', :alpha => "SA-E");
Formula.create( :base => '072', :offset => '003', :subindex => '0', :ord => '2', :iform => '21,17 * 72.1', :word_form => 'Stone * crescent-moon', :abbrev_form => 'S * CM', :alpha => "SAC-M");
Formula.create( :base => '072', :offset => '004', :subindex => '0', :ord => '3', :iform => 'stack( Top( 80.0:80.0.a ))', :word_form => 'stack( Top( moon:crescent ))', :abbrev_form => 'S( T( M:C ))', :alpha => "SOTOMIC");
Formula.create( :base => '072', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Stack( 72.1 )', :word_form => 'stack( evening )', :abbrev_form => 'S( E )', :alpha => "SO-E");
Formula.create( :base => '072', :offset => '004', :subindex => '0', :ord => '2', :iform => 'Stack( 72.1 )', :word_form => 'stack( crescent-moon )', :abbrev_form => 'S( CM )', :alpha => "SOC-M");
Formula.create( :base => '072', :offset => '009', :subindex => '0', :ord => '1', :iform => '72.1 / 68.1', :word_form => 'Evening / mouth', :abbrev_form => 'E / M', :alpha => "EOM");
Formula.create( :base => '072', :offset => '009', :subindex => '0', :ord => '2', :iform => '72.1 / 68.1', :word_form => 'Crescent-moon / mouth', :abbrev_form => 'CM / M', :alpha => "C-MOM");
Formula.create( :base => '072', :offset => '011', :subindex => '0', :ord => '1', :iform => '72.1 * 26.1', :word_form => 'Evening * diviner', :abbrev_form => 'E * D', :alpha => "EOM");
Formula.create( :base => '072', :offset => '011', :subindex => '0', :ord => '2', :iform => '72.1 * 26.1', :word_form => 'Crescent-moon * diviner', :abbrev_form => 'CM * D', :alpha => "C-MAD");
Formula.create( :base => '072', :offset => '012', :subindex => '0', :ord => '1', :iform => '72.1 * 33.1.b', :word_form => 'Evening * kneeler', :abbrev_form => 'E * K', :alpha => "EAK");
Formula.create( :base => '072', :offset => '012', :subindex => '0', :ord => '2', :iform => '72.1 * 33.1.b', :word_form => 'Crescent-moon * kneeler', :abbrev_form => 'CM * K', :alpha => "C-MAK");
Formula.create( :base => '072', :offset => '012', :subindex => '0', :ord => '3', :iform => '72.1 * 33.1.b', :word_form => 'Evening * curly-seal', :abbrev_form => 'E * CS', :alpha => "EACS");
Formula.create( :base => '072', :offset => '012', :subindex => '0', :ord => '4', :iform => '72.1 * 33.1.b', :word_form => 'Crescent-moon * curly-seal', :abbrev_form => 'CM * CS', :alpha => "CMACS");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '3', :iform => '(1.1.c^2  {} 39.1.a) + 72.1', :word_form => '(Dot^2 {} big-person-alt) + evening', :abbrev_form => '( D^2 {} BPA ) + E', :alpha => "DUTEBPA-I-E");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '4', :iform => '(1.1.c^2  {} 39.1.a) + 72.1', :word_form => '(Dot^2 {} big-person-alt) + crescent-moon', :abbrev_form => '( D^2 {} BPA ) + CM', :alpha => "DUTEBPA-IC-M");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '5', :iform => '(1.1.c^2  {} 39.1.a) + 72.1', :word_form => '(Dot^2 {} big-alt) + evening', :abbrev_form => '( D^2 {} BA ) + E', :alpha => "DUTEBA-I-E");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '6', :iform => '(1.1.c^2  {} 39.1.a) + 72.1', :word_form => '(Dot^2 {} big-alt) + crescent-moon', :abbrev_form => '( D^2 {} BA ) + CM', :alpha => "DUTEBA-IC-M");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '7', :iform => '(1.1.c^2  {} 39.1.a) + 72.1', :word_form => '(Dot^2 {} alt-big ) + evening', :abbrev_form => '( D^2 {} AB ) + E', :alpha => "DUTE-ABI-E");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '8', :iform => '(1.1.c^2  {} 39.1.a) + 72.1', :word_form => '(Dot^2 {} alt-big) + crescent-moon', :abbrev_form => '( D^2 {} AB ) + CM', :alpha => "DUTE-ABIC-M");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '1', :iform => '39.75 + 72.1', :word_form => 'Arm-pits + evening', :abbrev_form => 'AP + E', :alpha => "APIE");
Formula.create( :base => '072', :offset => '019', :subindex => '0', :ord => '2', :iform => '39.75 + 72.1', :word_form => 'Arm-pits + crescent-moon', :abbrev_form => 'AP + CM', :alpha => "APIC-M");
Formula.create( :base => '073', :offset => '000', :subindex => '0', :ord => '1', :iform => '73.0', :word_form => 'Abstract( "tail" )', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '073', :offset => '001', :subindex => '0', :ord => '1', :iform => '73.1', :word_form => '{" hind legs and tail of animal"}', :abbrev_form => 'HQ', :alpha => "HQ");
Formula.create( :base => '073', :offset => '001', :subindex => '0', :ord => '2', :iform => '73.1', :word_form => '{" hind legs and tail of animal"}', :abbrev_form => 'TE', :alpha => "TE");
Formula.create( :base => '073', :offset => '002', :subindex => '0', :ord => '1', :iform => '140.1 / 73.1', :word_form => 'Spirit-head / hind-quarters', :abbrev_form => 'SH / HQ', :alpha => "SHOH-Q");
Formula.create( :base => '073', :offset => '002', :subindex => '0', :ord => '2', :iform => '140.1 / 73.1', :word_form => 'Spirit-head / tail-end', :abbrev_form => 'SH / TE', :alpha => "SHOT-E");
Formula.create( :base => '073', :offset => '010', :subindex => '0', :ord => '3', :iform => '66.2.b / 140.1 / 73.1', :word_form => 'Scorpion-claws / spirit-head / tail-end', :abbrev_form => 'SC / SH / TE', :alpha => "SCOSHOT-E");
Formula.create( :base => '073', :offset => '010', :subindex => '0', :ord => '4', :iform => '66.2.b / 140.1 / 73.1', :word_form => 'grass / spirit-head / tail-end', :abbrev_form => 'G / SH / TE', :alpha => "GOSHOT-E");
Formula.create( :base => '073', :offset => '010', :subindex => '0', :ord => '1', :iform => '73.10', :word_form => '{"scorpion"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '073', :offset => '010', :subindex => '0', :ord => '2', :iform => '(73.10.a->66.2.a) / 140.1 / 73.1', :word_form => '(Scorpion-claws->grass-at-top) / spirit-head / tail-end', :abbrev_form => '(SC->GAT) / SH / TE', :alpha => "SCYGATO-SHOT-E");
Formula.create( :base => '073', :offset => '010', :subindex => 'a', :ord => '1', :iform => '73.10.a', :word_form => '{"scorpion claws"}', :abbrev_form => 'SC', :alpha => "SC");
Formula.create( :base => '073', :offset => '016', :subindex => '0', :ord => '1', :iform => '73.16.a / 73.1', :word_form => 'Yak-head-and-horns / tail-end', :abbrev_form => 'YHAH / TE', :alpha => "Y-HAHOT'E");
Formula.create( :base => '073', :offset => '016', :subindex => 'a', :ord => '1', :iform => 'Like( 66.1) / like( 140.1)', :word_form => 'like( sprout) / like( spirit-head )', :abbrev_form => 'L(S) / L(SH)', :alpha => "L-SOLSH");
Formula.create( :base => '073', :offset => '016', :subindex => 'a', :ord => '2', :iform => 'Like( 66.1) / like( 140.1)', :word_form => 'like( sprout) / like( spirit-head )', :abbrev_form => 'L(S) / L(SH)', :alpha => "SLOSH-L");
Formula.create( :base => '073', :offset => '021', :subindex => '0', :ord => '1', :iform => '44.1 / 1.1.i / like( 140.1) / 73.1', :word_form => 'Gather / contact / like( spirit-head) / tail-end', :abbrev_form => 'G / C / L(SH) / TE', :alpha => "GOCOLSHOT-E");
Formula.create( :base => '073', :offset => '021', :subindex => '0', :ord => '2', :iform => '44.1 / 1.1.i / like( 140.1) / 73.1', :word_form => 'Gather / contact / like( spirit-head) / tail-end', :abbrev_form => 'G / C / L(SH) / TE', :alpha => "GOCOSH-LOT-E");
Formula.create( :base => '073', :offset => '021', :subindex => '0', :ord => '3', :iform => '44.1 / 1.1.i  / 140.1.a / 73.1', :word_form => 'Gather / contact / bird-head / tail-end', :abbrev_form => 'G / C / BH / TE', :alpha => "GOCOB-HOT-E");
Formula.create( :base => '073', :offset => '021', :subindex => '0', :ord => '4', :iform => '44.2 / 140.1.a / 73.1', :word_form => 'now / bird-head / tail-end', :abbrev_form => 'N / BH / TE', :alpha => "NOB-HOT-E");
Formula.create( :base => '073', :offset => '023', :subindex => '0', :ord => '1', :iform => '140.1.b / 73.1', :word_form => 'Insect-head / tail-end', :abbrev_form => 'IH / TE', :alpha => "IHOTE");
Formula.create( :base => '073', :offset => '024', :subindex => '0', :ord => '1', :iform => '140.1.c / 73.1', :word_form => 'Insect-head-alt / tail-end', :abbrev_form => 'IHA / TE', :alpha => "IHA-OTE");
Formula.create( :base => '074', :offset => '001', :subindex => '0', :ord => '2', :iform => '{( 123.0.a ).( 149.0:^2 )}', :word_form => '{ ram.(horn:^2 )}', :abbrev_form => '{ R.( H:^2 )}', :alpha => "REHUT");
Formula.create( :base => '074', :offset => '001', :subindex => '0', :ord => '3', :iform => '{( 123.0.a ).( 149.0:^2 )}', :word_form => '{ ram.(horn:^2 )}', :abbrev_form => '{ R.( H:^2 )}', :alpha => "HUTOR");
Formula.create( :base => '074', :offset => '001', :subindex => '0', :ord => '1', :iform => '74.1', :word_form => '{"ram horns"}', :abbrev_form => 'RH', :alpha => "RH");
Formula.create( :base => '074', :offset => '001', :subindex => 'a', :ord => '1', :iform => '{( 123.0 ).( 149.0:^2 )}', :word_form => '{ sheep.(horn:^2 )}', :abbrev_form => '{ S.( H:^2 )}', :alpha => "HUTOS");
Formula.create( :base => '074', :offset => '001', :subindex => 'a', :ord => '2', :iform => '{( 123.0 ).( 149.0:^2 )}', :word_form => '{ sheep.(horn:^2 )}', :abbrev_form => '{ S.( H:^2 )}', :alpha => "SEHUT");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '4', :iform => '74.1 + Alt(15.65)', :word_form => 'Horns-of-ram + alt( hands-at-side )', :abbrev_form => 'HOR + A( HAS )', :alpha => "HORIAHAS");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '5', :iform => '74.1 + dis(15.65)', :word_form => 'Horns-of-ram + dis( hands-at-side )', :abbrev_form => 'HOR + D( HAS )', :alpha => "HORIDOHAS");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '6', :iform => '74.1 + mod(15.65)', :word_form => 'Horns-of-ram + mod( hands-at-side )', :abbrev_form => 'HOR + M( HAS )', :alpha => "HORIMOHAS");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '7', :iform => '74.1 + dis(15.65)', :word_form => 'ram.horns + dis( hands-at-side )', :abbrev_form => 'R.H + D( HAS )', :alpha => "REHIDOHAS");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '8', :iform => '74.1.a + dis(15.65)', :word_form => 'sheep_horns + dis( hands-at-side )', :abbrev_form => 'S.H + D( HAS )', :alpha => "SEHIDOHAS");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '9', :iform => '74.1.a + dis(15.65)', :word_form => 'sheep_horns + dis( hands-at-side )', :abbrev_form => 'S.H + D( HAS )', :alpha => "HOSIDOHAS");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '1', :iform => 'Alt(15.65) + 74.1', :word_form => 'alt( hands-at-side ) + Horns-of-ram', :abbrev_form => 'A( HAS ) + HOR', :alpha => "AHASIHOR");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '2', :iform => 'dis(15.65) + 74.1', :word_form => 'dis( hands-at-side ) + Horns-of-ram', :abbrev_form => 'D( HAS ) + HOR', :alpha => "DOHASIHOR");
Formula.create( :base => '074', :offset => '002', :subindex => '0', :ord => '3', :iform => 'mod(15.65) + 74.1', :word_form => 'mod( hands-at-side ) + Horns-of-ram', :abbrev_form => 'M( HAS ) + HOR', :alpha => "MOHASIHOR");
Formula.create( :base => '074', :offset => '003', :subindex => '0', :ord => '1', :iform => 'Alt(75.1) + ( 1.1.a / 23.1 )', :word_form => 'alt( horns-or-ram) + ( bar / space )', :abbrev_form => 'A( HOR ) + ( B / S )', :alpha => "AHORIBOS");
Formula.create( :base => '075', :offset => '000', :subindex => 'a', :ord => '1', :iform => '75.0.a', :word_form => 'abstract( "hide" )', :abbrev_form => 'A( H )', :alpha => "");
Formula.create( :base => '075', :offset => '000', :subindex => 'b', :ord => '1', :iform => '75.0.b', :word_form => 'abstract( "show" )', :abbrev_form => 'A( S )', :alpha => "");
Formula.create( :base => '075', :offset => '001', :subindex => '0', :ord => '1', :iform => '(1.1.a / 22.1 ) [*] 10.1', :word_form => '(dash / corner ) [*] person', :abbrev_form => '(D / C ) [*] P', :alpha => "DOCEP");
Formula.create( :base => '075', :offset => '001', :subindex => '0', :ord => '2', :iform => '(1.1.a / 22.1 ) [*] 10.1.h', :word_form => '(dash / corner ) [*] person-alt', :abbrev_form => '(D / C ) [*] PA', :alpha => "DOCEPA");
Formula.create( :base => '075', :offset => '002', :subindex => '0', :ord => '1', :iform => '63.1 / 75.1', :word_form => 'Roof / hide', :abbrev_form => 'R / H', :alpha => "ROH");
Formula.create( :base => '075', :offset => '002', :subindex => '0', :ord => '2', :iform => '63.1 / alt( 75.1 )', :word_form => 'Roof / alt( hide )', :abbrev_form => 'R / A( H )', :alpha => "ROAH");
Formula.create( :base => '075', :offset => '002', :subindex => '0', :ord => '3', :iform => '63.1 / alt( 75.1 )', :word_form => 'Roof / alt( hide )', :abbrev_form => 'R / A( H )', :alpha => "ROHA");
Formula.create( :base => '075', :offset => '002', :subindex => '0', :ord => '4', :iform => '63.1 / ((1.1.a / 22.1 ) [*] 10.1.h  )', :word_form => 'Roof / ( (dash / corner ) [*] person-alt  )', :abbrev_form => 'R / ( (D / C ) [*] PA  )', :alpha => "RODOCEPA");
Formula.create( :base => '076', :offset => '001', :subindex => '0', :ord => '1', :iform => '76.1', :word_form => '{"sun"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '076', :offset => '001', :subindex => 'a', :ord => '3', :iform => '( 138.0.a :][ 141.0.a )->76.1', :word_form => '( Rice :][ pot )->sun', :abbrev_form => '( R :][ P )->S', :alpha => "RIPYS");
Formula.create( :base => '076', :offset => '001', :subindex => 'a', :ord => '4', :iform => '( 141.0.a :[] 138.0.a )->76.1', :word_form => '( pot :[] Rice  )->sun', :abbrev_form => '( P :[] R )->S', :alpha => "PERYS");
Formula.create( :base => '076', :offset => '001', :subindex => 'a', :ord => '2', :iform => '12.37.a->76.1', :word_form => 'pot-of-rice->sun', :abbrev_form => 'POR->S', :alpha => "PORYS");
Formula.create( :base => '076', :offset => '001', :subindex => 'a', :ord => '1', :iform => '12.37.a->Like( 76.1 )', :word_form => 'pot-of-rice->like( sun )', :abbrev_form => 'POR->L( S )', :alpha => "PORYLS");
Formula.create( :base => '076', :offset => '002', :subindex => '0', :ord => '1', :iform => '1.1.c / 76.1', :word_form => 'Dot / sun', :abbrev_form => 'D / S', :alpha => "DOS");
Formula.create( :base => '076', :offset => '002', :subindex => 'a', :ord => '1', :iform => '?->76.2', :word_form => 'head->white', :abbrev_form => 'H->W', :alpha => "HTOW");
Formula.create( :base => '076', :offset => '002', :subindex => 'a', :ord => '2', :iform => '?->76.2', :word_form => 'head->white', :abbrev_form => 'H->W', :alpha => "HYW");
Formula.create( :base => '076', :offset => '042', :subindex => '0', :ord => '1', :iform => '76.1 / 1.1.b', :word_form => 'Sun / horizon', :abbrev_form => 'S / H', :alpha => "SOH");
Formula.create( :base => '076', :offset => '067', :subindex => '0', :ord => '1', :iform => '118.1 / 76.42', :word_form => 'Waving-banner / dawn', :abbrev_form => 'WB / D', :alpha => "WBOD");
Formula.create( :base => '076', :offset => '067', :subindex => '0', :ord => '3', :iform => '118.1 / 76.42', :word_form => 'Banner-is-Waving / dawn', :abbrev_form => 'BIW / D', :alpha => "BIWOD");
Formula.create( :base => '076', :offset => '067', :subindex => '0', :ord => '2', :iform => '118.1.a / 76.42', :word_form => 'Alt-Waving-banner / dawn', :abbrev_form => 'AWB / D', :alpha => "AWBOD");
Formula.create( :base => '076', :offset => '067', :subindex => '0', :ord => '4', :iform => '118.1.a / 76.42', :word_form => 'Alt-Banner-is-Waving / dawn', :abbrev_form => 'ABIW / D', :alpha => "ABIWOD");
Formula.create( :base => '076', :offset => '077', :subindex => '0', :ord => '1', :iform => '132.1.b / 76.1', :word_form => 'Strips-of-meat / sun', :abbrev_form => 'SOM / S', :alpha => "SOMOS");
Formula.create( :base => '076', :offset => '077', :subindex => '0', :ord => '5', :iform => '132.1.b / 76.1', :word_form => 'jerky / sun', :abbrev_form => 'J / S', :alpha => "JOS");
Formula.create( :base => '076', :offset => '087', :subindex => '0', :ord => '1', :iform => '76.1 / ( 76.1^2 )', :word_form => 'Sun / (sun^2)', :abbrev_form => 'S / (S^2)', :alpha => "SOSUT");
Formula.create( :base => '076', :offset => '087', :subindex => '0', :ord => '2', :iform => '76.1 / ( 76.1^2 )', :word_form => 'Sun / (sun^2)', :abbrev_form => 'S / (S^2)', :alpha => "SODS");
Formula.create( :base => '076', :offset => '087', :subindex => '0', :ord => '3', :iform => '76.1^3', :word_form => 'sun^3', :abbrev_form => 'S^3', :alpha => "TS");
Formula.create( :base => '076', :offset => '087', :subindex => '0', :ord => '4', :iform => 'Triangle( 76.1 )', :word_form => 'triangle( sun )', :abbrev_form => 'T( S )', :alpha => "TOS");
Formula.create( :base => '076', :offset => '088', :subindex => '0', :ord => '4', :iform => '76.1 + 77.1', :word_form => 'Sun + Tree', :abbrev_form => 'S + T', :alpha => "SIT");
Formula.create( :base => '076', :offset => '088', :subindex => '0', :ord => '5', :iform => '76.1 + 77.1', :word_form => 'Sun + wood', :abbrev_form => 'S + W', :alpha => "SIW");
Formula.create( :base => '076', :offset => '088', :subindex => '0', :ord => '6', :iform => '76.1 + (77.1:->77.1)', :word_form => 'Sun + ( Tree:->wood )', :abbrev_form => 'S + ( T:->W )', :alpha => "SITYW");
Formula.create( :base => '076', :offset => '088', :subindex => '0', :ord => '1', :iform => '77.1 + 76.1', :word_form => 'Tree + sun', :abbrev_form => 'T + S', :alpha => "TIS");
Formula.create( :base => '076', :offset => '088', :subindex => '0', :ord => '2', :iform => '77.1 + 76.1', :word_form => 'wood + sun', :abbrev_form => 'W + S', :alpha => "WIS");
Formula.create( :base => '076', :offset => '088', :subindex => '0', :ord => '3', :iform => '(77.1:->77.1) + 76.1', :word_form => '( Tree:->wood ) + sun ', :abbrev_form => '( T:->W ) + S', :alpha => "TYWIS");
Formula.create( :base => '076', :offset => '091', :subindex => '0', :ord => '1', :iform => '70.36 / 76.88', :word_form => '( good | stand ) / (( tree:->wood ) + sun )', :abbrev_form => '( G | S ) / (( T:->W ) + S )', :alpha => "GOSOTYWIS");
Formula.create( :base => '076', :offset => '101', :subindex => '0', :ord => '1', :iform => '( 1.43 / 50.1 ) / ( 50.79 / ( 70.36 / 76.88 ))', :word_form => '( Up / offend ) / (( good | stand ) / (( tree:->wood ) + sun ))', :abbrev_form => '( U / O ) / (( G | S ) / (( T:->W ) + S ))', :alpha => "UO-O-OGOSOTYWIS");
Formula.create( :base => '076', :offset => '108', :subindex => '0', :ord => '1', :iform => '76.1 / 31.1', :word_form => 'Sun / ten', :abbrev_form => 'S / T', :alpha => "SOT");
Formula.create( :base => '077', :offset => '000', :subindex => '0', :ord => '1', :iform => '77.0', :word_form => 'abstract( "tree" )', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '077', :offset => '000', :subindex => 'a', :ord => '1', :iform => '77.0.a', :word_form => 'abstract( "wood" )', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '077', :offset => '001', :subindex => '0', :ord => '3', :iform => '{ 77.0 }', :word_form => '{ tree }', :abbrev_form => '{ T }', :alpha => "T");
Formula.create( :base => '077', :offset => '001', :subindex => '0', :ord => '4', :iform => '{ 77.0.a }', :word_form => '{ wood }', :abbrev_form => '{ W }', :alpha => "W");
Formula.create( :base => '077', :offset => '001', :subindex => '0', :ord => '5', :iform => '77.0->77.0.a', :word_form => 'tree->wood', :abbrev_form => 'T->W', :alpha => "TYW");
Formula.create( :base => '077', :offset => '001', :subindex => '0', :ord => '1', :iform => '77.1', :word_form => '{"tree"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '077', :offset => '001', :subindex => '0', :ord => '2', :iform => '77.1', :word_form => '{"tree"}', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '077', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Open( 77.1 )', :word_form => 'open( tree->wood )', :abbrev_form => 'O( T->W )', :alpha => "OOTYW");
Formula.create( :base => '077', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * ( 77.1->77.1 )', :word_form => 'Water-at-side * ( tree->wood )', :abbrev_form => 'W |< * ( T->W )', :alpha => "WASATYW");
Formula.create( :base => '077', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.1^2', :word_form => '(tree->wood)^2', :abbrev_form => '(T->W)^2', :alpha => "TYWUT");
Formula.create( :base => '077', :offset => '027', :subindex => '0', :ord => '1', :iform => '1.1.a + 77.1', :word_form => 'Bar + (tree->wood)', :abbrev_form => 'B + ( T->W )', :alpha => "BITYW");
Formula.create( :base => '077', :offset => '027', :subindex => '0', :ord => '2', :iform => '1.1.a + 77.1', :word_form => 'dash + (tree->wood)', :abbrev_form => 'D + ( T->W )', :alpha => "DITYW");
Formula.create( :base => '077', :offset => '027', :subindex => '0', :ord => '3', :iform => '1.1.a + 77.1', :word_form => 'Bar /+ (tree->wood)', :abbrev_form => 'B /+ ( T->W )', :alpha => "BOITYW");
Formula.create( :base => '077', :offset => '027', :subindex => '0', :ord => '4', :iform => '1.1.a + 77.1', :word_form => 'Dash /+ (tree->wood)', :abbrev_form => 'D /+ ( T->W )', :alpha => "DOITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '7', :iform => '1.1.a + 77.1', :word_form => 'dash + (tree->wood)', :abbrev_form => 'D + ( T->W )', :alpha => "DITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '8', :iform => '1.1.a + 77.1', :word_form => 'Dash /+ (tree->wood)', :abbrev_form => 'D /+ ( T->W )', :alpha => "DOITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '9', :iform => '1.1.a + 77.1', :word_form => 'Bar + (tree->wood)', :abbrev_form => 'B + ( T->W )', :alpha => "BITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '10', :iform => '1.1.a + 77.1', :word_form => 'Bar /+ (tree->wood)', :abbrev_form => 'B /+ ( T->W )', :alpha => "BOITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '1', :iform => '66.1 + 77.1', :word_form => 'Sprout + (tree->wood)', :abbrev_form => 'S + ( T->W )', :alpha => "SITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '2', :iform => '66.1 /+ 77.1', :word_form => 'Sprout /+ (tree->wood)', :abbrev_form => 'S /+ ( T->W )', :alpha => "SOITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '3', :iform => '(66.1->1.1.a) + 77.1', :word_form => '(Sprout->bar) + (tree->wood)', :abbrev_form => '(S->B) + ( T->W )', :alpha => "SYBITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '4', :iform => '(66.1->1.1.a) /+ 77.1', :word_form => '(Sprout->bar) /+ (tree->wood)', :abbrev_form => '(S->B) /+ ( T->W )', :alpha => "SYBOITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '5', :iform => '(66.1->1.1.a) + 77.1', :word_form => '(Sprout->dash) + (tree->wood)', :abbrev_form => '(S->D) + ( T->W )', :alpha => "SYDITYW");
Formula.create( :base => '077', :offset => '031', :subindex => '0', :ord => '6', :iform => '(66.1->1.1.a) /+ 77.1', :word_form => '(Sprout->dash) /+ (tree->wood)', :abbrev_form => '(S->D) /+ ( T->W )', :alpha => "SYDOITYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '1', :iform => '70.76 / 77.1', :word_form => 'Sprout-earth-tap-root / (tree->wood)', :abbrev_form => 'SETR / ( T->W )', :alpha => "SETROTYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '3', :iform => '70.76 /+ 77.1', :word_form => 'Sprout-earth-tap-root /+ (tree->wood)', :abbrev_form => 'SETR /+ ( T->W )', :alpha => "SETROITYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '4', :iform => '70.76 / 77.1', :word_form => 'Plentiful / (tree->wood)', :abbrev_form => 'P / ( T->W )', :alpha => "POTYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '6', :iform => '70.76 /+ 77.1', :word_form => 'plentiful /+ (tree->wood)', :abbrev_form => 'P /+ ( T->W )', :alpha => "POITYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '7', :iform => '70.76 / 77.1', :word_form => 'Notches-in-bamboo / (tree->wood)', :abbrev_form => 'NIB / ( T->W )', :alpha => "NIBOTYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '9', :iform => '70.76 /+ 77.1', :word_form => 'Notches-in-bamboo /+ (tree->wood)', :abbrev_form => 'NIB /+ ( T->W )', :alpha => "NIBOITYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '10', :iform => '70.76 #/ 77.1', :word_form => 'notches-in-bamboo #/ (tree->wood)', :abbrev_form => 'NIB #/ (T->W)', :alpha => "NIBOLOTYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '2', :iform => 'Top(70.76 ) / base( 77.1 )', :word_form => 'Top( Sprout-earth-tap-root) / base(tree->wood)', :abbrev_form => 'T( SETR ) / B( T->W )', :alpha => "TOSETROBOTYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '5', :iform => 'Top(70.76 ) / base( 77.1 )', :word_form => 'Top( Plentiful ) / base(tree->wood)', :abbrev_form => 'T( P ) / B( T->W )', :alpha => "TOPOBOTYW");
Formula.create( :base => '077', :offset => '049', :subindex => '0', :ord => '8', :iform => 'Top(70.76 ) / base( 77.1 )', :word_form => 'Top( Notches-in-bamboo ) / base(tree->wood)', :abbrev_form => 'T( NIB ) / B( T->W )', :alpha => "TONIBOBOTYW");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '1', :iform => '77.1 /+ 1.1.a', :word_form => '(tree->wood) /+ dash', :abbrev_form => '( T->W ) /+ D', :alpha => "TYWOID");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '2', :iform => '77.1 /+ 1.1.a', :word_form => '(tree->wood) /+ bar', :abbrev_form => '( T->W ) /+ B', :alpha => "TYWOIB");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '3', :iform => '77.1 /+ 1.1.b', :word_form => '(tree->wood) /+ surface', :abbrev_form => '( T->W ) /+ S', :alpha => "TYWOIS");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '4', :iform => '77.1 /+ 1.1.b', :word_form => '(tree->wood) /+ ground', :abbrev_form => '( T->W ) /+ G', :alpha => "TYWOIG");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '5', :iform => '77.1 /+ 1.1.a', :word_form => '(tree->wood) /+ dash', :abbrev_form => '( T->W ) /+ D', :alpha => "TYWOID");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '6', :iform => '77.1 /+ 1.1.a', :word_form => '(tree->wood) /+ bar', :abbrev_form => '( T->W ) /+ B', :alpha => "TYWOIB");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '7', :iform => '77.1 /+ 1.1.b', :word_form => '(tree->wood) /+ surface', :abbrev_form => '( T->W ) /+ S', :alpha => "TYWOIS");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '8', :iform => '77.1 /+ 1.1.b', :word_form => '(tree->wood) /+ ground', :abbrev_form => '( T->W ) /+ G', :alpha => "TYWOIG");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '9', :iform => '77.1 /+ 1.1.a', :word_form => '(tree->wood) /+ dash', :abbrev_form => '( T->W ) /+ D', :alpha => "TYWOID");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '10', :iform => '77.1 /+ 1.1.a', :word_form => '(tree->wood) /+ bar', :abbrev_form => '( T->W ) /+ B', :alpha => "TYWOIB");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '11', :iform => '77.1 /+ 1.1.b', :word_form => '(tree->wood) /+ surface', :abbrev_form => '( T->W ) /+ S', :alpha => "TYWOIS");
Formula.create( :base => '077', :offset => '050', :subindex => '0', :ord => '12', :iform => '77.1 /+ 1.1.b', :word_form => '(tree->wood) /+ ground', :abbrev_form => '( T->W ) /+ G', :alpha => "TYWOIG");
Formula.create( :base => '077', :offset => '053', :subindex => '0', :ord => '1', :iform => '77.53.a + 77.1', :word_form => 'Thorns + (tree->wood)', :abbrev_form => 'T + ( T->W )', :alpha => "TITYW");
Formula.create( :base => '077', :offset => '053', :subindex => '0', :ord => '2', :iform => '(77.53.a->23.1) + 77.1', :word_form => '(thorns->space) + (tree->wood)', :abbrev_form => '(T->S) + ( T->W )', :alpha => "TYSITYW");
Formula.create( :base => '077', :offset => '053', :subindex => 'a', :ord => '1', :iform => '77.53.a', :word_form => '{"needles or thorns"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '077', :offset => '053', :subindex => 'b', :ord => '1', :iform => '77.53.a->23.1', :word_form => 'thorns->space', :abbrev_form => 'T->S', :alpha => "TYS");
Formula.create( :base => '077', :offset => '073', :subindex => '0', :ord => '2', :iform => '68.1 / 77.1', :word_form => 'Mouth / (tree->wood)', :abbrev_form => 'M / (T->W )', :alpha => "MOTYW");
Formula.create( :base => '077', :offset => '073', :subindex => '0', :ord => '3', :iform => '68.1 / 77.1', :word_form => 'opening / (tree->wood)', :abbrev_form => 'O / (T->W )', :alpha => "OOTYW");
Formula.create( :base => '077', :offset => '073', :subindex => '0', :ord => '1', :iform => '77.73', :word_form => '{"baby in blanket"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '077', :offset => '073', :subindex => '0', :ord => '4', :iform => '77.73->(68.1 / 77.1)', :word_form => 'Baby-in-blanket->(mouth / (tree->wood))', :abbrev_form => 'BIB->(M / (T->W ))', :alpha => "BIBYMOTYW");
Formula.create( :base => '077', :offset => '073', :subindex => '0', :ord => '5', :iform => '77.73->(68.1 / 77.1)', :word_form => 'Baby-in-blanket->(opening / (tree->wood))', :abbrev_form => 'BIB->(O / (T->W ))', :alpha => "BIBYOOTYW");
Formula.create( :base => '077', :offset => '073', :subindex => 'a', :ord => '1', :iform => '77.73', :word_form => '{"baby in blanket"}', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '077', :offset => '078', :subindex => '0', :ord => '1', :iform => '77.1 / 68.1', :word_form => ' (tree->wood) / Mouth', :abbrev_form => '(T->W ) / M', :alpha => "TYWOM");
Formula.create( :base => '077', :offset => '078', :subindex => '0', :ord => '2', :iform => '77.1 / 68.1', :word_form => ' (tree->wood) / opening', :abbrev_form => '(T->W ) / O', :alpha => "TYWOO");
Formula.create( :base => '077', :offset => '079', :subindex => '0', :ord => '2', :iform => '111.1 / 77.1', :word_form => 'Field / (tree->wood)', :abbrev_form => 'F / (T->W )', :alpha => "FOTYW");
Formula.create( :base => '077', :offset => '079', :subindex => '0', :ord => '1', :iform => '113.1.b / 77.1', :word_form => 'fruit / (tree->wood)', :abbrev_form => 'F / (T->W )', :alpha => "FOTYW");
Formula.create( :base => '077', :offset => '079', :subindex => '0', :ord => '3', :iform => '(113.1.b->111.1) / 77.1', :word_form => '(fruit->Field) / (tree->wood)', :abbrev_form => '(F->F ) / (T->W )', :alpha => "FYFOTYW");
Formula.create( :base => '077', :offset => '079', :subindex => '0', :ord => '4', :iform => '113.1.d / 77.1', :word_form => 'fruit / (tree->wood)', :abbrev_form => 'F / (T->W )', :alpha => "FOTYW");
Formula.create( :base => '077', :offset => '091', :subindex => '0', :ord => '2', :iform => '77.1 |%| (29.1.b / stack( 29.1.b ))', :word_form => '(tree->wood) |%| (Drops-of-liquid / stack( Drops-of-liquid ))', :abbrev_form => '(T->W ) |%| ( DOL / S(DOL))', :alpha => "TYWIL-DOLOSODOL");
Formula.create( :base => '077', :offset => '091', :subindex => '0', :ord => '3', :iform => '(77.1 |%| 29.1.b ) /[*] like(2.21)', :word_form => '((tree->wood) |%| Drops-of-liquid) /[*] like( water )', :abbrev_form => '((T->W ) |%| DOL ) /[*] L( W )', :alpha => "TYWIL-DOLO-EWL");
Formula.create( :base => '077', :offset => '091', :subindex => '0', :ord => '1', :iform => '77.91', :word_form => '{"tree and drops of liquid"}', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '077', :offset => '094', :subindex => '0', :ord => '1', :iform => '77.1 + 69.1', :word_form => '(tree->wood) + square-enclosure', :abbrev_form => '(T->W ) + SE', :alpha => "TYWI-SE");
Formula.create( :base => '077', :offset => '117', :subindex => '0', :ord => '1', :iform => '10.1.a * 77.1', :word_form => 'Side-person * (tree->wood)', :abbrev_form => 'SP * (T->W )', :alpha => "SPATYW");
Formula.create( :base => '077', :offset => '117', :subindex => '0', :ord => '2', :iform => '10.1.a * 77.1', :word_form => 'person-at-side * (tree->wood)', :abbrev_form => 'PAS * (T->W )', :alpha => "PASATYW");
Formula.create( :base => '077', :offset => '118', :subindex => '0', :ord => '1', :iform => 'right( split( 77.1 ))', :word_form => 'right( split( tree->wood))', :abbrev_form => 'R( S(T->W )', :alpha => "ROSOTYW");
Formula.create( :base => '077', :offset => '119', :subindex => '0', :ord => '1', :iform => 'left( split( 77.1 ))', :word_form => 'left( split( tree->wood))', :abbrev_form => 'L( S(T->W )', :alpha => "LOSOTYW");
Formula.create( :base => '078', :offset => '001', :subindex => '0', :ord => '1', :iform => '78.1', :word_form => '{"door leaf"}', :abbrev_form => 'DL', :alpha => "DL");
Formula.create( :base => '078', :offset => '001', :subindex => '0', :ord => '2', :iform => '78.1', :word_form => '{"door:.leaf"}', :abbrev_form => 'DL', :alpha => "DL");
Formula.create( :base => '078', :offset => '001', :subindex => '0', :ord => '3', :iform => 'Leaf( 78.17 )', :word_form => 'leaf( door )', :abbrev_form => 'L( D )', :alpha => "LOD");
Formula.create( :base => '078', :offset => '001', :subindex => '0', :ord => '4', :iform => 'Leaf( 78.17 )', :word_form => 'Door:.leaf', :abbrev_form => 'D:.L', :alpha => "LOD");
Formula.create( :base => '078', :offset => '002', :subindex => '0', :ord => '1', :iform => '78.1 / 33.18', :word_form => 'Door-leaf / city', :abbrev_form => 'DL / C', :alpha => "D-LOC");
Formula.create( :base => '078', :offset => '002', :subindex => '0', :ord => '3', :iform => '78.1 / 33.18', :word_form => 'Leaf-of-door / city', :abbrev_form => 'LOD / C', :alpha => "LODOC");
Formula.create( :base => '078', :offset => '002', :subindex => '0', :ord => '5', :iform => '78.1 / ( 69.1 / 33.1.d )', :word_form => 'Leaf-of-door / ( enclosure / seal-to-python )', :abbrev_form => 'LOD / ( E / STOP )', :alpha => "LODO-EOSTOP");
Formula.create( :base => '078', :offset => '002', :subindex => '0', :ord => '7', :iform => '78.1 / ( 69.1 / 33.1.d )', :word_form => 'Leaf-of-door / ( Square-enclosure / seal-to-python )', :abbrev_form => 'LOD / ( SE / STOP )', :alpha => "LODOSEOSTO");
Formula.create( :base => '078', :offset => '004', :subindex => '0', :ord => '1', :iform => '54.1 * 78.1', :word_form => 'Woman * Door-leaf', :abbrev_form => 'W * DL', :alpha => "WAD-L");
Formula.create( :base => '078', :offset => '004', :subindex => '0', :ord => '2', :iform => '54.1 * 78.1', :word_form => 'Woman * Leaf-of-door', :abbrev_form => 'W * LOD', :alpha => "WALOD");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '1', :iform => '78.1 / 162.1', :word_form => 'Door-leaf / short-tailed-bird', :abbrev_form => 'DL / STB', :alpha => "D-LOSTB");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '2', :iform => '78.1 / 162.1', :word_form => 'Leaf-of-door / short-tailed-bird', :abbrev_form => 'LOD / STB', :alpha => "LODOSTB");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '3', :iform => '78.1 / 162.1', :word_form => 'Door-leaf / bird-of-short-tail', :abbrev_form => 'DL / BOST', :alpha => "D-LOBOST");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '4', :iform => '78.1 / 162.1', :word_form => 'Leaf-of-door / bird-of-short-tail', :abbrev_form => 'LOD / BOST', :alpha => "LODOBOST");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '5', :iform => '78.1 / 162.1', :word_form => 'Door-leaf / short-tailed-bird', :abbrev_form => 'DL / STB', :alpha => "D-LOSTB");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '6', :iform => '78.1 / 162.1', :word_form => 'Leaf-of-door / short-tailed-bird', :abbrev_form => 'LOD / STB', :alpha => "LODOSTB");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '7', :iform => '78.1 / 162.1', :word_form => 'Door-leaf / bird-of-short-tail', :abbrev_form => 'DL / BOST', :alpha => "D-LOBOST");
Formula.create( :base => '078', :offset => '005', :subindex => '0', :ord => '8', :iform => '78.1 / 162.1', :word_form => 'Leaf-of-door / bird-of-short-tail', :abbrev_form => 'LOD / BOST', :alpha => "LODOBOST");
Formula.create( :base => '078', :offset => '008', :subindex => '0', :ord => '1', :iform => '78.1 / 68.1', :word_form => 'Door-leaf / mouth', :abbrev_form => 'DL / M', :alpha => "D-LOM");
Formula.create( :base => '078', :offset => '008', :subindex => '0', :ord => '2', :iform => '78.1 / 68.1', :word_form => 'Door-leaf / opening', :abbrev_form => 'DL / O', :alpha => "D-LOO");
Formula.create( :base => '078', :offset => '008', :subindex => '0', :ord => '3', :iform => '78.1 / 68.1', :word_form => 'Leaf-of-door / mouth', :abbrev_form => 'LOD / M', :alpha => "LODOM");
Formula.create( :base => '078', :offset => '008', :subindex => '0', :ord => '4', :iform => '78.1 / 68.1', :word_form => 'Leaf-of-door / opening', :abbrev_form => 'LOD / O', :alpha => "LODOO");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '1', :iform => '(78.1 / 14.15 ) * 26.2', :word_form => '( Door-leaf / write-a-line ) * tap', :abbrev_form => '(DL / WAL) * T', :alpha => "D-LOWALAT");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '2', :iform => '(78.1 / 14.15 ) * 26.2', :word_form => '( Leaf-of-door / write-a-line ) * tap', :abbrev_form => '(LOD / WAL) * T', :alpha => "LODOWALAT");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '3', :iform => '(78.1 / (14.14 + 1.1.a)) * 26.2', :word_form => '( Door-leaf / (Grab-a-pen + dash) ) * tap', :abbrev_form => '(DL / (GAP + D )) * T', :alpha => "D-LOGAPIDAT");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '4', :iform => '(78.1 / (14.14 + 1.1.a)) * 26.2', :word_form => '( Leaf-of-door / (Grab-a-pen + dash) ) * tap', :abbrev_form => '(LOD / (GAP + D )) * T', :alpha => "LODOGAPIDAT");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '5', :iform => '(78.1 * 26.2 ) / 14.15 )', :word_form => '( Door-leaf * tap ) / write-a-line', :abbrev_form => '(DL * T ) / WAL)', :alpha => "D-LATOWAL");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '6', :iform => '(78.1 * 26.2 ) / 14.15 )', :word_form => '( Leaf-of-door * tap )  / write-a-line', :abbrev_form => '(LOD * T ) / WAL', :alpha => "LODATOWAL");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '7', :iform => '(78.1 * 26.2 )  / (14.14 + 1.1.a)', :word_form => '( Door-leaf  * tap ) / (Grab-a-pen + dash)', :abbrev_form => '(DL  * T )/ (GAP + D )', :alpha => "D-LATOGAPID");
Formula.create( :base => '078', :offset => '010', :subindex => '0', :ord => '8', :iform => '(78.1 * 26.2 )  / (14.14 + 1.1.a)', :word_form => '( Leaf-of-door * tap ) / (Grab-a-pen + dash) ', :abbrev_form => '(LOD * T ) / (GAP + D )', :alpha => "LODATOGAPID");
Formula.create( :base => '078', :offset => '011', :subindex => '0', :ord => '1', :iform => '78.1 / 91.1', :word_form => 'Door-leaf / dog', :abbrev_form => 'DL / D', :alpha => "D-LOD");
Formula.create( :base => '078', :offset => '011', :subindex => '0', :ord => '2', :iform => '78.1 / 91.1', :word_form => 'Leaf-of-door / dog', :abbrev_form => 'LOD / D', :alpha => "LODOD");
Formula.create( :base => '078', :offset => '011', :subindex => '0', :ord => '3', :iform => '78.1 / 91.1', :word_form => 'Door-leaf / dog', :abbrev_form => 'DL / D', :alpha => "D-LOD");
Formula.create( :base => '078', :offset => '011', :subindex => '0', :ord => '4', :iform => '78.1 / 91.1', :word_form => 'Leaf-of-door / dog', :abbrev_form => 'LOD / D', :alpha => "LODOD");
Formula.create( :base => '078', :offset => '011', :subindex => '0', :ord => '5', :iform => '78.1 / 91.1', :word_form => 'Door-leaf / dog', :abbrev_form => 'DL / D', :alpha => "D-LOD");
Formula.create( :base => '078', :offset => '011', :subindex => '0', :ord => '6', :iform => '78.1 / 91.1', :word_form => 'Leaf-of-door / dog', :abbrev_form => 'LOD / D', :alpha => "LODOD");
Formula.create( :base => '078', :offset => '014', :subindex => '0', :ord => '1', :iform => '78.1 * 96.1', :word_form => 'Door-leaf * axe', :abbrev_form => 'DL * A', :alpha => "D-LA-A");
Formula.create( :base => '078', :offset => '014', :subindex => '0', :ord => '2', :iform => '78.1 * 96.1', :word_form => 'Leaf-of-door * axe', :abbrev_form => 'LOD * A', :alpha => "LODA-A");
Formula.create( :base => '078', :offset => '014', :subindex => '0', :ord => '3', :iform => '78.1 * 96.1', :word_form => 'Door-leaf * axe', :abbrev_form => 'DL * A', :alpha => "D-LA-A");
Formula.create( :base => '078', :offset => '014', :subindex => '0', :ord => '4', :iform => '78.1 * 96.1', :word_form => 'Leaf-of-door * axe', :abbrev_form => 'LOD * A', :alpha => "LODA-A");
Formula.create( :base => '078', :offset => '015', :subindex => '0', :ord => '1', :iform => '78.1 / 132.1.a', :word_form => 'Door-leaf / meat-like-moon', :abbrev_form => 'DL / MYM', :alpha => "D-LOMYM");
Formula.create( :base => '078', :offset => '015', :subindex => '0', :ord => '2', :iform => '78.1 / 132.1.a', :word_form => 'Leaf-of-door / meat-like-moon', :abbrev_form => 'LOD / MYM', :alpha => "LODOMYM");
Formula.create( :base => '078', :offset => '017', :subindex => '0', :ord => '1', :iform => '78.1 * inv( 78.1 )', :word_form => 'Door-leaf * inv( Door-leaf )', :abbrev_form => 'DL *  I( DL )', :alpha => "D-LA-ID-L");
Formula.create( :base => '078', :offset => '017', :subindex => '0', :ord => '2', :iform => '78.1 * inv( 78.1 )', :word_form => 'Leaf-of-door * inv( Leaf-of-door )', :abbrev_form => 'LOD *  I( LOD )', :alpha => "LODA-ILOD");
Formula.create( :base => '078', :offset => '017', :subindex => '0', :ord => '3', :iform => 'opp( 78.1 )', :word_form => 'opp( Door-leaf )', :abbrev_form => 'O( DL )', :alpha => "OOD-L");
Formula.create( :base => '078', :offset => '017', :subindex => '0', :ord => '4', :iform => 'opp( 78.1 )', :word_form => 'opp( Leaf-of-door )', :abbrev_form => 'O( LOD )', :alpha => "OOLOD");
Formula.create( :base => '079', :offset => '001', :subindex => '0', :ord => '1', :iform => '79.1', :word_form => '{"notches cut in bamboo"}', :abbrev_form => 'NIB', :alpha => "NIB");
Formula.create( :base => '079', :offset => '002', :subindex => '0', :ord => '1', :iform => '79.1 * 35.1', :word_form => 'Notches-in-bamboo * knife', :abbrev_form => 'NIB * K', :alpha => "NIBAK");
Formula.create( :base => '079', :offset => '007', :subindex => '0', :ord => '1', :iform => '63.1 / 79.1 / 68.1', :word_form => 'Roof / Notches-in-bamboo / mouth', :abbrev_form => 'R / NIB / M', :alpha => "RONIBOM");
Formula.create( :base => '079', :offset => '007', :subindex => '0', :ord => '2', :iform => '63.1 / 79.1 / 68.1', :word_form => 'Roof / Notches-in-bamboo / opening', :abbrev_form => 'R / NIB / O', :alpha => "RONIBOO");
Formula.create( :base => '080', :offset => '000', :subindex => '0', :ord => '1', :iform => '80.0', :word_form => 'abstract( "moon" )', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '080', :offset => '000', :subindex => 'a', :ord => '1', :iform => '80.0.a', :word_form => 'abstract( "crescent" )', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '080', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 80.0:80.0.a }', :word_form => '{ moon:crescent }', :abbrev_form => '{ M:C }', :alpha => "MIC");
Formula.create( :base => '080', :offset => '001', :subindex => '0', :ord => '3', :iform => '{ 80.0:->80.0.a }', :word_form => '{ moon:->crescent }', :abbrev_form => '{ M:->C }', :alpha => "MYC");
Formula.create( :base => '080', :offset => '001', :subindex => '0', :ord => '1', :iform => '80.1', :word_form => '{"crescent moon"}', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '080', :offset => '002', :subindex => '0', :ord => '1', :iform => '76.1 * 80.1', :word_form => 'Sun * moon', :abbrev_form => 'S * M', :alpha => "SAM");
Formula.create( :base => '081', :offset => '000', :subindex => '0', :ord => '1', :iform => '81.0', :word_form => 'abstract( "vapor" )', :abbrev_form => 'A( V )', :alpha => "AV");
Formula.create( :base => '081', :offset => '000', :subindex => 'a', :ord => '1', :iform => '81.0.a', :word_form => 'abstract( "cloud" )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '081', :offset => '000', :subindex => 'b', :ord => '1', :iform => '81.0.b', :word_form => 'abstract( "rise" )', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '081', :offset => '000', :subindex => 'c', :ord => '1', :iform => '81.0.c', :word_form => 'abstract( "fall" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '081', :offset => '000', :subindex => 'd', :ord => '1', :iform => '81.0.d', :word_form => 'abstract( "curl" )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '081', :offset => '001', :subindex => '0', :ord => '2', :iform => '81.0::81.0.b', :word_form => 'vapor::rises', :abbrev_form => 'V::R', :alpha => "VAR");
Formula.create( :base => '081', :offset => '001', :subindex => '0', :ord => '4', :iform => '81.0::81.0.d', :word_form => 'vapor::curls', :abbrev_form => 'V::C', :alpha => "VAC");
Formula.create( :base => '081', :offset => '001', :subindex => '0', :ord => '3', :iform => '81.1', :word_form => '{"curling clouds"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '081', :offset => '001', :subindex => '0', :ord => '1', :iform => '81.1', :word_form => '{"rising vapor"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '081', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * 81.1', :word_form => 'Water-at-side * vapor-is-rising', :abbrev_form => 'WAS * VIR', :alpha => "WASAVIR");
Formula.create( :base => '081', :offset => '002', :subindex => '0', :ord => '2', :iform => '2.21.a * 81.1', :word_form => 'Side-Water * vapor-is-rising', :abbrev_form => 'SW * VIR', :alpha => "SWAVIR");
Formula.create( :base => '081', :offset => '003', :subindex => '0', :ord => '1', :iform => '81.1 / 138.1', :word_form => 'Vapor-is-rising / rice', :abbrev_form => 'VIR / R', :alpha => "VIROR");
Formula.create( :base => '081', :offset => '003', :subindex => '0', :ord => '4', :iform => '81.1 / 138.1', :word_form => 'Vapor-is-curling / rice', :abbrev_form => 'VIC / R', :alpha => "VICOR");
Formula.create( :base => '081', :offset => '003', :subindex => '0', :ord => '7', :iform => '81.1 / 138.1', :word_form => 'air / rice', :abbrev_form => 'A / R', :alpha => "A-OR");
Formula.create( :base => '081', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Alt( 81.1 )', :word_form => 'alt( Vapor-is-rising )', :abbrev_form => 'A( VIR )', :alpha => "A-OVIR");
Formula.create( :base => '081', :offset => '004', :subindex => '0', :ord => '2', :iform => 'Alt( 81.1 )', :word_form => 'alt( Vapor-is-rising )', :abbrev_form => 'A( VIR )', :alpha => "VIRA");
Formula.create( :base => '081', :offset => '004', :subindex => '0', :ord => '3', :iform => 'Alt( 81.1 )', :word_form => 'alt( Vapor-is-curling )', :abbrev_form => 'A( VIC )', :alpha => "A-OVIC");
Formula.create( :base => '081', :offset => '004', :subindex => '0', :ord => '4', :iform => 'Alt( 81.1 )', :word_form => 'alt( Vapor-is-curling )', :abbrev_form => 'A( VIC )', :alpha => "VICA");
Formula.create( :base => '081', :offset => '004', :subindex => '0', :ord => '5', :iform => 'Alt( 81.1 )', :word_form => 'alt( air )', :abbrev_form => 'A( A )', :alpha => "A-OA");
Formula.create( :base => '081', :offset => '004', :subindex => '0', :ord => '6', :iform => 'Alt( 81.1 )', :word_form => 'alt( air )', :abbrev_form => 'A( A )', :alpha => "A-A");
Formula.create( :base => '082', :offset => '001', :subindex => '0', :ord => '1', :iform => '82.1', :word_form => '{"rising flames"}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '082', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'At-bottom( 82.1 )', :word_form => 'At-bottom( fire )', :abbrev_form => 'AB( F )', :alpha => "FAB");
Formula.create( :base => '082', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'Train( 1.1.c )', :word_form => 'Train( dot )', :abbrev_form => 'T( D )', :alpha => "TOD");
Formula.create( :base => '082', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a * 82.1', :word_form => 'Side-person * fire', :abbrev_form => 'SP * F', :alpha => "SPAF");
Formula.create( :base => '082', :offset => '002', :subindex => '0', :ord => '2', :iform => '10.1.a * 82.1', :word_form => 'Person-at-side * fire', :abbrev_form => 'PAS * F', :alpha => "PASAF");
Formula.create( :base => '082', :offset => '003', :subindex => '0', :ord => '1', :iform => '14.1.a / 82.1', :word_form => 'Right-hand-to-left-hand / fire', :abbrev_form => 'RYL / F', :alpha => "RYLOF");
Formula.create( :base => '082', :offset => '007', :subindex => '0', :ord => '1', :iform => '108.1 * 82.1', :word_form => 'Grain * fire', :abbrev_form => 'G * F', :alpha => "GAF");
Formula.create( :base => '082', :offset => '011', :subindex => '0', :ord => '1', :iform => 'Stack( 82.1 )', :word_form => 'stack( fire )', :abbrev_form => 'S( F *', :alpha => "SOF");
Formula.create( :base => '082', :offset => '016', :subindex => '0', :ord => '1', :iform => '82.1^2 / 24.1 / 82.1', :word_form => 'Fire^2 / cover / fire', :abbrev_form => 'F^2 / C / F', :alpha => "FUTOCOF");
Formula.create( :base => '082', :offset => '025', :subindex => '0', :ord => '1', :iform => '( 66.1 / 82.1 / 76.1.a ) / 82.1', :word_form => '( Sprout / fire / pot-of-rice ) / fire', :abbrev_form => '( S / F / POR ) / F', :alpha => "SOFOPOROF");
Formula.create( :base => '082', :offset => '025', :subindex => '0', :ord => '2', :iform => '82.25.a / 82.1', :word_form => 'Careful / fire', :abbrev_form => 'C / F', :alpha => "COF");
Formula.create( :base => '082', :offset => '025', :subindex => 'a', :ord => '1', :iform => '66.1 / 82.1 / 76.1.a', :word_form => 'Sprout / fire / pot-of-rice', :abbrev_form => 'S / F / POR', :alpha => "SOFOPOR");
Formula.create( :base => '083', :offset => '000', :subindex => '0', :ord => '1', :iform => '83.0', :word_form => 'Abstract( "heart" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '083', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 83.0 }', :word_form => '{ heart }', :abbrev_form => '{ H }', :alpha => "H");
Formula.create( :base => '083', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 83.0 ):( 68.0.a )', :word_form => 'heart:open', :abbrev_form => 'H:O', :alpha => "HIO");
Formula.create( :base => '083', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'At-side(( 83.0 ):( 68.0.a ))', :word_form => 'At-side( heart:open )', :abbrev_form => 'AS( H:O )', :alpha => "ASHIO");
Formula.create( :base => '083', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'At-side( 83.1 )', :word_form => 'At-side( heart )', :abbrev_form => 'AS( H )', :alpha => "ASH");
Formula.create( :base => '083', :offset => '002', :subindex => '0', :ord => '1', :iform => '66.2 / 83.1', :word_form => 'Grass-at-top / heart', :abbrev_form => 'GAT / H', :alpha => "GATOH");
Formula.create( :base => '083', :offset => '002', :subindex => '0', :ord => '2', :iform => '66.2 / 83.1', :word_form => 'Heart \ Grass-at-top', :abbrev_form => 'H \ GAT', :alpha => "HUGAT");
Formula.create( :base => '083', :offset => '003', :subindex => '0', :ord => '1', :iform => '66.2 / tri( 83.1 )', :word_form => 'Grass-at-top / tri( heart )', :abbrev_form => 'GAT / T( H )', :alpha => "GATOTOH");
Formula.create( :base => '083', :offset => '003', :subindex => '0', :ord => '3', :iform => 'Tri( 83.1 ) \ 66.2', :word_form => 'tri( heart ) \ Grass-at-top', :abbrev_form => 'T( H ) \ GAT', :alpha => "TOHUGAT");
Formula.create( :base => '083', :offset => '004', :subindex => '0', :ord => '1', :iform => '10.50.a / 83.1', :word_form => 'Swallow-like / heart', :abbrev_form => 'SL / H', :alpha => "SLOH");
Formula.create( :base => '083', :offset => '004', :subindex => '0', :ord => '2', :iform => ' 83.1 \ 10.50.a', :word_form => 'Heart \ Swallow-like', :abbrev_form => 'SL \ H', :alpha => "HUS-L");
Formula.create( :base => '084', :offset => '000', :subindex => '0', :ord => '1', :iform => '84.0', :word_form => 'abstract( "tooth" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '084', :offset => '000', :subindex => 'a', :ord => '1', :iform => '84.0.a', :word_form => 'abstract( "rat" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '084', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 84.0 }', :word_form => '{ tooth }', :abbrev_form => '{ T }', :alpha => "T");
Formula.create( :base => '084', :offset => '001', :subindex => '0', :ord => '1', :iform => '84.1', :word_form => '{"tooth"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '084', :offset => '001', :subindex => 'a', :ord => '2', :iform => '{ 84.0.a }', :word_form => '{ teeth }', :abbrev_form => '{ T }', :alpha => "T");
Formula.create( :base => '084', :offset => '001', :subindex => 'a', :ord => '1', :iform => '84.1.a', :word_form => '{"teeth"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '084', :offset => '002', :subindex => '0', :ord => '1', :iform => '66.2.a / 84.1', :word_form => 'Grass-at-top / tooth', :abbrev_form => 'GAT / T', :alpha => "GATOT");
Formula.create( :base => '084', :offset => '003', :subindex => '0', :ord => '1', :iform => '68.1 * 84.1', :word_form => 'Mouth * tooth', :abbrev_form => 'M * T', :alpha => "MAT");
Formula.create( :base => '084', :offset => '004', :subindex => '0', :ord => '1', :iform => '84.1 * 178.1', :word_form => 'Tooth * bird-of-long-tail', :abbrev_form => 'M * BOLT', :alpha => "MABOLT");
Formula.create( :base => '084', :offset => '005', :subindex => '0', :ord => '1', :iform => '84.1 * 162.1', :word_form => 'Tooth * bird-of-short-tail', :abbrev_form => 'M * BOST', :alpha => "MABOST");
Formula.create( :base => '084', :offset => '006', :subindex => '0', :ord => '1', :iform => '68.78 * 84.1', :word_form => 'Speak-a-word * tooth', :abbrev_form => 'SAW * T', :alpha => "SAWAT");
Formula.create( :base => '084', :offset => '007', :subindex => '0', :ord => '1', :iform => '84.1 * ( 33.18->33.18.a )', :word_form => 'Tooth * ( city->beta )', :abbrev_form => 'T * ( C->B )', :alpha => "TACYB");
Formula.create( :base => '084', :offset => '008', :subindex => '0', :ord => '1', :iform => '63.2 / 84.1', :word_form => 'Cave / tooth', :abbrev_form => 'C / T', :alpha => "COT");
Formula.create( :base => '084', :offset => '009', :subindex => '0', :ord => '1', :iform => '25.1 * 84.1', :word_form => 'Ice * tooth', :abbrev_form => 'I * T', :alpha => "IAT");
Formula.create( :base => '085', :offset => '001', :subindex => '0', :ord => '1', :iform => '85.1', :word_form => '{"snake raised on tail"}', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '085', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1 * 85.1', :word_form => 'Mouth * python', :abbrev_form => 'M * P', :alpha => "MAP");
Formula.create( :base => '085', :offset => '002', :subindex => '0', :ord => '3', :iform => '68.1 * 85.1', :word_form => 'Mouth * Snake-handle', :abbrev_form => 'M * SH', :alpha => "MASH");
Formula.create( :base => '085', :offset => '002', :subindex => '0', :ord => '4', :iform => '68.1 * 85.1', :word_form => 'Mouth * python', :abbrev_form => 'M * SH', :alpha => "MASH");
Formula.create( :base => '085', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.136 */ 85.1', :word_form => 'Sick */ python', :abbrev_form => 'S */ P', :alpha => "SAOP");
Formula.create( :base => '085', :offset => '003', :subindex => '0', :ord => '2', :iform => '77.136 */ 85.1', :word_form => 'Sick */ Snake-handle', :abbrev_form => 'S */ SH', :alpha => "SAOSH");
Formula.create( :base => '085', :offset => '003', :subindex => '0', :ord => '3', :iform => '77.136 */ 85.1', :word_form => 'Sick */ Upright-Snake', :abbrev_form => 'S */ URS', :alpha => "SAO-URS");
Formula.create( :base => '085', :offset => '004', :subindex => '0', :ord => '1', :iform => 'At-top( 66.2 ) / 85.1', :word_form => 'At-top( grass ) / python', :abbrev_form => 'AT( G ) / P', :alpha => "GATOP");
Formula.create( :base => '085', :offset => '004', :subindex => '0', :ord => '2', :iform => 'At-top( 66.2 ) / 85.1', :word_form => 'At-top( grass ) / Snake-handle', :abbrev_form => 'AT( G ) / SH', :alpha => "GATOSH");
Formula.create( :base => '085', :offset => '004', :subindex => '0', :ord => '3', :iform => 'At-top( 66.2 ) / 85.1', :word_form => 'At-top( grass ) / Upright-Snake', :abbrev_form => 'AT( G ) / URS', :alpha => "GATO-URS");
Formula.create( :base => '085', :offset => '005', :subindex => '0', :ord => '1', :iform => '71.11 / 85.1', :word_form => 'Bamboo / python', :abbrev_form => 'B / P', :alpha => "BOP");
Formula.create( :base => '085', :offset => '005', :subindex => '0', :ord => '3', :iform => '71.11 / 85.1', :word_form => 'Bamboo / upright-snake', :abbrev_form => 'B / URS', :alpha => "BOURS");
Formula.create( :base => '085', :offset => '005', :subindex => '0', :ord => '4', :iform => '71.11 / 85.1', :word_form => 'Bamboo / Snake-handle', :abbrev_form => 'B / SH', :alpha => "BOSH");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '1', :iform => '89.1.a * 85.1', :word_form => 'Hand-at-side * python', :abbrev_form => 'HAS * P', :alpha => "HASAP");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '2', :iform => '89.1.a * 85.1', :word_form => 'Hand-at-side * Snake-handle', :abbrev_form => 'HAS * SH', :alpha => "HASASH");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '3', :iform => '89.1.a * 85.1', :word_form => 'Hand-at-side * Upright-Snake', :abbrev_form => 'HAS * URS', :alpha => "HASAURS");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '4', :iform => '89.1.a * 85.1', :word_form => 'Side-Hand * python', :abbrev_form => 'SH * P', :alpha => "SHAP");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '5', :iform => '89.1.a * 85.1', :word_form => 'Side-Hand * Snake-handle', :abbrev_form => 'SH * SH', :alpha => "SHASH");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '6', :iform => '89.1.a * 85.1', :word_form => 'Side-Hand * Upright-Snake', :abbrev_form => 'SH * URS', :alpha => "SHAURS");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '7', :iform => '89.1.a * 85.1', :word_form => 'Hand-at-side * python', :abbrev_form => 'HAS * P', :alpha => "HASAP");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '8', :iform => '89.1.a * 85.1', :word_form => 'Hand-at-side * Snake-handle', :abbrev_form => 'HAS * SH', :alpha => "HASASH");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '9', :iform => '89.1.a * 85.1', :word_form => 'Hand-at-side * Upright-Snake', :abbrev_form => 'HAS * URS', :alpha => "HASAURS");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '10', :iform => '89.1.a * 85.1', :word_form => 'Side-Hand * python', :abbrev_form => 'SH * P', :alpha => "SHAP");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '11', :iform => '89.1.a * 85.1', :word_form => 'Side-Hand * Snake-handle', :abbrev_form => 'SH * SH', :alpha => "SHASH");
Formula.create( :base => '085', :offset => '006', :subindex => '0', :ord => '12', :iform => '89.1.a * 85.1', :word_form => 'Side-Hand * Upright-Snake', :abbrev_form => 'SH * URS', :alpha => "SHAURS");
Formula.create( :base => '085', :offset => '007', :subindex => '0', :ord => '1', :iform => '74.2 * 85.1', :word_form => 'Rawhide * python', :abbrev_form => 'RH * P', :alpha => "R-HAP");
Formula.create( :base => '085', :offset => '007', :subindex => '0', :ord => '2', :iform => '74.2 * 85.1', :word_form => 'Rawhide * Snake-handle', :abbrev_form => 'RH * SH', :alpha => "R-HASH");
Formula.create( :base => '085', :offset => '007', :subindex => '0', :ord => '3', :iform => '74.2 * 85.1', :word_form => 'Rawhide * Upright-Snake', :abbrev_form => 'RH * URS', :alpha => "R-HAURS");
Formula.create( :base => '085', :offset => '007', :subindex => '0', :ord => '4', :iform => '74.2 * 85.1', :word_form => 'Rawhide * python', :abbrev_form => 'RH * P', :alpha => "R-HAP");
Formula.create( :base => '085', :offset => '007', :subindex => '0', :ord => '5', :iform => '74.2 * 85.1', :word_form => 'Rawhide * Snake-handle', :abbrev_form => 'RH * SH', :alpha => "R-HASH");
Formula.create( :base => '085', :offset => '007', :subindex => '0', :ord => '6', :iform => '74.2 * 85.1', :word_form => 'Rawhide * Upright-Snake', :abbrev_form => 'RH * URS', :alpha => "R-HAURS");
Formula.create( :base => '085', :offset => '008', :subindex => '0', :ord => '1', :iform => '14.80 * 85.1', :word_form => 'Father / python', :abbrev_form => 'F / P', :alpha => "FOP");
Formula.create( :base => '085', :offset => '008', :subindex => '0', :ord => '2', :iform => '14.80 * 85.1', :word_form => 'Father / Snake-handle', :abbrev_form => 'F / SH', :alpha => "FOSH");
Formula.create( :base => '085', :offset => '008', :subindex => '0', :ord => '3', :iform => '14.80 * 85.1', :word_form => 'Father / Upright-Snake', :abbrev_form => 'F / URS', :alpha => "FO-URS");
Formula.create( :base => '085', :offset => '009', :subindex => '0', :ord => '1', :iform => '103.1 *\ 85.1', :word_form => 'Claw *\ python', :abbrev_form => 'C *\ P', :alpha => "CAUSH");
Formula.create( :base => '085', :offset => '009', :subindex => '0', :ord => '2', :iform => '103.1 *\ 85.1', :word_form => 'Claw *\ Snake-handle', :abbrev_form => 'C *\ SH', :alpha => "CAUSH");
Formula.create( :base => '085', :offset => '009', :subindex => '0', :ord => '3', :iform => '103.1 *\ 85.1', :word_form => 'Claw *\ Upright-Snake', :abbrev_form => 'C *\ URS', :alpha => "CAU-URS");
Formula.create( :base => '085', :offset => '010', :subindex => '0', :ord => '2', :iform => '(107.1.a^2) / 85.1', :word_form => '(Pieces-of-jade ^2 ) / python', :abbrev_form => '(POJ^2) / P', :alpha => "POJUTOP");
Formula.create( :base => '085', :offset => '010', :subindex => '0', :ord => '1', :iform => '107.2 / 85.1', :word_form => 'pair-of-jade / python', :abbrev_form => 'POJ / P', :alpha => "POJOP");
Formula.create( :base => '086', :offset => '000', :subindex => '0', :ord => '1', :iform => '86.0', :word_form => 'abstract( "banner" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '086', :offset => '000', :subindex => 'a', :ord => '1', :iform => '86.0.a', :word_form => 'abstract( "hang" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '086', :offset => '001', :subindex => '0', :ord => '3', :iform => '86.0::86.0.a', :word_form => 'banner::hang', :abbrev_form => 'B::H', :alpha => "BAH");
Formula.create( :base => '086', :offset => '001', :subindex => '0', :ord => '1', :iform => '86.1', :word_form => '{"hanging-banner"}', :abbrev_form => 'DN', :alpha => "DN");
Formula.create( :base => '086', :offset => '002', :subindex => '0', :ord => '3', :iform => '83.1 \ 86.1', :word_form => 'Heart \ Hanging-banner', :abbrev_form => 'H \ HB', :alpha => "HUH-B");
Formula.create( :base => '086', :offset => '002', :subindex => '0', :ord => '7', :iform => '83.1 \ 86.1', :word_form => 'Heart \ banner-is-Hanging', :abbrev_form => 'H \ BIH', :alpha => "HUBIH");
Formula.create( :base => '086', :offset => '002', :subindex => '0', :ord => '1', :iform => '86.1 / 83.1', :word_form => 'Hanging-banner / heart', :abbrev_form => 'HB / H', :alpha => "H-BOH");
Formula.create( :base => '086', :offset => '002', :subindex => '0', :ord => '5', :iform => '86.1 / 83.1', :word_form => 'Banner-is-Hanging / heart', :abbrev_form => 'BIH / H', :alpha => "BIHOH");
Formula.create( :base => '086', :offset => '003', :subindex => '0', :ord => '1', :iform => '83.1.a * 86.1', :word_form => 'Side-heart * Banner-is-Hanging', :abbrev_form => 'SH * BIH', :alpha => "SHABIH");
Formula.create( :base => '086', :offset => '004', :subindex => '0', :ord => '1', :iform => '68.1 * 86.1', :word_form => 'Mouth * Hanging-banner', :abbrev_form => 'M * HB', :alpha => "MA-HB");
Formula.create( :base => '086', :offset => '004', :subindex => '0', :ord => '3', :iform => '68.1 * 86.1', :word_form => 'Mouth * banner-is-Hanging', :abbrev_form => 'M * BIH', :alpha => "MABIH");
Formula.create( :base => '086', :offset => '005', :subindex => '0', :ord => '1', :iform => '92.1 * 86.1', :word_form => 'Ox * hanging-banner', :abbrev_form => 'O * HB', :alpha => "O-AH-B");
Formula.create( :base => '086', :offset => '005', :subindex => '0', :ord => '2', :iform => '92.1 * 86.1', :word_form => 'Ox *  banner-is-Hanging', :abbrev_form => 'O * BIH', :alpha => "O-ABIH");
Formula.create( :base => '086', :offset => '006', :subindex => '0', :ord => '1', :iform => 'Alt( 144.2 )', :word_form => 'alt( lattice-window-heart )', :abbrev_form => 'A( LWH )', :alpha => "LWHA");
Formula.create( :base => '087', :offset => '001', :subindex => '0', :ord => '1', :iform => '87.1.a */ 31.1', :word_form => 'Ladle / ten', :abbrev_form => 'L / T', :alpha => "LOT");
Formula.create( :base => '087', :offset => '001', :subindex => '0', :ord => '3', :iform => 'Stack( 1.1.c)  */ 31.1', :word_form => 'Stack( dot )  / ten', :abbrev_form => 'S( D ) / T', :alpha => "SODOT");
Formula.create( :base => '087', :offset => '001', :subindex => 'a', :ord => '1', :iform => '87.1.a', :word_form => '{"ladle"}', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '087', :offset => '002', :subindex => '0', :ord => '1', :iform => '89.1.a * 87.1', :word_form => 'Side-Hand * wine-barrel', :abbrev_form => 'SH * WB', :alpha => "SHAWB");
Formula.create( :base => '087', :offset => '002', :subindex => '0', :ord => '2', :iform => '89.1.a * 87.1', :word_form => 'Hand-at-Side * wine-barrel', :abbrev_form => 'HAS * WB', :alpha => "HASAWB");
Formula.create( :base => '087', :offset => '002', :subindex => '0', :ord => '3', :iform => '89.1.a * 87.1', :word_form => 'Side-Hand * barrel-of-wine', :abbrev_form => 'SH * BOW', :alpha => "SHABOW");
Formula.create( :base => '087', :offset => '002', :subindex => '0', :ord => '4', :iform => '89.1.a * 87.1', :word_form => 'Hand-at-Side * barrel-of-wine', :abbrev_form => 'HAS * BOW', :alpha => "HASABOW");
Formula.create( :base => '087', :offset => '002', :subindex => '0', :ord => '5', :iform => '89.1.a * 87.1', :word_form => 'Side-Hand * ( Ladle / ten )', :abbrev_form => 'SH * LOT', :alpha => "SHALOT");
Formula.create( :base => '087', :offset => '002', :subindex => '0', :ord => '6', :iform => '89.1.a * 87.1', :word_form => 'Hand-at-Side * ( Ladle / ten )', :abbrev_form => 'HAS * LOT', :alpha => "HASALOT");
Formula.create( :base => '087', :offset => '003', :subindex => '0', :ord => '5', :iform => '( 118.1.a / 76.42 ) */ 87.1', :word_form => '( Alt-Waving-banner / dawn) */  ( Ladle / ten )', :abbrev_form => '(AWB / D ) */ LOT', :alpha => "AWBODAOLOT");
Formula.create( :base => '087', :offset => '003', :subindex => '0', :ord => '9', :iform => '( 118.1.a / 76.42 ) */ 87.1', :word_form => '( Alt-Waving-banner / dawn) */ barrel-of-wine', :abbrev_form => '(AWB / D ) */ BOW', :alpha => "AWBODAOBOW");
Formula.create( :base => '087', :offset => '003', :subindex => '0', :ord => '13', :iform => '( 118.1.a / 76.42 ) */ 87.1', :word_form => '( Alt-Banner-is-Waving / dawn ) */ ( Ladle / ten )', :abbrev_form => '( ABIW / D ) */ LOT', :alpha => "ABIWODAOLOT");
Formula.create( :base => '087', :offset => '003', :subindex => '0', :ord => '17', :iform => '( 118.1.a / 76.42 ) */ 87.1', :word_form => '( Alt-Banner-is-Waving / dawn ) */ barrel-of-wine', :abbrev_form => '( ABIW / D ) */ BOW', :alpha => "ABIWODAOBOW");
Formula.create( :base => '087', :offset => '003', :subindex => '0', :ord => '1', :iform => '76.67 */ 87.1', :word_form => 'Waving-banner-dawn */ barrel-of-wine', :abbrev_form => 'WBD */ BOW', :alpha => "WBDAOBOW");
Formula.create( :base => '087', :offset => '004', :subindex => '0', :ord => '1', :iform => '108.1 * 87.1', :word_form => 'Grain * ( Ladle / ten )', :abbrev_form => 'G * LOT', :alpha => "GALOT");
Formula.create( :base => '087', :offset => '004', :subindex => '0', :ord => '2', :iform => '108.1 * 87.1', :word_form => 'Grain * barrel-of-wine', :abbrev_form => 'G * BOW', :alpha => "GABOW");
Formula.create( :base => '087', :offset => '004', :subindex => '1', :ord => '1', :iform => '125.1 * 87.4', :word_form => 'Insect-snake * section', :abbrev_form => 'IS * S', :alpha => "ISAS");
Formula.create( :base => '087', :offset => '005', :subindex => '0', :ord => '1', :iform => '138.1 * 87.1', :word_form => 'Rice * barrel-of-wine', :abbrev_form => 'R * BOW', :alpha => "RABOW");
Formula.create( :base => '087', :offset => '005', :subindex => '0', :ord => '2', :iform => '138.1 * 87.1', :word_form => 'Rice * (ladle / ten )', :abbrev_form => 'R * ( L / T )', :alpha => "RALOT");
Formula.create( :base => '087', :offset => '006', :subindex => '0', :ord => '1', :iform => 'Alt( 87.1 )', :word_form => 'Alt( barrel-of-wine  )', :abbrev_form => 'A( BOW )', :alpha => "ABOW");
Formula.create( :base => '087', :offset => '006', :subindex => '0', :ord => '3', :iform => 'Alt( 87.1 )', :word_form => 'Alt( Ladle / ten  )', :abbrev_form => 'A( L / T )', :alpha => "ALOT");
Formula.create( :base => '087', :offset => '007', :subindex => '0', :ord => '1', :iform => '76.1 / 87.6', :word_form => 'Sun / Alt-barrel-of-wine', :abbrev_form => 'S / ABOW', :alpha => "SO-ABOW");
Formula.create( :base => '087', :offset => '007', :subindex => '0', :ord => '2', :iform => '76.1 / 87.6', :word_form => 'Sun / Alt( Ladle / ten  )', :abbrev_form => 'S / A( L / T )', :alpha => "SO-ALOT");
Formula.create( :base => '088', :offset => '000', :subindex => '0', :ord => '1', :iform => '88.0', :word_form => 'abstract( "Foot"  ) ', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '088', :offset => '000', :subindex => 'a', :ord => '1', :iform => '88.0.a', :word_form => 'abstract( "knee"  ) ', :abbrev_form => 'A( K )', :alpha => "AK");
Formula.create( :base => '088', :offset => '000', :subindex => 'b', :ord => '1', :iform => '88.0.b', :word_form => 'abstract( "roll"  ) ', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '088', :offset => '000', :subindex => 'c', :ord => '1', :iform => '88.0.c', :word_form => 'abstract( "leg"  ) ', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '088', :offset => '000', :subindex => 'd', :ord => '1', :iform => '88.0.d', :word_form => 'abstract( "toe"  ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '088', :offset => '000', :subindex => 'e', :ord => '1', :iform => '88.0.e', :word_form => 'abstract( "heel"  ) ', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '088', :offset => '000', :subindex => 'f', :ord => '1', :iform => '88.0.f', :word_form => 'abstract( "sole"  ) ', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '088', :offset => '001', :subindex => '0', :ord => '1', :iform => '88.1', :word_form => '{"foot and toes"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '088', :offset => '001', :subindex => '0', :ord => '2', :iform => '88.1', :word_form => '{"foot and toes"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '088', :offset => '001', :subindex => '0', :ord => '3', :iform => '88.1', :word_form => '{"foot and toes"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '088', :offset => '001', :subindex => '0', :ord => '4', :iform => '88.1', :word_form => '{"foot and toes"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '088', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 88.1 )', :word_form => 'alt( stop )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '088', :offset => '002', :subindex => '0', :ord => '1', :iform => '88.60 * 88.1', :word_form => 'Foot * stop', :abbrev_form => 'F * S', :alpha => "FAS");
Formula.create( :base => '088', :offset => '003', :subindex => '0', :ord => '1', :iform => '88.1 / 84.1.a', :word_form => 'Stop / teeth', :abbrev_form => 'S / T', :alpha => "SOT");
Formula.create( :base => '088', :offset => '004', :subindex => '0', :ord => '1', :iform => '88.1 * 12.1', :word_form => 'Stop * spin', :abbrev_form => 'S * S', :alpha => "SAS");
Formula.create( :base => '088', :offset => '004', :subindex => '0', :ord => '2', :iform => '88.1 * 12.1', :word_form => 'Stop * turned-around-person', :abbrev_form => 'S * TAP', :alpha => "SATAP");
Formula.create( :base => '088', :offset => '012', :subindex => '0', :ord => '1', :iform => '70.1 * 88.1', :word_form => 'Earth * stop', :abbrev_form => 'E * S', :alpha => "EAS");
Formula.create( :base => '088', :offset => '013', :subindex => '0', :ord => '1', :iform => '1.46 * 88.1', :word_form => 'Revelation * stop', :abbrev_form => 'R * S', :alpha => "RAS");
Formula.create( :base => '088', :offset => '014', :subindex => '0', :ord => '1', :iform => '89.1.a * 88.1', :word_form => 'Side-hand * stop', :abbrev_form => 'SH * S', :alpha => "SHAS");
Formula.create( :base => '088', :offset => '014', :subindex => '0', :ord => '3', :iform => '89.1.a * 88.1', :word_form => 'Hand-at-Side * stop', :abbrev_form => 'HAS * S', :alpha => "HASAS");
Formula.create( :base => '088', :offset => '015', :subindex => '0', :ord => '1', :iform => '88.15', :word_form => '{"feet in opposite directions"}', :abbrev_form => 'FO', :alpha => "FO");
Formula.create( :base => '088', :offset => '015', :subindex => '0', :ord => '2', :iform => 'Opposed( 88.1 )', :word_form => 'opposed( foot-and-toes )', :abbrev_form => 'O( FAT )', :alpha => "OFAT");
Formula.create( :base => '088', :offset => '024', :subindex => '0', :ord => '1', :iform => '88.1 / inv( 88.1 )', :word_form => 'Stop / inv( stop )', :abbrev_form => 'S / I( S )', :alpha => "SOIS");
Formula.create( :base => '088', :offset => '024', :subindex => '0', :ord => '2', :iform => '88.1 / like( 29.9  )', :word_form => 'Stop / like( small )', :abbrev_form => 'S / L( S )', :alpha => "SOLS");
Formula.create( :base => '088', :offset => '024', :subindex => '0', :ord => '3', :iform => '88.1 / ( inv( 88.1 )->like( 29.9 ))', :word_form => 'Stop / ( inv( stop )->like( small ))', :abbrev_form => 'S / ( I( S )->L( S ))', :alpha => "SOISYLS");
Formula.create( :base => '088', :offset => '024', :subindex => '0', :ord => '4', :iform => '88.1 / 88.24.a', :word_form => 'Stop / Stop-is-like-small', :abbrev_form => 'S / SILS', :alpha => "SOSILS");
Formula.create( :base => '088', :offset => '024', :subindex => 'a', :ord => '1', :iform => 'inv( 88.1 )->like( 29.9 )', :word_form => 'inv( stop )->like( small )', :abbrev_form => 'I( S )->L( S )', :alpha => "ISYLS");
Formula.create( :base => '088', :offset => '029', :subindex => '0', :ord => '2', :iform => '( 14.1.b + 66.1 ) / 88.1', :word_form => '( grab + sprout ) / Stop', :abbrev_form => '(G+S) / S', :alpha => "GISOS");
Formula.create( :base => '088', :offset => '029', :subindex => '0', :ord => '1', :iform => '( 66.1 + 14.1.b ) / 88.1', :word_form => '( sprout + grab ) / Stop', :abbrev_form => '(S+G) / S', :alpha => "SIGOS");
Formula.create( :base => '088', :offset => '029', :subindex => '0', :ord => '5', :iform => '14.45.a / 88.1', :word_form => 'grab-a-sprout / Stop', :abbrev_form => 'GAS / S', :alpha => "GASOS");
Formula.create( :base => '088', :offset => '029', :subindex => '0', :ord => '3', :iform => '66.1 + 14.1.b', :word_form => 'Stop \ ( sprout + grab )', :abbrev_form => 'S \ (S+G)', :alpha => "SUSIG");
Formula.create( :base => '088', :offset => '029', :subindex => '0', :ord => '4', :iform => '88.1 \ ( 14.1.b + 66.1 )', :word_form => 'Stop \ ( grab + sprout )', :abbrev_form => 'S \ (G+S)', :alpha => "SUGIS");
Formula.create( :base => '088', :offset => '029', :subindex => '0', :ord => '6', :iform => '88.1 \ 14.45.a', :word_form => 'Stop \ grab-a-sprout', :abbrev_form => 'S \ GAS', :alpha => "SUGAS");
Formula.create( :base => '088', :offset => '032', :subindex => '0', :ord => '1', :iform => '88.1 / 132.1.a', :word_form => 'Stop / ( meat->moon )', :abbrev_form => 'S / ( M->M )', :alpha => "SOMYM");
Formula.create( :base => '088', :offset => '034', :subindex => '0', :ord => '1', :iform => '10.1 /[*] 88.1', :word_form => 'Person /[*] stop', :abbrev_form => 'P /[*] S', :alpha => "POES");
Formula.create( :base => '088', :offset => '035', :subindex => '0', :ord => '2', :iform => '( 41.1 / 88.1.a ) * 88.1', :word_form => '(step:left / alt( stop )) * stop', :abbrev_form => '( S:L / A( S )) * S', :alpha => "SILO-ASAS");
Formula.create( :base => '088', :offset => '035', :subindex => '0', :ord => '3', :iform => '41.1 * ( 88.1 / 88.1.a )', :word_form => 'step:left * ( stop / alt( stop ) )', :abbrev_form => 'S:L * ( A( S ) / S )', :alpha => "SILA-ASOS");
Formula.create( :base => '088', :offset => '035', :subindex => '0', :ord => '1', :iform => '41.3 * 88.1', :word_form => 'Step-and-stop * stop', :abbrev_form => 'SAS * S', :alpha => "SASAS");
Formula.create( :base => '088', :offset => '036', :subindex => '0', :ord => '2', :iform => '( 1.1.a / 88.1 ) */\ 45.1', :word_form => '( bar / stop ) */\ dart', :abbrev_form => '( B / S ) */\ D', :alpha => "BOSAO-UD");
Formula.create( :base => '088', :offset => '036', :subindex => '0', :ord => '1', :iform => '88.1 *\ alt( 45.2 )', :word_form => 'Stop *\ alt( dagger-ax )', :abbrev_form => 'S *\ A( DA )', :alpha => "SAU-ADA");
Formula.create( :base => '088', :offset => '039', :subindex => '0', :ord => '1', :iform => '7.1 / ( 4.2 * 88.1 )', :word_form => 'Drag / ( stride:long * stop )', :abbrev_form => 'D / (S:L * S)', :alpha => "DOSILAS");
Formula.create( :base => '088', :offset => '039', :subindex => '0', :ord => '2', :iform => '7.1 / 88.39.a', :word_form => 'Drag / Stride-and-stop', :abbrev_form => 'D / SAS', :alpha => "DOSAS");
Formula.create( :base => '088', :offset => '039', :subindex => 'a', :ord => '1', :iform => '4.2 * 88.1', :word_form => 'stride:long * stop', :abbrev_form => 'S:L * S', :alpha => "SILAS");
Formula.create( :base => '088', :offset => '043', :subindex => '0', :ord => '1', :iform => '1.1.a / 88.1', :word_form => 'Dash / stop', :abbrev_form => 'D / S', :alpha => "DOS");
Formula.create( :base => '088', :offset => '043', :subindex => '0', :ord => '2', :iform => '1.1.a / 88.1', :word_form => 'bar / stop', :abbrev_form => 'B / S', :alpha => "BOS");
Formula.create( :base => '088', :offset => '058', :subindex => '0', :ord => '1', :iform => '99.1 / 88.1', :word_form => 'Bent-over-die-young / stop', :abbrev_form => 'BODY / S', :alpha => "BODY-OS");
Formula.create( :base => '088', :offset => '058', :subindex => '0', :ord => '2', :iform => '(99.1.a->99.1,b) / 88.1', :word_form => '( Bent-over->die-young ) / stop', :abbrev_form => '( BO->DY ) / S', :alpha => "BODY-OS");
Formula.create( :base => '088', :offset => '060', :subindex => '0', :ord => '2', :iform => '( 88.0.c ->68.1.a ) / 88.1', :word_form => '( leg->object ) / foot', :abbrev_form => '( L->O ) / F', :alpha => "LYO-OF");
Formula.create( :base => '088', :offset => '060', :subindex => '0', :ord => '3', :iform => '( 88.0.c ->68.1 ) / 88.1', :word_form => '( lower-leg->mouth ) / foot', :abbrev_form => '( LL->M ) / F', :alpha => "LLYMOF");
Formula.create( :base => '088', :offset => '060', :subindex => '0', :ord => '1', :iform => '68.1.a / 88.1', :word_form => 'Object / stop', :abbrev_form => 'O / S', :alpha => "O-OS");
Formula.create( :base => '088', :offset => '063', :subindex => '0', :ord => '4', :iform => '1.1.i / 88.1', :word_form => 'Dash-hook / stop', :abbrev_form => 'DH / S', :alpha => "D-HOS");
Formula.create( :base => '088', :offset => '063', :subindex => '0', :ord => '3', :iform => '88.0.a:->88.0.b', :word_form => 'knee:->roll', :abbrev_form => 'K:->R', :alpha => "KYR");
Formula.create( :base => '088', :offset => '063', :subindex => '0', :ord => '1', :iform => '88.63', :word_form => '{"lower leg and foot"}', :abbrev_form => 'LL', :alpha => "LL");
Formula.create( :base => '088', :offset => '063', :subindex => '0', :ord => '2', :iform => '88.63.0:->88.0.b', :word_form => 'Lower-leg:->roll', :abbrev_form => 'LL:->R', :alpha => "LLYR");
Formula.create( :base => '088', :offset => '069', :subindex => '0', :ord => '1', :iform => 'Like( 47.1 ) [*] 88.1', :word_form => 'like( all-around ) [*] stop', :abbrev_form => 'L( AA ) [*] S', :alpha => "LA-A-ES");
Formula.create( :base => '089', :offset => '000', :subindex => '0', :ord => '1', :iform => '89.0', :word_form => 'abstract( "hand" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '089', :offset => '001', :subindex => '0', :ord => '1', :iform => '89.1', :word_form => '{"hand"}', :abbrev_form => 'H', :alpha => "H");
Formula.create( :base => '089', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'At-side( 89.1)', :word_form => 'At-side( hand)', :abbrev_form => 'AS(H)', :alpha => "ASOH");
Formula.create( :base => '089', :offset => '001', :subindex => 'b', :ord => '2', :iform => '89.1->39.1', :word_form => 'hand->big', :abbrev_form => 'H->B', :alpha => "HYB");
Formula.create( :base => '089', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Alt( 89.1 )', :word_form => 'alt( hand )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '089', :offset => '001', :subindex => 'd', :ord => '2', :iform => '89.1:bent', :word_form => 'Hand:bent', :abbrev_form => 'H:B', :alpha => "HIB");
Formula.create( :base => '089', :offset => '001', :subindex => 'd', :ord => '1', :iform => 'bent( 89.1 )', :word_form => 'bent( hand )', :abbrev_form => 'B( H )', :alpha => "BH");
Formula.create( :base => '089', :offset => '002', :subindex => '0', :ord => '2', :iform => '89.1 * ( 89.1 / 1.68 )', :word_form => 'Hand * ( hand / down )', :abbrev_form => 'H * ( H / D )', :alpha => "HAHOD");
Formula.create( :base => '089', :offset => '002', :subindex => '0', :ord => '1', :iform => '89.1^2 / 1.68', :word_form => 'Hand^2 / down', :abbrev_form => 'H^2 / D', :alpha => "HUTOD");
Formula.create( :base => '089', :offset => '002', :subindex => '0', :ord => '4', :iform => 'Alt( 89.1 ) * ( 89.1 /+ alt( 1.68 ))', :word_form => 'Alt( Hand ) * ( hand /+ alt( down ))', :abbrev_form => 'A( H ) * ( H /+ A( D ))', :alpha => "AHAHOIAD");
Formula.create( :base => '089', :offset => '002', :subindex => '0', :ord => '3', :iform => 'Alt( 89.1)^2 /+ alt( 1.68 )', :word_form => 'Alt( Hand )^2 /+ alt( down )', :abbrev_form => 'A(H)^2 /+ A(D)', :alpha => "AHUTOIAD");
Formula.create( :base => '089', :offset => '004', :subindex => '0', :ord => '1', :iform => '89.1 / 9.1', :word_form => 'hand / Sprout-effort', :abbrev_form => 'H / SE', :alpha => "HOSE");
Formula.create( :base => '089', :offset => '004', :subindex => '0', :ord => '2', :iform => '89.1 /+ 9.1', :word_form => 'Hand /+ Sprout-effort', :abbrev_form => 'H /+ SE', :alpha => "HO-I'SE");
Formula.create( :base => '089', :offset => '004', :subindex => '0', :ord => '3', :iform => '89.1.b / 9.1.c', :word_form => 'alt-hand / Alt-Sprout-effort', :abbrev_form => 'A( H ) / A( SE )', :alpha => "AHO'AS");
Formula.create( :base => '089', :offset => '004', :subindex => '0', :ord => '4', :iform => '89.1.b /+ 9.1.c', :word_form => 'alt-hand /+ Alt-Sprout-effort', :abbrev_form => 'A( H ) /+ A( SE )', :alpha => "AHO'IAS");
Formula.create( :base => '089', :offset => '009', :subindex => '0', :ord => '1', :iform => '89.9', :word_form => '{"hand holding an object"}', :abbrev_form => 'H', :alpha => "H");
Formula.create( :base => '089', :offset => '009', :subindex => 'a', :ord => '1', :iform => '89.9->Like( 47.1)', :word_form => 'Hold-a-stick->like( all-around)', :abbrev_form => 'HAS->like( AA )', :alpha => "HASTOLA-A");
Formula.create( :base => '089', :offset => '009', :subindex => 'a', :ord => '2', :iform => '89.9->Like( 47.1)', :word_form => 'Hold-a-stick->like( all-around)', :abbrev_form => 'HAS->like( AA )', :alpha => "HASYLA-A");
Formula.create( :base => '090', :offset => '000', :subindex => '0', :ord => '1', :iform => '90.0', :word_form => 'Abstract( "fur" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '090', :offset => '000', :subindex => 'a', :ord => '1', :iform => '90.0.a', :word_form => 'Abstract( "hair" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '090', :offset => '001', :subindex => '0', :ord => '1', :iform => '90.1', :word_form => '{"fur"}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '090', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 90.1 )', :word_form => 'alt( fur )', :abbrev_form => 'A( F )', :alpha => "FA");
Formula.create( :base => '090', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Alt( 90.1 )', :word_form => 'alt( fur )', :abbrev_form => 'A( F )', :alpha => "FA");
Formula.create( :base => '090', :offset => '001', :subindex => 'c', :ord => '4', :iform => '( 85.1 :+ 40.1 ) / 2', :word_form => '( Python :+ recliner ) / 2', :abbrev_form => 'P :+ R ) / 2', :alpha => "PIROT");
Formula.create( :base => '090', :offset => '001', :subindex => 'c', :ord => '5', :iform => ' 85.1 # 40.1', :word_form => 'Python # recliner', :abbrev_form => 'P # R', :alpha => "POLAR");
Formula.create( :base => '090', :offset => '001', :subindex => 'c', :ord => '1', :iform => '90.1.c', :word_form => '{"hair"}', :abbrev_form => 'EB', :alpha => "EB");
Formula.create( :base => '090', :offset => '001', :subindex => 'c', :ord => '2', :iform => 'Top( 85.1 ) / base( 40.1 )', :word_form => 'Top( python ) / base( recliner )', :abbrev_form => 'T( P ) / B( R )', :alpha => "TOPOBOR");
Formula.create( :base => '090', :offset => '002', :subindex => '0', :ord => '2', :iform => '(( 22.13 / 11.35 |*|/ 13.1 ) * 49.1 ) / 90.1', :word_form => '( ((flee | die) / table |*|/ flip ) * fine-lines  ) / fur', :abbrev_form => '(( FOD / T |*|/ F ) * L:F  ) / F', :alpha => "FODOTEOF-ALIFOF");
Formula.create( :base => '090', :offset => '002', :subindex => '0', :ord => '1', :iform => '22.59 / 90.1', :word_form => 'Long-hair / fur', :abbrev_form => 'LH / F', :alpha => "LHOF");
Formula.create( :base => '090', :offset => '003', :subindex => '0', :ord => '2', :iform => '23.1.a / 23.1 / 90.1', :word_form => 'Pavilion / space / fur', :abbrev_form => 'P / S / F', :alpha => "POSOF");
Formula.create( :base => '090', :offset => '003', :subindex => '0', :ord => '1', :iform => 'Top( 23.3 ) / 90.1', :word_form => 'top( tall ) / fur', :abbrev_form => 'T( T ) / F', :alpha => "TOTOF");
Formula.create( :base => '090', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 70.76 /+ 77.1 ) * 90.1', :word_form => '( Sprout-earth-tap-root /+ (tree->wood) ) * fur', :abbrev_form => '( SETR /+ ( T->W )) * F', :alpha => "SETROITYWAF");
Formula.create( :base => '090', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 70.76 /+ 77.1 ) * 90.1', :word_form => '( Notches-in-bamboo /+ (tree->wood)) * fur', :abbrev_form => '( NIB /+ ( T->W )) * F', :alpha => "NIBOITYWAF");
Formula.create( :base => '090', :offset => '004', :subindex => '0', :ord => '1', :iform => '77.49 * 90.1', :word_form => 'Plow * fur', :abbrev_form => 'P * F', :alpha => "PAF");
Formula.create( :base => '090', :offset => '005', :subindex => '0', :ord => '1', :iform => '40.1 / 90.1', :word_form => 'Recliner / fur', :abbrev_form => 'R / F', :alpha => "ROF");
Formula.create( :base => '090', :offset => '014', :subindex => '0', :ord => '1', :iform => '14.1.f /+ 90.1', :word_form => 'Alt-right-hand /+ fur-alt', :abbrev_form => 'ARH /+ FA', :alpha => "ARHOIFA");
Formula.create( :base => '090', :offset => '017', :subindex => '0', :ord => '1', :iform => '90.1:^2', :word_form => 'Fur :^2', :abbrev_form => 'F:^2', :alpha => "FUT");
Formula.create( :base => '091', :offset => '000', :subindex => '0', :ord => '1', :iform => '91.0', :word_form => 'abstract( "animal" )', :abbrev_form => 'A( A )', :alpha => "");
Formula.create( :base => '091', :offset => '000', :subindex => 'a', :ord => '1', :iform => '91.0.a', :word_form => 'abstract( "dog" )', :abbrev_form => 'A( D )', :alpha => "");
Formula.create( :base => '091', :offset => '000', :subindex => 'b', :ord => '1', :iform => '91.0.b', :word_form => 'abstract( "cat" )', :abbrev_form => 'A( C )', :alpha => "");
Formula.create( :base => '091', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 91.0.a }', :word_form => '{ dog }', :abbrev_form => '{ D }', :alpha => "D");
Formula.create( :base => '091', :offset => '001', :subindex => '0', :ord => '1', :iform => '91.1', :word_form => '{"dog"}', :abbrev_form => 'D', :alpha => "D");
Formula.create( :base => '091', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'dis(91.1)', :word_form => 'dis(dog)', :abbrev_form => 'DD', :alpha => "DD");
Formula.create( :base => '091', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Alt( 91.1 )', :word_form => 'alt( dog )', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '091', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1 * 91.1', :word_form => 'Mouth * dog', :abbrev_form => 'M * D', :alpha => "MAD");
Formula.create( :base => '091', :offset => '003', :subindex => '0', :ord => '1', :iform => '139.1 / 91.1', :word_form => 'Nose / dog', :abbrev_form => 'N / D', :alpha => "NOD");
Formula.create( :base => '091', :offset => '005', :subindex => '0', :ord => '1', :iform => '132.1.c * 91.1', :word_form => 'Meat * dog', :abbrev_form => 'M * D', :alpha => "MAD");
Formula.create( :base => '091', :offset => '005', :subindex => '0', :ord => '2', :iform => 'Rot( 132.1.a ) * 91.1', :word_form => 'rot( meat->moon ) * dog', :abbrev_form => 'R( M->M ) * D', :alpha => "ROMYMAD");
Formula.create( :base => '091', :offset => '012', :subindex => '0', :ord => '1', :iform => '91.1.b *+ 7.1', :word_form => 'Alt-dog *+ drag', :abbrev_form => 'AD *+ D', :alpha => "ADAID");
Formula.create( :base => '091', :offset => '016', :subindex => '0', :ord => '1', :iform => '91.1 / (91.1^2)', :word_form => 'Dog / dog^2', :abbrev_form => 'D / D^2', :alpha => "DODUT");
Formula.create( :base => '091', :offset => '016', :subindex => '0', :ord => '2', :iform => '91.1^3', :word_form => 'dog^3', :abbrev_form => 'D^3', :alpha => "DUT");
Formula.create( :base => '091', :offset => '016', :subindex => '0', :ord => '3', :iform => 'trip(91.1)', :word_form => 'trip( dog)', :abbrev_form => 'trip( D )', :alpha => "TOD");
Formula.create( :base => '091', :offset => '018', :subindex => '0', :ord => '1', :iform => '10.1.a * 91.1', :word_form => 'Side-person * dog', :abbrev_form => 'SP * D', :alpha => "SPAD");
Formula.create( :base => '091', :offset => '018', :subindex => '0', :ord => '2', :iform => '10.1.a * 91.1', :word_form => 'person-at-side * dog', :abbrev_form => 'PAS * D', :alpha => "PASAD");
Formula.create( :base => '091', :offset => '020', :subindex => ' ', :ord => '1', :iform => '91.20.a * 91.1', :word_form => 'Animal * dog', :abbrev_form => 'A * D', :alpha => "A-AD");
Formula.create( :base => '091', :offset => '020', :subindex => 'a', :ord => '2', :iform => '68.5 / 111.1  / 1.1.a / 68.1.a', :word_form => 'Cry / field / bar / object', :abbrev_form => 'C / F / B / O', :alpha => "COFOBO-O");
Formula.create( :base => '091', :offset => '020', :subindex => 'a', :ord => '1', :iform => '68.5.a / 140.1.d / 73.1', :word_form => 'Animal-ears / animal-head / tail-end', :abbrev_form => 'AE / AH / TE', :alpha => "A-EO-AHOTE");
Formula.create( :base => '091', :offset => '021', :subindex => '0', :ord => '5', :iform => '( 91.1.a * 91.1 ) |*| 68.78', :word_form => '( Dog-at-side * dog ) |*| speak-a-word', :abbrev_form => '( DAS * D ) |*| SAW', :alpha => "DASADESAW");
Formula.create( :base => '091', :offset => '021', :subindex => '0', :ord => '3', :iform => '91.1^2 |*| 68.78', :word_form => 'Dog^2 |*| speak-a-word', :abbrev_form => 'D^2 |*| SAW', :alpha => "DUTESAW");
Formula.create( :base => '091', :offset => '021', :subindex => '0', :ord => '7', :iform => '91.1.a * 68.78 * 91.1', :word_form => 'Dog-at-side * speak-a-word * dog', :abbrev_form => ' DAS * SAW * D', :alpha => "DASASAWAD");
Formula.create( :base => '091', :offset => '021', :subindex => '0', :ord => '1', :iform => '91.21.a |*| 68.78', :word_form => 'Fighting-dogs |*| speak-a-word', :abbrev_form => 'FD |*| SAW', :alpha => "F-DESAW");
Formula.create( :base => '091', :offset => '021', :subindex => 'a', :ord => '1', :iform => '91.1^2', :word_form => 'Dog^2', :abbrev_form => 'D^2', :alpha => "DUT");
Formula.create( :base => '091', :offset => '021', :subindex => 'a', :ord => '2', :iform => '91.1.a * 91.1', :word_form => 'Dog-at-side * dog', :abbrev_form => 'DAS * D', :alpha => "DASAD");
Formula.create( :base => '091', :offset => '023', :subindex => '0', :ord => '1', :iform => '91.1.a * 39.78', :word_form => 'Dog-at-side * red', :abbrev_form => 'DAS * R', :alpha => "DASAR");
Formula.create( :base => '091', :offset => '023', :subindex => '0', :ord => '2', :iform => '91.1.a * ( 39.1 / 82.1 )', :word_form => 'Dog-at-side * ( Big / fire )', :abbrev_form => 'DAS * ( B / F )', :alpha => "DASABOF");
Formula.create( :base => '091', :offset => '023', :subindex => '0', :ord => '3', :iform => '91.1.a * 82.1', :word_form => 'Dog-at-side * fire', :abbrev_form => 'DAS * F', :alpha => "DASAF");
Formula.create( :base => '091', :offset => '023', :subindex => '0', :ord => '4', :iform => '91.1.a * ( 39.78->82.1 )', :word_form => 'Dog-at-side * ( red->fire )', :abbrev_form => 'DAS * ( R->F )', :alpha => "DASARYF");
Formula.create( :base => '092', :offset => '001', :subindex => '0', :ord => '1', :iform => '92.1', :word_form => '{"ox"}', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '092', :offset => '002', :subindex => '0', :ord => '1', :iform => '29.1 /|*| 92.1', :word_form => 'Divide /|*| ox', :abbrev_form => 'D /|*| O', :alpha => "DO-EO");
Formula.create( :base => '092', :offset => '009', :subindex => '0', :ord => '1', :iform => '10.1.a * 92.1', :word_form => 'Side-person * ox', :abbrev_form => 'SP * O', :alpha => "SPAO");
Formula.create( :base => '092', :offset => '009', :subindex => '0', :ord => '2', :iform => '10.1.a * 92.1', :word_form => 'Person-at-side * ox', :abbrev_form => 'PAS * O', :alpha => "PASAO");
Formula.create( :base => '092', :offset => '010', :subindex => '0', :ord => '1', :iform => '63.1 / 92.1', :word_form => 'Roof / ox', :abbrev_form => 'R / O', :alpha => "RO-O");
Formula.create( :base => '092', :offset => '011', :subindex => '0', :ord => '5', :iform => '( 58.3->19.1 ) / 92.1', :word_form => '( Half-open-snake->cocoon ) / ox', :abbrev_form => '( HOS->C ) / O', :alpha => "HOSYCO-O");
Formula.create( :base => '092', :offset => '011', :subindex => '0', :ord => '3', :iform => '19.1 / 92.1', :word_form => 'cocoon / ox', :abbrev_form => 'C / O', :alpha => "CO-O");
Formula.create( :base => '092', :offset => '011', :subindex => '0', :ord => '7', :iform => '19.1.c / 92.1', :word_form => 'Alt-Half-open-snake / ox', :abbrev_form => 'AHOS / O', :alpha => "AHOSO-O");
Formula.create( :base => '092', :offset => '011', :subindex => '0', :ord => '1', :iform => '58.3 / 92.1', :word_form => 'Half-open-snake / ox', :abbrev_form => 'HOS / O', :alpha => "HOSO-O");
Formula.create( :base => '092', :offset => '013', :subindex => '0', :ord => '1', :iform => '92.1 * 70.1', :word_form => 'Ox * earth', :abbrev_form => 'O * E', :alpha => "OA-E");
Formula.create( :base => '092', :offset => '014', :subindex => '0', :ord => '1', :iform => '92.1 * 22.6', :word_form => 'Ox * tap', :abbrev_form => 'O * T', :alpha => "O-AT");
Formula.create( :base => '092', :offset => '015', :subindex => '0', :ord => '1', :iform => '92.1 / 68.1', :word_form => 'Ox / mouth', :abbrev_form => 'O / M', :alpha => "O-AM");
Formula.create( :base => '092', :offset => '015', :subindex => '0', :ord => '2', :iform => 'Top( 92.1 ) / 68.1', :word_form => 'Top( Ox ) / mouth', :abbrev_form => 'T( O ) / M', :alpha => "TO-O-OM");
Formula.create( :base => '093', :offset => '001', :subindex => '0', :ord => '1', :iform => '93.1.a', :word_form => 'pestle', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '093', :offset => '001', :subindex => '0', :ord => '3', :iform => '93.1.a->93.1', :word_form => 'Pestle->noon', :abbrev_form => 'P->N', :alpha => "PYN");
Formula.create( :base => '093', :offset => '001', :subindex => 'a', :ord => '1', :iform => '93.1', :word_form => '{"pestle"}', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '093', :offset => '002', :subindex => '0', :ord => '1', :iform => '77.1 * 93.1', :word_form => '(tree>wood) * pestle', :abbrev_form => '( T->W ) * P', :alpha => "TYWAP");
Formula.create( :base => '093', :offset => '002', :subindex => '0', :ord => '2', :iform => '77.1 * ( 93.1.a->93.1 )', :word_form => '(tree>wood) * ( Pestle->noon )', :abbrev_form => '( T->W ) * ( P->N )', :alpha => "TYWAPYN");
Formula.create( :base => '093', :offset => '003', :subindex => '0', :ord => '1', :iform => '68.78 * 93.1', :word_form => 'Speak-a-word * pestle', :abbrev_form => 'SAW * P', :alpha => "SAWAP");
Formula.create( :base => '093', :offset => '003', :subindex => '0', :ord => '3', :iform => '68.78 * 93.1', :word_form => 'Speak-a-word *  ( Pestle->noon )', :abbrev_form => 'SAW * ( P->N )', :alpha => "SAWAPYN");
Formula.create( :base => '093', :offset => '005', :subindex => '0', :ord => '1', :iform => '( 93.1 /+ 88.1 ) * 33.1', :word_form => '( Pestle /+ stop ) * kneeler', :abbrev_form => '( P /+ S ) * K', :alpha => "POISAK");
Formula.create( :base => '093', :offset => '005', :subindex => '0', :ord => '2', :iform => '( 93.1 /+ 88.1 ) * (10.1::->33.1 )', :word_form => '( Pestle /+ stop ) * ( person::->kneel )', :abbrev_form => '( P /+ S ) * ( P::->K )', :alpha => "POISAPAK");
Formula.create( :base => '093', :offset => '005', :subindex => '0', :ord => '3', :iform => '(( 93.1.a->93.1 ) /+ 88.1 ) * ( 10.1::->33.1 )', :word_form => '(( Pestle->noon ) /+ stop ) * ( person::->kneel )', :abbrev_form => '(( P->N ) /+ S ) * ( P::->K )', :alpha => "PYNOISAPAK");
Formula.create( :base => '094', :offset => '001', :subindex => '0', :ord => '2', :iform => '94.1', :word_form => 'Abstract(person)::tie:>abstract( boat )^2', :abbrev_form => 'A(P)::T:>A(B)^2', :alpha => "APATOBUT");
Formula.create( :base => '094', :offset => '001', :subindex => '0', :ord => '3', :iform => '94.1', :word_form => '{"plow"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '094', :offset => '001', :subindex => '0', :ord => '1', :iform => '94.1', :word_form => '{"two boats tied together"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '094', :offset => '001', :subindex => 'a', :ord => '1', :iform => '24.0->94.1', :word_form => 'cover->square', :abbrev_form => 'C->S', :alpha => "CYS");
Formula.create( :base => '094', :offset => '001', :subindex => 'b', :ord => '1', :iform => '24.0.a->94.1', :word_form => 'lid->square', :abbrev_form => 'L->S', :alpha => "LYS");
Formula.create( :base => '094', :offset => '002', :subindex => '0', :ord => '1', :iform => '66.2 / 94.1', :word_form => 'Grass / square', :abbrev_form => 'G / S', :alpha => "GOS");
Formula.create( :base => '094', :offset => '003', :subindex => '0', :ord => '1', :iform => '70.1 * 94.1', :word_form => 'Earth * square', :abbrev_form => 'E * S', :alpha => "E-AS");
Formula.create( :base => '094', :offset => '004', :subindex => '0', :ord => '1', :iform => '54.1 * 94.1', :word_form => 'Woman * square', :abbrev_form => 'W * S', :alpha => "WAS");
Formula.create( :base => '094', :offset => '005', :subindex => '0', :ord => '1', :iform => '167.1.a * 94.1', :word_form => 'Hill-yield-beta * square', :abbrev_form => 'HYB * S', :alpha => "HYBAS");
Formula.create( :base => '094', :offset => '006', :subindex => '0', :ord => '1', :iform => '132.1.a', :word_form => '(meat->moon) * square', :abbrev_form => '(M->M) * S', :alpha => "MYMAS");
Formula.create( :base => '094', :offset => '007', :subindex => '0', :ord => '1', :iform => '78.1 */ 94.1', :word_form => 'Leaf-of-door */ square', :abbrev_form => 'LOD */ S', :alpha => "LODAOS");
Formula.create( :base => '094', :offset => '008', :subindex => '0', :ord => '1', :iform => '68.78 * 94.1', :word_form => 'Speak-a-word * square', :abbrev_form => 'SAW * S', :alpha => "SAWAS");
Formula.create( :base => '094', :offset => '009', :subindex => '0', :ord => '1', :iform => '10.1.a * 94.1', :word_form => 'Side-person * square', :abbrev_form => 'SP * S', :alpha => "SPAS");
Formula.create( :base => '094', :offset => '009', :subindex => '0', :ord => '2', :iform => '10.1.a * 94.1', :word_form => 'person-at-side * square', :abbrev_form => 'PAS * S', :alpha => "PASAS");
Formula.create( :base => '094', :offset => '010', :subindex => '0', :ord => '1', :iform => '41.1 * 94.1', :word_form => 'Person-and-step * square', :abbrev_form => 'PAS * S', :alpha => "PASAS");
Formula.create( :base => '094', :offset => '011', :subindex => '0', :ord => '1', :iform => '153.1 * 94.1', :word_form => 'Silk-thread * square', :abbrev_form => 'ST * S', :alpha => "STAS");
Formula.create( :base => '094', :offset => '011', :subindex => '0', :ord => '2', :iform => '153.1 * 94.1', :word_form => 'Thread-of-Silk * square', :abbrev_form => 'TOS * S', :alpha => "TOSAS");
Formula.create( :base => '094', :offset => '011', :subindex => '0', :ord => '3', :iform => '153.1 * 94.1', :word_form => 'Thread:Silk * square', :abbrev_form => 'TIS * S', :alpha => "TISAS");
Formula.create( :base => '094', :offset => '011', :subindex => '0', :ord => '4', :iform => '153.1 * 94.1', :word_form => '( Thread->Silk ) * square', :abbrev_form => '( T->S ) * S', :alpha => "TYSAS");
Formula.create( :base => '094', :offset => '011', :subindex => '0', :ord => '5', :iform => '153.1 * 94.1', :word_form => '( Silk->Thread ) * square', :abbrev_form => '( S->T ) * S', :alpha => "SYTAS");
Formula.create( :base => '094', :offset => '011', :subindex => '0', :ord => '6', :iform => '153.1 * 94.1', :word_form => 'Thread * square', :abbrev_form => 'T * S', :alpha => "TAS");
Formula.create( :base => '094', :offset => '012', :subindex => '0', :ord => '1', :iform => '94.1 * 26.2', :word_form => 'Square * tap', :abbrev_form => 'S * T', :alpha => "SAT");
Formula.create( :base => '094', :offset => '023', :subindex => '0', :ord => '1', :iform => '1.43 / 23.1.d /[*] 94.1', :word_form => 'Up / sides /[*] square', :abbrev_form => 'U / S /[*] S', :alpha => "U-OSO-ES");
Formula.create( :base => '094', :offset => '023', :subindex => '0', :ord => '2', :iform => '1.43 / 29.1 / 23.1 /[*] 94.1', :word_form => 'Up / divide / space /[*] square', :abbrev_form => 'U / D / S /[*] S', :alpha => "U-ODOSO-ES");
Formula.create( :base => '094', :offset => '023', :subindex => '0', :ord => '4', :iform => '94.23.a /[*] 94.1', :word_form => 'Stand-border /[*] square', :abbrev_form => 'SB /[*] S', :alpha => "S-BO-ES");
Formula.create( :base => '094', :offset => '023', :subindex => 'a', :ord => '1', :iform => '39.21 /+ 23.1', :word_form => 'Stand /+ space', :abbrev_form => 'S /+ S', :alpha => "SOIS");
Formula.create( :base => '094', :offset => '032', :subindex => '0', :ord => '1', :iform => '83.1.a * ( alt( 29.56 ) / 94.1 )', :word_form => 'Heart-at-side * ( alt( four ) / square )', :abbrev_form => 'HAS * ( A( F ) / S )', :alpha => "HASA-AFOS");
Formula.create( :base => '094', :offset => '033', :subindex => '0', :ord => '1', :iform => '129.1 * 94.1', :word_form => 'Boat * square', :abbrev_form => 'B * S', :alpha => "BAS");
Formula.create( :base => '095', :offset => '001', :subindex => '0', :ord => '1', :iform => '95.1', :word_form => '{"pierced object"}', :abbrev_form => 'PO', :alpha => "PO");
Formula.create( :base => '095', :offset => '002', :subindex => '0', :ord => '1', :iform => '95.1 / 150.1', :word_form => 'Pierced-object / shellfish', :abbrev_form => 'PO / SF', :alpha => "PO-OSF");
Formula.create( :base => '095', :offset => '003', :subindex => '0', :ord => '1', :iform => '83.1 * 95.2', :word_form => 'Side-heart * string-of-coins', :abbrev_form => 'SH * SOC', :alpha => "SHASOC");
Formula.create( :base => '095', :offset => '004', :subindex => '0', :ord => '1', :iform => '63.1 / 95.2', :word_form => 'Roof / string-of-coins', :abbrev_form => 'R / SOC', :alpha => "ROSOC");
Formula.create( :base => '096', :offset => '001', :subindex => '0', :ord => '1', :iform => '96.1', :word_form => '{"ax"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '096', :offset => '002', :subindex => '0', :ord => '1', :iform => '41.3.a *\ 96.1', :word_form => 'Stop-and-go *\ ax', :abbrev_form => 'SAG *\ A', :alpha => "SAGA-UA");
Formula.create( :base => '096', :offset => '003', :subindex => '0', :ord => '1', :iform => '52.1 */\ 96.1', :word_form => 'Hollow-wood */\ ax', :abbrev_form => 'HW */\ A', :alpha => "HWAO'U");
Formula.create( :base => '096', :offset => '004', :subindex => '0', :ord => '1', :iform => '96.1 * 10.31', :word_form => 'Ax * yawn', :abbrev_form => 'A * Y', :alpha => "A-AY");
Formula.create( :base => '096', :offset => '006', :subindex => '0', :ord => '1', :iform => '66.2 / 96.1', :word_form => 'Grass / ax', :abbrev_form => 'G / A', :alpha => "GOA");
Formula.create( :base => '096', :offset => '007', :subindex => '0', :ord => '1', :iform => '77.1 * 96.1', :word_form => '( tree:->wood ) * ax', :abbrev_form => '( T->W ) * A', :alpha => "TYWA-A");
Formula.create( :base => '096', :offset => '011', :subindex => '0', :ord => '1', :iform => '1.46 * 96.1', :word_form => 'Revelation * ax', :abbrev_form => 'R * A', :alpha => "RA-A");
Formula.create( :base => '096', :offset => '012', :subindex => '0', :ord => '1', :iform => '96.1 / 15.39', :word_form => 'Ax / folded-hands', :abbrev_form => 'A / FH', :alpha => "AOF'H");
Formula.create( :base => '096', :offset => '012', :subindex => '0', :ord => '4', :iform => '96.1 / 15.39.b', :word_form => 'Ax / folded-hands-alt', :abbrev_form => 'A / FHA', :alpha => "AOF'HA");
Formula.create( :base => '096', :offset => '012', :subindex => '0', :ord => '7', :iform => '96.1 / 15.39', :word_form => 'Ax / bar / divide', :abbrev_form => 'A / B / D', :alpha => "AOBOD");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '7', :iform => '( Opposed( 12.1 )->96.1 ) / 1.1.b', :word_form => '( opposed( turned-around-person )->ax) / ground', :abbrev_form => '( O( TAP )->A ) / G', :alpha => "O-OTAPY-AOG");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '8', :iform => '( Opposed( 12.1 )->96.1 ) / 1.1.b', :word_form => '( opposed( spin )->ax) / ground', :abbrev_form => '( O( S )->A ) / G', :alpha => "O-OSY-AOG");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '9', :iform => '( Opposed(  reverse( 10.1 )):~:(96.1) ) / 1.1.b', :word_form => '( opposed( reverse( person ):~:(ax)) / surface', :abbrev_form => '( O( R( P )):~:( A )) / S', :alpha => "O-OROPILA-AOS");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '10', :iform => '( Opposed(  reverse( 10.1 )):~:()96.1 ) / 1.1.b', :word_form => '( opposed( reverse( person ):~:()ax) / surface', :abbrev_form => '( O( R( P )):~:() A ) / S', :alpha => "O-OROPILA-AOS");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '6', :iform => '12.38 / 1.1.b', :word_form => 'Book-ends / surface', :abbrev_form => 'BE / S', :alpha => "BEOS");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '4', :iform => '96.1 / 1.1.b', :word_form => 'Ax / ground', :abbrev_form => 'A / G', :alpha => "AOG");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '5', :iform => '96.1 / 1.1.b', :word_form => 'Ax / surface', :abbrev_form => 'A / S', :alpha => "AOS");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '1', :iform => 'Opposed( 12.1 ) / 1.1.b', :word_form => 'opposed( turned-around-person ) / ground', :abbrev_form => 'O( TAP ) / G', :alpha => "O-OTAPOG");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '3', :iform => 'Opposed( 12.1 ) / 1.1.b', :word_form => 'opposed( spin ) / ground', :abbrev_form => 'O( S ) / G', :alpha => "O-OSOG");
Formula.create( :base => '096', :offset => '015', :subindex => '0', :ord => '2', :iform => 'Opposed( reverse( 10.1 )) / 1.1.b', :word_form => 'opposed( reverse( person )) / surface', :abbrev_form => 'O( R( P )) / S', :alpha => "O-OROPOS");
Formula.create( :base => '096', :offset => '019', :subindex => '0', :ord => '1', :iform => '158.1 * 96.1', :word_form => 'Vehicle * ax', :abbrev_form => 'V * A', :alpha => "VA-A");
Formula.create( :base => '096', :offset => '024', :subindex => '0', :ord => '1', :iform => '89.1.a', :word_form => 'Side-hand * ax', :abbrev_form => 'SH * A', :alpha => "SHA-A");
Formula.create( :base => '096', :offset => '030', :subindex => '0', :ord => '1', :iform => '96.1^2 / 150.1', :word_form => 'Ax^2 / shellfish', :abbrev_form => 'A^2 / SF', :alpha => "AUTOS-F");
Formula.create( :base => '096', :offset => '031', :subindex => '0', :ord => '7', :iform => '( 60.1->21.1 ) */ ( 50.31->like( 50.1 ))', :word_form => '( Shelter->Cliff ) */ (repeat-attack->like(pestle | shield ))', :abbrev_form => '( S->C ) */ ( RA->like( P | S ))', :alpha => "SYCAORAYLOPOS");
Formula.create( :base => '096', :offset => '031', :subindex => '0', :ord => '3', :iform => '21.1 */ 50.1', :word_form => 'Cliff */ (pestle | shield )', :abbrev_form => 'C */ ( P | S )', :alpha => "CAOPOS");
Formula.create( :base => '096', :offset => '031', :subindex => '0', :ord => '5', :iform => '21.1 */ like( 50.1 )', :word_form => 'Cliff */ like(pestle | shield )', :abbrev_form => 'C */ like( P | S )', :alpha => "CAOLOPOS");
Formula.create( :base => '096', :offset => '031', :subindex => '0', :ord => '1', :iform => '60.1 */ 50.31', :word_form => 'Shelter */ repeat-attack', :abbrev_form => 'S */ RA', :alpha => "SAORA");
Formula.create( :base => '097', :offset => '001', :subindex => '0', :ord => '2', :iform => '( Stack( 1.1.a ) + ( 3.1 * 4.1 )) [] 1.1.c', :word_form => '(stack( dash ) + ( fall-left * post )) [] dot', :abbrev_form => '( S( D ) + (  FL * P  )) [] D', :alpha => "SODIFLAPED");
Formula.create( :base => '097', :offset => '001', :subindex => '0', :ord => '3', :iform => '97.1', :word_form => '{"crucible"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '097', :offset => '001', :subindex => '0', :ord => '1', :iform => '97.1', :word_form => '{"eight fields surrounding well"}', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '097', :offset => '002', :subindex => '0', :ord => '1', :iform => '167.1.a * 97.1', :word_form => 'Hill-to-beta * well', :abbrev_form => 'HYB * W', :alpha => "HYBAW");
Formula.create( :base => '097', :offset => '003', :subindex => '0', :ord => '2', :iform => '( 70.76 #/ 77.1 ) * 97.1', :word_form => '( notches-in-bamboo #/ (tree->wood) ) * well', :abbrev_form => '( NIB #/ (T->W)) * W', :alpha => "NIBOLOTYWAW");
Formula.create( :base => '097', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.49 * 97.1', :word_form => 'Plow * well', :abbrev_form => 'P * W', :alpha => "PAW");
Formula.create( :base => '097', :offset => '004', :subindex => '0', :ord => '4', :iform => '1.1.c ]*[ 97.1', :word_form => 'Mineral ]*[ well', :abbrev_form => 'M ]*[ W', :alpha => "MIW");
Formula.create( :base => '097', :offset => '004', :subindex => '0', :ord => '5', :iform => '1.1.c ]*[ 97.1', :word_form => 'Mineral ]*[ Crucible', :abbrev_form => 'M ]*[ C', :alpha => "MIC");
Formula.create( :base => '097', :offset => '004', :subindex => '0', :ord => '6', :iform => '1.1.c ]*[ 97.1', :word_form => 'Mineral ]*[ furnace', :abbrev_form => 'M ]*[ F', :alpha => "MIF");
Formula.create( :base => '097', :offset => '004', :subindex => '0', :ord => '1', :iform => '97.1 [*] 1.1.c', :word_form => 'well [*] mineral', :abbrev_form => 'W [*] M', :alpha => "WEM");
Formula.create( :base => '097', :offset => '004', :subindex => '0', :ord => '2', :iform => '97.1 [*] 1.1.c', :word_form => 'Crucible [*] mineral', :abbrev_form => 'C [*] M', :alpha => "CEM");
Formula.create( :base => '097', :offset => '004', :subindex => '0', :ord => '3', :iform => '97.1 [*] 1.1.c', :word_form => 'furnace [*] mineral', :abbrev_form => 'F [*] M', :alpha => "FEM");
Formula.create( :base => '097', :offset => '005', :subindex => '0', :ord => '1', :iform => '70.1 * 97.4', :word_form => 'Earth * red', :abbrev_form => 'E * R', :alpha => "E-AR");
Formula.create( :base => '097', :offset => '005', :subindex => '0', :ord => '2', :iform => '70.1 * ( 97.1 [*] 1.1.c )', :word_form => 'Earth * ( well [*] mineral )', :abbrev_form => 'E * ( W [*] M )', :alpha => "E-AWEM");
Formula.create( :base => '097', :offset => '005', :subindex => '0', :ord => '3', :iform => '70.1 * ( 1.1.c ]*[ 97.1 )', :word_form => 'Earth * ( Mineral ]*[ well )', :abbrev_form => 'E * ( M ]*[ W )', :alpha => "E-AMIW");
Formula.create( :base => '098', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a )', :word_form => '( dot / dash ) / ( fall:left + rev(  fall:left ))', :abbrev_form => '( D / D ) / ( F:L + R( F:L ))', :alpha => "DODOFILIROFIL");
Formula.create( :base => '098', :offset => '001', :subindex => '0', :ord => '4', :iform => '32.1.a / 3.2', :word_form => 'Enter-alt / mow', :abbrev_form => 'A( E ) / M', :alpha => "E-AOM");
Formula.create( :base => '098', :offset => '001', :subindex => '0', :ord => '1', :iform => '98.1', :word_form => '{"interlocking lines"}', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '098', :offset => '001', :subindex => '0', :ord => '2', :iform => '98.1', :word_form => '{"interlocking lines"}', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '098', :offset => '001', :subindex => '0', :ord => '3', :iform => '98.1', :word_form => '{"interlocking lines"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '098', :offset => '002', :subindex => '0', :ord => '1', :iform => '153.1 * 98.1', :word_form => '( thread:->silk) * literature', :abbrev_form => '( T:->S ) / L', :alpha => "TYSOL");
Formula.create( :base => '098', :offset => '003', :subindex => '0', :ord => '1', :iform => ' 98.1 / 153.1', :word_form => 'Literature / ( thread:->silk)', :abbrev_form => 'L / ( T:->S )', :alpha => "LOTYS");
Formula.create( :base => '098', :offset => '004', :subindex => '0', :ord => '1', :iform => '125.1 * 98.1', :word_form => 'Insect-snake * liturature', :abbrev_form => 'IS * L', :alpha => "ISAL");
Formula.create( :base => '098', :offset => '004', :subindex => '0', :ord => '2', :iform => '125.1 * 98.1', :word_form => 'Insect-or-snake * liturature', :abbrev_form => 'IOS * L', :alpha => "IOSAL");
Formula.create( :base => '098', :offset => '005', :subindex => '0', :ord => '1', :iform => '163.1 / 98.1', :word_form => 'Clouds / literature', :abbrev_form => 'C / L', :alpha => "COL");
Formula.create( :base => '098', :offset => '006', :subindex => '0', :ord => '1', :iform => '98.1 * 88.36', :word_form => 'Literature * military', :abbrev_form => ':L * M', :alpha => "LAM");
Formula.create( :base => '098', :offset => '006', :subindex => '0', :ord => '2', :iform => '98.1 * ( 88.1 *\ alt( 45.2 ))', :word_form => 'Literature * (Stop *\ alt( dagger-ax ))', :abbrev_form => 'L * ( S *\ A( DA ))', :alpha => "LASAU-ADA");
Formula.create( :base => '098', :offset => '006', :subindex => '0', :ord => '3', :iform => '98.1 * ( 1.1.a / 88.1 ) */\ 45.1', :word_form => 'Literature * ( bar / stop ) */\ dart', :abbrev_form => 'L * ( B / S ) */\ D', :alpha => "LABOSAO-UD");
Formula.create( :base => '098', :offset => '007', :subindex => '0', :ord => '1', :iform => '98.1 * 49.1', :word_form => 'Literature * lines-is-fine', :abbrev_form => 'L * L:F', :alpha => "LALIF");
Formula.create( :base => '098', :offset => '015', :subindex => '0', :ord => '1', :iform => '122.1 */ 98.1', :word_form => 'Tiger.skin */ literature', :abbrev_form => 'T.S */ L', :alpha => "SOTAOL");
Formula.create( :base => '098', :offset => '016', :subindex => '0', :ord => '1', :iform => '98.1 / 68.1', :word_form => 'Literature / mouth', :abbrev_form => 'L / M', :alpha => "LOM");
Formula.create( :base => '099', :offset => '001', :subindex => '0', :ord => '1', :iform => '99.1.a->99.1.b', :word_form => 'bent-over->die-young', :abbrev_form => 'BO->DY', :alpha => "BOYDY");
Formula.create( :base => '099', :offset => '001', :subindex => 'a', :ord => '1', :iform => '99.1.a', :word_form => '{"person with head leaning forward"}', :abbrev_form => 'BO', :alpha => "BO");
Formula.create( :base => '099', :offset => '001', :subindex => 'a', :ord => '2', :iform => '99.1.a', :word_form => 'Person:(person.(head::leans:forward))', :abbrev_form => 'BO', :alpha => "BO");
Formula.create( :base => '099', :offset => '001', :subindex => 'b', :ord => '1', :iform => '99.1.a', :word_form => 'Bent-over', :abbrev_form => 'DY', :alpha => "DY");
Formula.create( :base => '099', :offset => '002', :subindex => '0', :ord => '1', :iform => '54.1 * 99.1', :word_form => 'Woman * ( bent-over->die-young )', :abbrev_form => 'W * ( BO->DY )', :alpha => "WABOYDY");
Formula.create( :base => '099', :offset => '002', :subindex => '0', :ord => '3', :iform => '54.1 * 99.1', :word_form => 'Woman * ( bent-over->die-young )', :abbrev_form => 'W * ( BO->DY )', :alpha => "WABODY");
Formula.create( :base => '099', :offset => '003', :subindex => '0', :ord => '1', :iform => '99.1 /|*| base( 23.3 )', :word_form => '( bent-over->die-young ) /|*| base( tall )', :abbrev_form => ' ( BO->DY ) /|*| B( T )', :alpha => "BOYDYO-EBOT");
Formula.create( :base => '099', :offset => '003', :subindex => '0', :ord => '3', :iform => '99.1 /|*| base( 23.3 )', :word_form => '( bent-over->die-young ) /|*| base( tall )', :abbrev_form => ' ( BO->DY ) /|*| B( T )', :alpha => "BODYO-EBOT");
Formula.create( :base => '099', :offset => '011', :subindex => '0', :ord => '1', :iform => '71.11.a / 99.1', :word_form => 'Bamboo-at-top / ( bent-over->die-young )', :abbrev_form => 'BAT / ( BO->DY )', :alpha => "BATOBOYDY");
Formula.create( :base => '099', :offset => '011', :subindex => '0', :ord => '2', :iform => '71.11.a / 99.1', :word_form => 'Bamboo-at-top / ( bent-over->die-young )', :abbrev_form => 'BAT / ( BO->DY )', :alpha => "BATOBODY");
Formula.create( :base => '099', :offset => '012', :subindex => '0', :ord => '1', :iform => '2.21.a * 99.1', :word_form => 'Side-water * ( bent-over->die-young )', :abbrev_form => 'SW * ( BO->DY )', :alpha => "SWABOYDY");
Formula.create( :base => '099', :offset => '012', :subindex => '0', :ord => '2', :iform => '2.21.a * 99.1', :word_form => 'Water-at-Side * ( bent-over->die-young )', :abbrev_form => 'WAS * ( BO->DY )', :alpha => "WASABOYDY");
Formula.create( :base => '099', :offset => '012', :subindex => '0', :ord => '3', :iform => '2.21.a * 99.1', :word_form => 'Side-water * ( bent-over->die-young )', :abbrev_form => 'SW * ( BO->DY )', :alpha => "SWABODY");
Formula.create( :base => '099', :offset => '012', :subindex => '0', :ord => '4', :iform => '2.21.a * 99.1', :word_form => 'Water-at-Side * ( bent-over->die-young )', :abbrev_form => 'WAS * ( BO->DY )', :alpha => "WASABODY");
Formula.create( :base => '100', :offset => '000', :subindex => '0', :ord => '1', :iform => '100.0', :word_form => 'abstract( "roots" )', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '100', :offset => '001', :subindex => '0', :ord => '1', :iform => '100.1', :word_form => '{"Roots of plant"}', :abbrev_form => 'ROP', :alpha => "ROP");
Formula.create( :base => '100', :offset => '001', :subindex => '0', :ord => '2', :iform => '100.1', :word_form => '{"Roots of plant"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '100', :offset => '002', :subindex => '0', :ord => '1', :iform => '100.1 / 1.1.b', :word_form => 'Spreading-roots / ground', :abbrev_form => 'SR / G', :alpha => "SROG");
Formula.create( :base => '100', :offset => '002', :subindex => '0', :ord => '2', :iform => '100.1 / 1.1.b', :word_form => 'Roots-of-plant / ground', :abbrev_form => 'ROP / G', :alpha => "ROPOG");
Formula.create( :base => '100', :offset => '002', :subindex => 'a', :ord => '1', :iform => '100.1 /|*| 1.1.d', :word_form => 'Spreading-roots /|*| dot', :abbrev_form => 'SR /|*| D', :alpha => "SRO-ED");
Formula.create( :base => '100', :offset => '002', :subindex => 'a', :ord => '2', :iform => '100.1 /|*| 1.1.d', :word_form => 'Roots-of-plant /|*| dot', :abbrev_form => 'ROP /|*| D', :alpha => "ROPO-ED");
Formula.create( :base => '100', :offset => '003', :subindex => '0', :ord => '1', :iform => '89.1.a * 100.2', :word_form => 'Side-hand * Spreading-roots', :abbrev_form => 'SH * SR', :alpha => "SHASR");
Formula.create( :base => '100', :offset => '003', :subindex => '0', :ord => '2', :iform => '89.1.a * 100.2', :word_form => 'Side-hand * Roots-of-plant', :abbrev_form => 'SH * ROP', :alpha => "SHAROP");
Formula.create( :base => '100', :offset => '003', :subindex => '0', :ord => '3', :iform => '89.1.a * 100.2', :word_form => 'Hand-at-side * Roots-of-plant', :abbrev_form => 'HAS * ROP', :alpha => "HASAROP");
Formula.create( :base => '100', :offset => '008', :subindex => '0', :ord => '1', :iform => '153.1 * 100.1', :word_form => '( thread->silk) * Roots-of-plant', :abbrev_form => '( T->S ) * ROP', :alpha => "TYSAROP");
Formula.create( :base => '100', :offset => '009', :subindex => '0', :ord => '1', :iform => '1.46.a * 100.1', :word_form => 'Side-revelation * Roots-of-plant', :abbrev_form => 'SR * ROP', :alpha => "SRAROP");
Formula.create( :base => '100', :offset => '009', :subindex => '0', :ord => '3', :iform => '1.46.a * 100.1', :word_form => 'Revelation-at-Side * Roots-of-plant', :abbrev_form => 'RAS * ROP', :alpha => "RASAROP");
Formula.create( :base => '100', :offset => '010', :subindex => '0', :ord => '3', :iform => '( 100.2->100.1 ) / 76.1', :word_form => '( Roots-in-ground->Roots-of-plant ) / sun', :abbrev_form => '( RIG->ROP ) / S', :alpha => "RIGYROPOS");
Formula.create( :base => '100', :offset => '010', :subindex => '0', :ord => '2', :iform => '100.1 / 76.1', :word_form => 'Roots-of-plant / sun', :abbrev_form => 'ROP / S', :alpha => "ROPOS");
Formula.create( :base => '100', :offset => '010', :subindex => '0', :ord => '1', :iform => '100.2 / 76.1', :word_form => 'Roots-in-ground / sun', :abbrev_form => 'RIG / S', :alpha => "RIGOS");
Formula.create( :base => '101', :offset => '001', :subindex => '0', :ord => '1', :iform => '101.1', :word_form => '{"top-heavy grain plant"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '101', :offset => '001', :subindex => '0', :ord => '2', :iform => '77.1.b *\ 1.1.c', :word_form => 'open( tree->wood ) *\ dot', :abbrev_form => 'O( T->W ) *\ D', :alpha => "OTYWA-UD");
Formula.create( :base => '101', :offset => '002', :subindex => '0', :ord => '1', :iform => '41.5 |*| 101.1', :word_form => 'Travel |*| Sorghum', :abbrev_form => 'T |*| S', :alpha => "TES");
Formula.create( :base => '101', :offset => '002', :subindex => '0', :ord => '2', :iform => '41.5 |*| ( 77.1.b *\ 1.1.c )', :word_form => 'Travel |*| ( open( tree->wood ) *\ dot )', :abbrev_form => 'T |*| ( O( T->W ) *\ D )', :alpha => "TEOTYWA-UD");
Formula.create( :base => '101', :offset => '002', :subindex => '0', :ord => '3', :iform => '41.5 |*| 101.1', :word_form => 'Travel |*| Sorghum', :abbrev_form => 'T |*| S', :alpha => "TES");
Formula.create( :base => '101', :offset => '002', :subindex => '0', :ord => '4', :iform => '41.5 |*| ( 77.1.b *\ 1.1.c )', :word_form => 'Travel |*| ( open( tree->wood ) *\ dot )', :abbrev_form => 'T |*| ( O( T->W ) *\ D )', :alpha => "TEOTYWA-UD");
Formula.create( :base => '101', :offset => '003', :subindex => '0', :ord => '1', :iform => '41.3 *\ 101.1', :word_form => 'Stop-and-go *\ sorghum', :abbrev_form => 'SAG *\ S', :alpha => "SAGAUS");
Formula.create( :base => '101', :offset => '003', :subindex => '0', :ord => '3', :iform => '41.3 *\ ( 77.1.b *\ 1.1.c )', :word_form => 'Stop-and-go *\ ( open( tree->wood ) *\ dot )', :abbrev_form => 'SAG *\ ( O( T->W ) *\ D )', :alpha => "SAGA-UOTYWA-UD");
Formula.create( :base => '101', :offset => '004', :subindex => '0', :ord => '1', :iform => '3.2 / 101.1', :word_form => 'Mow / sorghum', :abbrev_form => 'M / S', :alpha => "MOS");
Formula.create( :base => '101', :offset => '005', :subindex => '0', :ord => '2', :iform => '( 3.2 / 101.1 ) * ( 37.1 / 14.1 )', :word_form => '( Mow / sorghum ) * ( flap / hand-again )', :abbrev_form => '( M / S ) * ( F / HA )', :alpha => "MOSAFOHA");
Formula.create( :base => '101', :offset => '005', :subindex => '0', :ord => '1', :iform => '101.4 * ( 37.1 / 14.1 )', :word_form => 'Decapitate * ( flap / hand-again )', :abbrev_form => 'D * ( F / HA )', :alpha => "DAFOHA");
Formula.create( :base => '101', :offset => '006', :subindex => '0', :ord => '2', :iform => '( 3.2 / 101.1 ) *  35.1', :word_form => '( Mow / sorghum ) * knife', :abbrev_form => '( M / S ) * K', :alpha => "MOSAK");
Formula.create( :base => '101', :offset => '006', :subindex => '0', :ord => '1', :iform => '101.4 * 35.1', :word_form => 'Decapitate * knife', :abbrev_form => 'D * K', :alpha => "DAK");
Formula.create( :base => '102', :offset => '001', :subindex => '0', :ord => '1', :iform => '102.1', :word_form => '{"exchange of object"}', :abbrev_form => 'G', :alpha => "G");
Formula.create( :base => '102', :offset => '001', :subindex => '0', :ord => '2', :iform => '102.1', :word_form => 'exchange( object )', :abbrev_form => 'E( O )', :alpha => "EO-O");
Formula.create( :base => '102', :offset => '001', :subindex => '0', :ord => '3', :iform => '102.1', :word_form => '::exchange:>object', :abbrev_form => '::E:>O', :alpha => "EO-O");
Formula.create( :base => '102', :offset => '002', :subindex => '0', :ord => '1', :iform => '102.1 * 148.12', :word_form => '(::exchange:>object ) * ( head->page )', :abbrev_form => '(::E:>O ) * ( H->P )', :alpha => "EO-OAHYP");
Formula.create( :base => '102', :offset => '002', :subindex => '0', :ord => '3', :iform => '102.1 * 148.12', :word_form => 'Give * ( head->page )', :abbrev_form => 'G * ( H->P )', :alpha => "GAHYP");
Formula.create( :base => '102', :offset => '003', :subindex => '0', :ord => '1', :iform => '102.1 * 172.1', :word_form => '(::exchange:>object ) * elephant', :abbrev_form => '(::E:>O )* E', :alpha => "EO-OA-E");
Formula.create( :base => '102', :offset => '003', :subindex => '0', :ord => '3', :iform => '102.1 * 172.1', :word_form => 'Give * elephant', :abbrev_form => 'G * E', :alpha => "GA-E");
Formula.create( :base => '102', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 44.1 / 66.1 / 69.1 ) * 102.1', :word_form => '( gather / sprout / enclosure ) * give', :abbrev_form => '( G / S / E ) * G', :alpha => "GOSOE-AG");
Formula.create( :base => '102', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 44.1 / 66.1 / 69.1 ) * 102.1', :word_form => '( gather / sprout / enclosure ) *(::exchange:>object  )', :abbrev_form => '( G / S / E ) * (::E:>O )', :alpha => "GOSOE-A-EO-O");
Formula.create( :base => '102', :offset => '004', :subindex => '0', :ord => '1', :iform => '44.40 * 102.1', :word_form => 'Hut * give', :abbrev_form => 'H * G', :alpha => "HAG");
Formula.create( :base => '102', :offset => '004', :subindex => '0', :ord => '2', :iform => '44.40 * 102.1', :word_form => 'Hut *(::exchange:>object )', :abbrev_form => 'H * (::E:>O ', :alpha => "HA-EO-O");
Formula.create( :base => '102', :offset => '005', :subindex => '0', :ord => '1', :iform => '89.1.a * 102.1', :word_form => 'Side-hand * give', :abbrev_form => 'SH * G', :alpha => "SHAG");
Formula.create( :base => '102', :offset => '005', :subindex => '0', :ord => '3', :iform => '89.1.a * 102.1', :word_form => 'Side-hand * (::exchange:>object )', :abbrev_form => 'SH * (::E:>O )', :alpha => "SHA-EO-O");
Formula.create( :base => '102', :offset => '006', :subindex => '0', :ord => '1', :iform => '153.1 * 102.1', :word_form => 'Silk-thread * give', :abbrev_form => 'ST * G', :alpha => "STAG");
Formula.create( :base => '102', :offset => '006', :subindex => '0', :ord => '2', :iform => '153.1 * 102.1', :word_form => '( thread->silk ) * give', :abbrev_form => '( T->S ) * G', :alpha => "TYSAG");
Formula.create( :base => '102', :offset => '006', :subindex => '0', :ord => '3', :iform => '153.1 * 102.1', :word_form => '( thread->silk ) * (::exchange:>object )', :abbrev_form => '( T->S ) * (::E:>O )', :alpha => "TYSA-EO-O");
Formula.create( :base => '102', :offset => '007', :subindex => '0', :ord => '1', :iform => '60.1 */ 102.1', :word_form => 'Shelter */ give', :abbrev_form => 'S */ G', :alpha => "SA-OG");
Formula.create( :base => '102', :offset => '007', :subindex => '0', :ord => '3', :iform => '60.1 */ 102.1', :word_form => 'Shelter */ (::exchange:>object )', :abbrev_form => 'S */ (::E:>O )', :alpha => "SA-O-EO-O");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '1', :iform => '111.18 * 102.1', :word_form => '( Village->mile ) * give', :abbrev_form => '( V->M ) * G', :alpha => "VYMAG");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '2', :iform => '111.18 * 102.1', :word_form => '( Village->mile ) * (::exchange:>object )', :abbrev_form => '( V->M ) * (::E:>O )', :alpha => "VYMA-EO-O");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '3', :iform => '111.18 * 102.1', :word_form => '( field / earth ) * give', :abbrev_form => '( F / E ) * G', :alpha => "FOE-AG");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '4', :iform => '111.18 * 102.1', :word_form => '( field / earth ) * (::exchange:>object )', :abbrev_form => '( F / E ) * (::E:>O )', :alpha => "FOE-A-EO-O");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '5', :iform => '111.18 * 102.1', :word_form => '( Village->mile ) * give', :abbrev_form => '( V->M ) * G', :alpha => "VYMAG");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '6', :iform => '111.18 * 102.1', :word_form => '( Village->mile ) * (::exchange:>object )', :abbrev_form => '( V->M ) * (::E:>O )', :alpha => "VYMA-EO-O");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '7', :iform => '111.18 * 102.1', :word_form => '( field / earth ) * give', :abbrev_form => '( F / E ) * G', :alpha => "FOE-AG");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '8', :iform => '111.18 * 102.1', :word_form => '( field / earth ) * (::exchange:>object )', :abbrev_form => '( F / E ) * (::E:>O )', :alpha => "FOE-A-EO-O");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '9', :iform => '111.18 * 102.1', :word_form => '( Village->mile ) * give', :abbrev_form => '( V->M ) * G', :alpha => "VYMAG");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '10', :iform => '111.18 * 102.1', :word_form => '( Village->mile ) * (::exchange:>object )', :abbrev_form => '( V->M ) * (::E:>O )', :alpha => "VYMA-EO-O");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '11', :iform => '111.18 * 102.1', :word_form => '( field / earth ) * give', :abbrev_form => '( F / E ) * G', :alpha => "FOE-AG");
Formula.create( :base => '102', :offset => '008', :subindex => '0', :ord => '12', :iform => '111.18 * 102.1', :word_form => '( field / earth ) * (::exchange:>object )', :abbrev_form => '( F / E ) * (::E:>O )', :alpha => "FOE-A-EO-O");
Formula.create( :base => '102', :offset => '009', :subindex => '0', :ord => '1', :iform => '102.8 / 70.1', :word_form => 'Country-side / give', :abbrev_form => 'CS / G', :alpha => "C-SOG");
Formula.create( :base => '102', :offset => '009', :subindex => '0', :ord => '2', :iform => '102.8 / 70.1', :word_form => 'Country-side / (::exchange:>object )', :abbrev_form => 'CS / (::E:>O )', :alpha => "C-SO-EO-O");
Formula.create( :base => '102', :offset => '009', :subindex => '0', :ord => '3', :iform => '102.8 / 70.1', :word_form => 'wild / give', :abbrev_form => 'W / G', :alpha => "WOG");
Formula.create( :base => '102', :offset => '009', :subindex => '0', :ord => '4', :iform => '102.8 / 70.1', :word_form => 'wild / (::exchange:>object )', :abbrev_form => 'W / (::E:>O )', :alpha => "WO-EO-O");
Formula.create( :base => '102', :offset => '009', :subindex => '0', :ord => '5', :iform => '102.8 / 70.1', :word_form => 'barbaric / give', :abbrev_form => 'B / G', :alpha => "BOG");
Formula.create( :base => '102', :offset => '009', :subindex => '0', :ord => '6', :iform => '102.8 / 70.1', :word_form => 'barbaric / (::exchange:>object )', :abbrev_form => 'B / (::E:>O )', :alpha => "BO-EO-O");
Formula.create( :base => '103', :offset => '000', :subindex => '0', :ord => '1', :iform => '103.0', :word_form => 'abstract( "claw" )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '103', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 103.0 }', :word_form => '{ claw }', :abbrev_form => '{ C }', :alpha => "POC");
Formula.create( :base => '103', :offset => '001', :subindex => '0', :ord => '1', :iform => '103.1', :word_form => '{"claw"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '103', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'rot( 103.1)', :word_form => 'rot( claw )', :abbrev_form => 'R( C)', :alpha => "RC");
Formula.create( :base => '103', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Alt( 103.1 )', :word_form => 'alt( claw )', :abbrev_form => 'A( C)', :alpha => "AOC");
Formula.create( :base => '103', :offset => '002', :subindex => '0', :ord => '1', :iform => '89.1.a * 103.1', :word_form => 'Side-hand * claw', :abbrev_form => 'SH * C', :alpha => "SHAC");
Formula.create( :base => '103', :offset => '003', :subindex => '0', :ord => '1', :iform => '103.1 / 54.1', :word_form => 'Claw / woman', :abbrev_form => 'C / W', :alpha => "COW");
Formula.create( :base => '103', :offset => '003', :subindex => '0', :ord => '3', :iform => '54.1 \ 103.1', :word_form => 'Woman \ Claw', :abbrev_form => 'W \ C', :alpha => "WUC");
Formula.create( :base => '103', :offset => '006', :subindex => '0', :ord => '3', :iform => '103.1 / 59.1 / 39.1', :word_form => 'Claw / tiny / big', :abbrev_form => 'C / T / B', :alpha => "COTOB");
Formula.create( :base => '103', :offset => '006', :subindex => '0', :ord => '5', :iform => '103.1 / 59.1 / 39.1', :word_form => 'Claw / ( fetus:-> tiny ) / big', :abbrev_form => 'C / ( F:-> T ) / B', :alpha => "COFYTOB");
Formula.create( :base => '103', :offset => '006', :subindex => '0', :ord => '1', :iform => '153.12.a / 39.1', :word_form => 'Inverse-drag-line / big', :abbrev_form => 'IDL / B', :alpha => "IDLOB");
Formula.create( :base => '103', :offset => '009', :subindex => '0', :ord => '1', :iform => '103.1 / 77.1', :word_form => 'Claw / ( tree:->wood )', :abbrev_form => 'C / ( T:->W )', :alpha => "COTYW");
Formula.create( :base => '103', :offset => '009', :subindex => '0', :ord => '3', :iform => '77.1 \ 103.1', :word_form => ' ( tree:->wood ) \ Claw', :abbrev_form => '( T:->W ) \ C', :alpha => "TYWUC");
Formula.create( :base => '103', :offset => '015', :subindex => '0', :ord => '1', :iform => '103.1 / ( 114.1 / 11.1 )', :word_form => 'Claw / ( eye / ( person:->legs ))', :abbrev_form => 'C / ( E / ( P:->L ))', :alpha => "CO-EOPYL");
Formula.create( :base => '103', :offset => '015', :subindex => '0', :ord => '2', :iform => '103.1 / ( 114.1 / 11.1 )', :word_form => 'Claw / ( rot( eye ) / ( person:->legs ))', :abbrev_form => 'C / ( R( E ) / ( P:->L ))', :alpha => "CORO-EOPYL");
Formula.create( :base => '103', :offset => '015', :subindex => '0', :ord => '3', :iform => '103.1 / 114.9', :word_form => 'Claw / see', :abbrev_form => 'C / S', :alpha => "COS");
Formula.create( :base => '103', :offset => '016', :subindex => '0', :ord => '1', :iform => '103.1 / 14.1', :word_form => 'Claw / ( hand->again )', :abbrev_form => 'C / ( H->A )', :alpha => "COHYA");
Formula.create( :base => '104', :offset => '000', :subindex => '0', :ord => '1', :iform => '104.0', :word_form => 'abstract( "melon" )', :abbrev_form => '', :alpha => "");
Formula.create( :base => '104', :offset => '001', :subindex => '0', :ord => '1', :iform => '104.1', :word_form => '{"melon plant"}', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '104', :offset => '001', :subindex => '0', :ord => '2', :iform => '66.0:->104.0', :word_form => 'plant:->melon', :abbrev_form => 'P:->M', :alpha => "PYM");
Formula.create( :base => '104', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1 * 104.1', :word_form => 'Mouth * ( plant:->melon )', :abbrev_form => 'M * ( P:->M )', :alpha => "MAPYM");
Formula.create( :base => '104', :offset => '003', :subindex => '0', :ord => '1', :iform => '55.1 * 104.1 ', :word_form => 'Child * ( plant:->melon )', :abbrev_form => 'C * ( P:->M )', :alpha => "CAPYM");
Formula.create( :base => '104', :offset => '003', :subindex => '0', :ord => '3', :iform => '55.1 * 104.1 ', :word_form => '( baby::show:>arms ) * ( plant:->melon )', :abbrev_form => '( B::S:>A ) * ( P:->M )', :alpha => "BASOA-APYM");
Formula.create( :base => '104', :offset => '004', :subindex => '0', :ord => '1', :iform => ' 91.1.a * 104.1', :word_form => 'Dog-at-side * ( plant:->melon )', :abbrev_form => 'DAS * ( P:->M )', :alpha => "DASAPYM");
Formula.create( :base => '104', :offset => '005', :subindex => '0', :ord => '1', :iform => '65.1 * 104.1', :word_form => 'Bow * ( plant:->melon )', :abbrev_form => 'B * ( P:->M )', :alpha => "BAPYM");
Formula.create( :base => '105', :offset => '001', :subindex => '0', :ord => '1', :iform => '105.1', :word_form => '{"hooked lance"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '105', :offset => '001', :subindex => '0', :ord => '2', :iform => '105.1', :word_form => '{"hooked lance"}', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '105', :offset => '002', :subindex => '0', :ord => '1', :iform => '66.2 / 105.1', :word_form => 'Grass / spear', :abbrev_form => 'G / S', :alpha => "GOS");
Formula.create( :base => '105', :offset => '002', :subindex => '0', :ord => '2', :iform => '66.2 / 105.1', :word_form => 'Grass / lance', :abbrev_form => 'G / L', :alpha => "GOL");
Formula.create( :base => '105', :offset => '003', :subindex => '0', :ord => '1', :iform => '105.1 / 77.1', :word_form => 'Spear / ( tree:->wood )', :abbrev_form => 'S / ( T:->W )', :alpha => "SOTYW");
Formula.create( :base => '105', :offset => '003', :subindex => '0', :ord => '3', :iform => '105.1 / 77.1', :word_form => 'lance / ( tree:->wood )', :abbrev_form => 'L / ( T:->W )', :alpha => "LOTYW");
Formula.create( :base => '105', :offset => '006', :subindex => '0', :ord => '2', :iform => '( 105.1 * 26.2 ) / 34.1', :word_form => '( Spear * tap ) / strength', :abbrev_form => '( S * T ) / S', :alpha => "SATOS");
Formula.create( :base => '105', :offset => '006', :subindex => '0', :ord => '4', :iform => '( 105.1 * 26.2 ) / 34.1', :word_form => '( lance * tap ) / strength', :abbrev_form => '( L * T ) / S', :alpha => "LATOS");
Formula.create( :base => '105', :offset => '006', :subindex => '0', :ord => '3', :iform => '105.1 * ( 26.2 / 34.1 )', :word_form => 'Spear * ( tap / strength )', :abbrev_form => 'S * ( T / S )', :alpha => "SATOS");
Formula.create( :base => '105', :offset => '006', :subindex => '0', :ord => '5', :iform => '105.1 * ( 26.2 / 34.1 )', :word_form => 'lance * ( tap / strength )', :abbrev_form => 'L * ( T / S )', :alpha => "LATOS");
Formula.create( :base => '105', :offset => '006', :subindex => '0', :ord => '1', :iform => '105.12 / 34.1', :word_form => 'Exert / strength', :abbrev_form => 'E / S', :alpha => "EOS");
Formula.create( :base => '105', :offset => '008', :subindex => '0', :ord => '1', :iform => '105.1 / 23.54.a', :word_form => 'Spear / window', :abbrev_form => 'S / W', :alpha => "SOW");
Formula.create( :base => '105', :offset => '008', :subindex => '0', :ord => '2', :iform => '105.1 / 23.54', :word_form => 'Spear / stammer', :abbrev_form => 'S / S', :alpha => "SOS");
Formula.create( :base => '105', :offset => '008', :subindex => '0', :ord => '3', :iform => '105.1 / 23.54.a', :word_form => 'lance / window', :abbrev_form => 'L / W', :alpha => "LOW");
Formula.create( :base => '105', :offset => '008', :subindex => '0', :ord => '4', :iform => '105.1 / 23.54', :word_form => 'lance / stammer', :abbrev_form => 'L / S', :alpha => "LOS");
Formula.create( :base => '105', :offset => '012', :subindex => '0', :ord => '1', :iform => '105.1 * 26.2', :word_form => 'Spear * tap', :abbrev_form => 'S * T', :alpha => "SAT");
Formula.create( :base => '105', :offset => '012', :subindex => '0', :ord => '2', :iform => '105.1 * 26.2', :word_form => 'lance * tap', :abbrev_form => 'L * T', :alpha => "LAT");
Formula.create( :base => '106', :offset => '000', :subindex => '0', :ord => '1', :iform => '106.0', :word_form => 'abstract( "basket" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '106', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 106.1 }', :word_form => '{ basket }', :abbrev_form => '{ B }', :alpha => "B");
Formula.create( :base => '106', :offset => '001', :subindex => '0', :ord => '2', :iform => '106.1', :word_form => '{"basket"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '106', :offset => '002', :subindex => '0', :ord => '1', :iform => '106.1 / 150.1', :word_form => 'Basket / shellfish', :abbrev_form => 'B / SF', :alpha => "BOSF");
Formula.create( :base => '106', :offset => '002', :subindex => '0', :ord => '2', :iform => '106.1 / 150.1', :word_form => 'Basket / mollusk.shell', :abbrev_form => 'B / M.S', :alpha => "BOSOM");
Formula.create( :base => '106', :offset => '008', :subindex => '0', :ord => '1', :iform => '106.1 / 167.3', :word_form => 'Basket / legion', :abbrev_form => 'B / L', :alpha => "BOL");
Formula.create( :base => '106', :offset => '008', :subindex => '0', :ord => '2', :iform => '106.1 / 167.3', :word_form => 'Basket / smaller-hill', :abbrev_form => 'B / SH', :alpha => "BOSH");
Formula.create( :base => '106', :offset => '008', :subindex => '0', :ord => '3', :iform => '106.1 / ( 21.1 #*/ stack( 68.1 ))', :word_form => 'Basket / ( cliff #*/ stack( openings ))', :abbrev_form => 'B / ( C #*/ S( O )) ', :alpha => "BOCOLAOSO-O");
Formula.create( :base => '107', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 107.1.a->1.20 ) */\ 1.1.c', :word_form => '(( pieces-of-jade->king ) */\ dot )', :abbrev_form => '(( POJ->K) */\ D )', :alpha => "POJYKAO'UD");
Formula.create( :base => '107', :offset => '001', :subindex => '0', :ord => '1', :iform => '107.1.a *[*] 1.1.c', :word_form => 'King-jade *[*] dot', :abbrev_form => 'KJ *[*] D', :alpha => "K-JA-ED");
Formula.create( :base => '107', :offset => '001', :subindex => '0', :ord => '3', :iform => '107.1.a *[*] 1.1.c', :word_form => 'Pieces-of-jade-to-king *[*] dot', :abbrev_form => 'POJYK *[*] D', :alpha => "POJYKA-ED");
Formula.create( :base => '107', :offset => '001', :subindex => '0', :ord => '4', :iform => '107.1.a */\ 1.1.c', :word_form => 'Pieces-of-Jade */\ dot', :abbrev_form => 'POJ */\ D', :alpha => "POJAOUD");
Formula.create( :base => '107', :offset => '001', :subindex => '0', :ord => '2', :iform => '1.20 */\1.1.c', :word_form => 'King */\ dot', :abbrev_form => 'K */\ D', :alpha => "KAOUD");
Formula.create( :base => '107', :offset => '001', :subindex => 'a', :ord => '1', :iform => '107.1.a', :word_form => '{"three pieces of jade on string"} ', :abbrev_form => 'POJ', :alpha => "POJ");
Formula.create( :base => '107', :offset => '002', :subindex => '0', :ord => '1', :iform => '107.1.a ^2', :word_form => 'Pieces-of-jade ^2', :abbrev_form => 'POJUT', :alpha => "POJUT");
Formula.create( :base => '108', :offset => '000', :subindex => '0', :ord => '1', :iform => '108.0', :word_form => 'abstract( "grain" )', :abbrev_form => 'A( G )', :alpha => "AG");
Formula.create( :base => '108', :offset => '000', :subindex => 'a', :ord => '1', :iform => '108.0.a', :word_form => 'abstract( "stalk" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '108', :offset => '001', :subindex => '0', :ord => '1', :iform => '108.1', :word_form => '{"grain-bearing plant"}', :abbrev_form => 'SG', :alpha => "SG");
Formula.create( :base => '108', :offset => '001', :subindex => '0', :ord => '2', :iform => '66.0:->108.0', :word_form => 'plant:->grain', :abbrev_form => 'P:->G', :alpha => "PYG");
Formula.create( :base => '108', :offset => '002', :subindex => '0', :ord => '1', :iform => '108.1 * 68.1', :word_form => 'Grain * mouth', :abbrev_form => 'G * M', :alpha => "GAM");
Formula.create( :base => '108', :offset => '003', :subindex => '0', :ord => '1', :iform => '108.1^2', :word_form => 'Grain^2', :abbrev_form => 'G^2', :alpha => "GUT");
Formula.create( :base => '108', :offset => '016', :subindex => '0', :ord => '1', :iform => '108.1 + 14.1.b', :word_form => 'Grain + grab', :abbrev_form => 'G + G', :alpha => "GIG");
Formula.create( :base => '108', :offset => '017', :subindex => '0', :ord => '1', :iform => '108.1 * 35.1.a', :word_form => 'Grain * knife-at-right', :abbrev_form => 'G * KAR', :alpha => "GAKAR");
Formula.create( :base => '108', :offset => '024', :subindex => '0', :ord => '1', :iform => '108.1 / 32.1 / 2.21', :word_form => 'Grain / enter / water', :abbrev_form => 'G / E / W', :alpha => "GOE-OW");
Formula.create( :base => '108', :offset => '024', :subindex => '0', :ord => '2', :iform => '108.1 / 32.1 /|*| 2.21', :word_form => 'Grain / enter /|*| water', :abbrev_form => 'G / E /|*| W', :alpha => "GOE-OEW");
Formula.create( :base => '108', :offset => '024', :subindex => '0', :ord => '3', :iform => '108.1 / 32.1 /*>* 2.21', :word_form => 'Grain / enter /*>* water', :abbrev_form => 'G / E /*>* W', :alpha => "GO-EOA-A-AW");
Formula.create( :base => '108', :offset => '025', :subindex => '0', :ord => '2', :iform => '( 108.1 / 32.1 /|*| 2.21 ) / 68.57', :word_form => '( Grain / enter /|*| water  ) / sweet', :abbrev_form => '( G / E /|*| W ) / S', :alpha => "GOE-OEWOS");
Formula.create( :base => '108', :offset => '025', :subindex => '0', :ord => '3', :iform => '108.1 / ( 68.57->76.1 )', :word_form => 'Grain / ( sweet->sun )', :abbrev_form => 'G / ( S->S )', :alpha => "GOSYS");
Formula.create( :base => '108', :offset => '025', :subindex => '0', :ord => '4', :iform => '108.1 / 76.1', :word_form => 'Grain / sun', :abbrev_form => 'G / S', :alpha => "GOS");
Formula.create( :base => '108', :offset => '025', :subindex => '0', :ord => '1', :iform => '108.24 / 68.57', :word_form => 'millet / sweet', :abbrev_form => 'M / S', :alpha => "MOS");
Formula.create( :base => '108', :offset => '026', :subindex => '0', :ord => '1', :iform => '108.1 / 11.1', :word_form => 'Grain / ( person->legs )', :abbrev_form => 'G / ( P->L )', :alpha => "GOPYL");
Formula.create( :base => '108', :offset => '028', :subindex => '0', :ord => '1', :iform => '108.1 / 54.1', :word_form => 'Grain / woman', :abbrev_form => 'G / W', :alpha => "GOW");
Formula.create( :base => '109', :offset => '001', :subindex => '0', :ord => '1', :iform => '109.1', :word_form => '{"interlocking roof tiles"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '110', :offset => '001', :subindex => '0', :ord => '2', :iform => '0.110.1->110.1', :word_form => 'Sprout:->go-out', :abbrev_form => 'S:->GO', :alpha => "SYGO");
Formula.create( :base => '110', :offset => '001', :subindex => '0', :ord => '1', :iform => '110.1', :word_form => '{"sprouting plant"}', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '110', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 144.1.b ][ 144.1.a ) / stack( 82.1 ) * 110.1', :word_form => '(( Lattice ][ Window ) / stack( fire )) * ( sprout->go-out )', :abbrev_form => '(( L ][ W ) / S( F )) *  (S:->GO)', :alpha => "LIWOSOFA-SYG");
Formula.create( :base => '110', :offset => '002', :subindex => '0', :ord => '1', :iform => '144.17 * 110.1', :word_form => 'Black * ( sprout->go-out )', :abbrev_form => 'B * (S:->GO)', :alpha => "BASYGO");
Formula.create( :base => '110', :offset => '003', :subindex => '0', :ord => '1', :iform => '153.1 * 110.1', :word_form => '( thread:->silk ) * ( Sprout:->go-out )', :abbrev_form => '( T:->S ) * (S:->GO)', :alpha => "TYSASYGO");
Formula.create( :base => '110', :offset => '003', :subindex => '0', :ord => '2', :iform => '153.1 * 110.1', :word_form => '( silk:->thread ) * ( Sprout:->go-out )', :abbrev_form => '( S:->T ) * (S:->GO)', :alpha => "SYTASYGO");
Formula.create( :base => '110', :offset => '003', :subindex => '0', :ord => '3', :iform => '153.1 * 110.1', :word_form => '( silk-thread ) * ( Sprout:->go-out )', :abbrev_form => '( ST ) * (S:->GO)', :alpha => "STASYGO");
Formula.create( :base => '110', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 40.1 */ 90.1 ) / 110.1', :word_form => '( recliner */ fur ) / ( Sprout:->go-out )', :abbrev_form => '( R */ F ) / (S:->GO)', :alpha => "RAOFOSYGO");
Formula.create( :base => '110', :offset => '004', :subindex => '0', :ord => '5', :iform => '40.1 */ 110.1', :word_form => 'recliner */ ( Sprout:->go-out )', :abbrev_form => 'R */ (S:->GO)', :alpha => "RAOSYGO");
Formula.create( :base => '110', :offset => '004', :subindex => '0', :ord => '1', :iform => '90.5 */ 110.1', :word_form => 'Tail */ ( Sprout:->go-out )', :abbrev_form => 'T */ (S:->GO)', :alpha => "TAOSYGO");
Formula.create( :base => '110', :offset => '009', :subindex => '0', :ord => '1', :iform => '66.2 / 110.1', :word_form => 'Grass / ( Sprout:->go-out )', :abbrev_form => 'G / (S:->GO)', :alpha => "GOSYGO");
Formula.create( :base => '110', :offset => '009', :subindex => '0', :ord => '2', :iform => '66.2.a / 110.1', :word_form => 'Grass-at-top / ( Sprout:->go-out )', :abbrev_form => 'GAT / (S:->GO)', :alpha => "GATOSYGO");
Formula.create( :base => '110', :offset => '010', :subindex => '0', :ord => '1', :iform => '89.1.a * 110.1', :word_form => 'Side-hand * ( Sprout:->go-out )', :abbrev_form => 'SH * (S:->GO)', :alpha => "SHASYGO");
Formula.create( :base => '110', :offset => '011', :subindex => '0', :ord => '1', :iform => '110.1 / 1.46', :word_form => '( Sprout:->go-out ) / revelation', :abbrev_form => '(S:->GO) / R', :alpha => "SYGO-OR");
Formula.create( :base => '111', :offset => '001', :subindex => '0', :ord => '1', :iform => '111.1', :word_form => '{"field"}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '111', :offset => '001', :subindex => 'a', :ord => '1', :iform => '111.1', :word_form => 'field', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '111', :offset => '001', :subindex => 'a', :ord => '2', :iform => '68.0.b->111.1', :word_form => 'object->field', :abbrev_form => 'O->F', :alpha => "OYF");
Formula.create( :base => '111', :offset => '001', :subindex => 'b', :ord => '1', :iform => '141.0.a->111.1', :word_form => 'pottery->field', :abbrev_form => 'P->F', :alpha => "PYF");
Formula.create( :base => '111', :offset => '001', :subindex => 'c', :ord => '1', :iform => '143.1->111.1', :word_form => '( skull [] brain )->field', :abbrev_form => '( S [] B )->F', :alpha => "SEBYF");
Formula.create( :base => '111', :offset => '001', :subindex => 'd', :ord => '1', :iform => '132.7.0->111.1', :word_form => 'Stomach-and-contents->field', :abbrev_form => 'SAC->F', :alpha => "SACYF");
Formula.create( :base => '111', :offset => '001', :subindex => 'e', :ord => '2', :iform => '( 88.0.e ):->( 156.0.c  )->( 111.1 )', :word_form => 'Heel:->print->field', :abbrev_form => 'H:->P->F', :alpha => "HYPYF");
Formula.create( :base => '111', :offset => '001', :subindex => 'e', :ord => '3', :iform => '( 88.0.f ):->( 156.0.c  )->( 111.1 )', :word_form => 'sole:->print->field', :abbrev_form => 'S:->P->F', :alpha => "SYPYF");
Formula.create( :base => '111', :offset => '001', :subindex => 'e', :ord => '1', :iform => '140.1->111.1', :word_form => 'spirit-head->field', :abbrev_form => 'SH->F', :alpha => "SHYF");
Formula.create( :base => '111', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a * 111.1', :word_form => 'Side-person * field', :abbrev_form => 'SP * F', :alpha => "SPAF");
Formula.create( :base => '111', :offset => '003', :subindex => '0', :ord => '1', :iform => '18.1 /|*| 111.1', :word_form => 'Person-at-top /|*| field ', :abbrev_form => 'PAT /|*| F', :alpha => "PATOEF");
Formula.create( :base => '111', :offset => '003', :subindex => '0', :ord => '2', :iform => '18.1 />< 111.1', :word_form => 'Person-at-top />< field ', :abbrev_form => 'PAT />< F', :alpha => "PATOEXAF");
Formula.create( :base => '111', :offset => '003', :subindex => '0', :ord => '3', :iform => '18.1 />< 111.1', :word_form => 'Person-at-top />< field ', :abbrev_form => 'PAT />< F', :alpha => "PATOAF");
Formula.create( :base => '111', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Col( 1.1 ) /*/*/ stack( 111.1 )', :word_form => 'col( one ) /*/*/ stack( field )', :abbrev_form => 'C( O ) /*/*/ S( F )', :alpha => "CO-OILSOF");
Formula.create( :base => '111', :offset => '004', :subindex => '0', :ord => '2', :iform => 'Col( 1.1 ) /*/*/ stack( 111.1 )', :word_form => 'col( dash ) /*/*/ stack( field )', :abbrev_form => 'C( D ) /*/*/ S( F )', :alpha => "CODILSOF");
Formula.create( :base => '111', :offset => '009', :subindex => '0', :ord => '1', :iform => 'Triple( 111.1 )', :word_form => 'triple( field )', :abbrev_form => 'T( F )', :alpha => "TOF");
Formula.create( :base => '111', :offset => '009', :subindex => '0', :ord => '2', :iform => 'Triple( 111.1.a )', :word_form => 'triple( object )', :abbrev_form => 'T( O )', :alpha => "TO-O");
Formula.create( :base => '111', :offset => '018', :subindex => '0', :ord => '3', :iform => '( 111.1 / 70.1 ):->( 111.18:->0.X.X )', :word_form => '( Field / earth ):->( village:->mile )', :abbrev_form => '( F / E):->( V:->M )', :alpha => "FO-EYVYM");
Formula.create( :base => '111', :offset => '018', :subindex => '0', :ord => '1', :iform => '111.1 / 70.1', :word_form => 'Field / earth', :abbrev_form => 'F / E', :alpha => "FO-E");
Formula.create( :base => '111', :offset => '018', :subindex => '0', :ord => '2', :iform => '111.18:->0.X.X', :word_form => 'village:->mile', :abbrev_form => 'V:->M', :alpha => "VYM");
Formula.create( :base => '111', :offset => '030', :subindex => '0', :ord => '1', :iform => '66.2.a / 111.1', :word_form => 'Grass-at-top / field', :abbrev_form => 'GAT / F', :alpha => "GATOF");
Formula.create( :base => '112', :offset => '000', :subindex => '0', :ord => '1', :iform => '112.0', :word_form => 'abstract( "seedling" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '112', :offset => '001', :subindex => '0', :ord => '3', :iform => '{ 112.0 }:->150.0.a', :word_form => '{ seedling }:->shell', :abbrev_form => '{ S }:->S', :alpha => "SYS");
Formula.create( :base => '112', :offset => '001', :subindex => '0', :ord => '1', :iform => '112.1', :word_form => '{"germinating-seed"}', :abbrev_form => 'GS', :alpha => "GS");
Formula.create( :base => '112', :offset => '001', :subindex => 'a', :ord => '1', :iform => '112.1.a', :word_form => '{"cup"}', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '112', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 112.0:->112.1 ) * 178.1', :word_form => '( seedling:->Shell ) * ( bird:<.( tail:long ))', :abbrev_form => '( S:->S ) * ( B:<.( T:L ))', :alpha => "SYSABITIL");
Formula.create( :base => '112', :offset => '002', :subindex => '0', :ord => '1', :iform => '112.1 * 178.1', :word_form => 'Shell * ( bird:<.( tail:long ))', :abbrev_form => 'S * ( B:<.( T:L ))', :alpha => "SABITIL");
Formula.create( :base => '112', :offset => '003', :subindex => '0', :ord => '1', :iform => '89.1.a * ( 112.0:->112.1 )', :word_form => 'Side-hand * ( seedling:->Shell )', :abbrev_form => 'SH * ( S:->S )', :alpha => "SHASYS");
Formula.create( :base => '112', :offset => '004', :subindex => '0', :ord => '1', :iform => ' 52.1 */\ ( 112.0:->112.1 )', :word_form => 'Wood:hollow */\ ( seedling:->Shell )', :abbrev_form => 'W:H */\ ( S:->S )', :alpha => "WIHAO-USYS");
Formula.create( :base => '113', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 113.1.a | 113.1.c )->111.1', :word_form => '( fruit | basket )->field', :abbrev_form => '( F | B )->F', :alpha => "FOBYF");
Formula.create( :base => '113', :offset => '001', :subindex => '0', :ord => '1', :iform => '113.1', :word_form => '{"fruit"}|{"basket"}', :abbrev_form => 'F | B', :alpha => "FOB");
Formula.create( :base => '113', :offset => '001', :subindex => 'a', :ord => '1', :iform => '113.1', :word_form => '{"fruit"}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '113', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Like( 111.1)', :word_form => 'like( field )', :abbrev_form => 'L( F )', :alpha => "LF");
Formula.create( :base => '113', :offset => '001', :subindex => 'c', :ord => '1', :iform => '113.1.c', :word_form => '{"basket"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '113', :offset => '001', :subindex => 'd', :ord => '1', :iform => '113.1.b->111.1', :word_form => '(fruit->Field)', :abbrev_form => '(F->F )', :alpha => "FYF");
Formula.create( :base => '113', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Side-water * (( fruit | basket )->field )', :abbrev_form => 'SW * (( F | B )->F )', :alpha => "SWAFOBYF");
Formula.create( :base => '113', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.1 * (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Tree:->wood ) * (( fruit | basket )->field )', :abbrev_form => '( T:->W ) * (( F | B )->F )', :alpha => "TYWAFOBYF");
Formula.create( :base => '113', :offset => '004', :subindex => '0', :ord => '1', :iform => '89.1.a * (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Side-hand *  (( fruit | basket )->field )', :abbrev_form => 'SH * (( F | B )->F )', :alpha => "SHAFOBYF");
Formula.create( :base => '113', :offset => '005', :subindex => '0', :ord => '1', :iform => '158.1 * (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Vehicle * (( fruit | basket )->field )', :abbrev_form => 'V * (( F | B )->F )', :alpha => "VAFOBYF");
Formula.create( :base => '113', :offset => '006', :subindex => '0', :ord => '1', :iform => '63.1 / (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Roof / (( fruit | basket )->field )', :abbrev_form => 'R / (( F | B )->F )', :alpha => "ROFOBYF");
Formula.create( :base => '113', :offset => '007', :subindex => '0', :ord => '1', :iform => '126.1 * (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Clothing * (( fruit | basket )->field )', :abbrev_form => 'C * (( F | B )->F )', :alpha => "CAFOBYF");
Formula.create( :base => '113', :offset => '008', :subindex => '0', :ord => '1', :iform => '71.11.a / (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Bamboo-at-top / (( fruit | basket )->field )', :abbrev_form => 'BAT / (( F | B )->F )', :alpha => "BATOFOBYF");
Formula.create( :base => '113', :offset => '009', :subindex => '0', :ord => '1', :iform => '41.3.a *\ (( 113.1.a | 113.1.c )->111.1 )', :word_form => 'Stop-and-go *\ (( fruit | basket )->field )', :abbrev_form => 'SAG *\ (( F | B )->F )', :alpha => "SAGAUFOBYF");
Formula.create( :base => '114', :offset => '000', :subindex => '0', :ord => '1', :iform => '114.0', :word_form => 'abstract( "eye" )', :abbrev_form => 'A( E )', :alpha => "AE");
Formula.create( :base => '114', :offset => '001', :subindex => '0', :ord => '2', :iform => '114.1.0:rot', :word_form => 'Eye:rot', :abbrev_form => 'E:R', :alpha => "EIR");
Formula.create( :base => '114', :offset => '001', :subindex => '0', :ord => '1', :iform => 'Rot( 114.1.0 )', :word_form => 'rot( eye )', :abbrev_form => 'R( E )', :alpha => "RO-E");
Formula.create( :base => '114', :offset => '001', :subindex => '0', :ord => '3', :iform => 'Rot:>114.1.0', :word_form => 'Rot:>eye', :abbrev_form => 'R:>E', :alpha => "RO-E");
Formula.create( :base => '114', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 114.0 }', :word_form => '{ eye }', :abbrev_form => '{ E }', :alpha => "E");
Formula.create( :base => '114', :offset => '001', :subindex => '0', :ord => '1', :iform => '114.1.0', :word_form => '{"eye"}', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '114', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 114.1 )', :word_form => 'alt( eye )', :abbrev_form => 'alt( E )', :alpha => "EA");
Formula.create( :base => '114', :offset => '002', :subindex => '0', :ord => '1', :iform => '66.2.a / Rot:>114.1.0', :word_form => 'Grass-at-top / rot:>eye', :abbrev_form => 'GAT / R:>E', :alpha => "GATORO-E");
Formula.create( :base => '114', :offset => '009', :subindex => '0', :ord => '1', :iform => '( Rot:>114.1.0 ) / 11.1', :word_form => '( rot:>eye ) / ( person->legs )', :abbrev_form => '( R:>E ) / ( P->L )', :alpha => "RO-EOPYL");
Formula.create( :base => '114', :offset => '015', :subindex => '0', :ord => '1', :iform => '89.1.d */ ( Rot:>114.1.0 )', :word_form => 'Hand-is-bent  */ ( rot:>eye )', :abbrev_form => 'HIB */ ( R:>E )', :alpha => "HIBAORO-E");
Formula.create( :base => '114', :offset => '016', :subindex => '0', :ord => '1', :iform => '90.1.c */ ( Rot:>114.1.0 )', :word_form => 'Eyebrow */ ( rot:>eye )', :abbrev_form => 'EB */ ( R:>E )', :alpha => "EBAORO-E");
Formula.create( :base => '114', :offset => '020', :subindex => '0', :ord => '1', :iform => '77.1 * ( Rot:>114.1.0 )', :word_form => '( tree:->wood ) * ( rot:>eye )', :abbrev_form => '( T:->W ) * ( R:>E )', :alpha => "TYWARO-E");
Formula.create( :base => '114', :offset => '027', :subindex => '0', :ord => '1', :iform => '( Rot:>114.1.0 )^2', :word_form => '( rot:>eye )^2', :abbrev_form => '( R:>E )^2', :alpha => "RO-E-UT");
Formula.create( :base => '115', :offset => '000', :subindex => '0', :ord => '1', :iform => '115.0', :word_form => '{"book"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '115', :offset => '001', :subindex => '0', :ord => '1', :iform => '115.1', :word_form => '{"book of bamboo strips tied together"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '115', :offset => '001', :subindex => '0', :ord => '2', :iform => '71.0:->( 115.0:<-4.0 )', :word_form => 'bamboo:->( book:<-strips )', :abbrev_form => 'B:->( B:<-S )', :alpha => "BYBIOS");
Formula.create( :base => '115', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 71.0:->( 115.0:<-4.0 )) * 35.1', :word_form => '( bamboo:->( book:<-strips )) * knife-at-right', :abbrev_form => '( B:->( B:<-S )) * KAR', :alpha => "BYBIOSAKAR");
Formula.create( :base => '115', :offset => '002', :subindex => '0', :ord => '1', :iform => '115.1 * 35.1', :word_form => 'Book-of-bamboo-strips * knife-at-right', :abbrev_form => 'BOBS * KAR', :alpha => "BOBSAKAR");
Formula.create( :base => '115', :offset => '003', :subindex => '0', :ord => '1', :iform => '107.1.a * ( 115.1 * 35.1 )', :word_form => 'Pieces-of-jade * ( Book-of-bamboo-strips * knife-at-right ) ', :abbrev_form => 'POJ * ( BOBS * KAR )', :alpha => "POJABOBSAKAR");
Formula.create( :base => '115', :offset => '003', :subindex => '0', :ord => '2', :iform => '107.1.a * (( 71.0:->( 115.0:<-4.0 )) * 35.1)', :word_form => 'Pieces-of-jade * (( bamboo:->( book:<-strips )) * knife-at-right )', :abbrev_form => 'POJ * (( B:->( B:<-S )) * KAR )', :alpha => "POJABYBIOSAKAR");
Formula.create( :base => '115', :offset => '003', :subindex => '0', :ord => '3', :iform => '107.1.a * 115.1', :word_form => 'Pieces-of-jade * Book-of-bamboo-strips', :abbrev_form => 'POJ * BOBS', :alpha => "POJABOBS");
Formula.create( :base => '115', :offset => '003', :subindex => '0', :ord => '4', :iform => '107.1.a * ( 71.0:->( 115.0:<-4.0 ))', :word_form => 'Pieces-of-jade * ( bamboo:->( book:<-strips ))', :abbrev_form => 'POJ * ( B:->( B:<-S ))', :alpha => "POJABYBIOS");
Formula.create( :base => '115', :offset => '004', :subindex => '0', :ord => '1', :iform => '77.1 * 115.1', :word_form => '( tree:->wood ) * Book-of-bamboo-strips', :abbrev_form => '( T:->W ) * BOBS', :alpha => "TYWABOBS");
Formula.create( :base => '115', :offset => '004', :subindex => '0', :ord => '2', :iform => '77.1 * ( 71.0:->( 115.0:<-4.0 ))', :word_form => '( tree:->wood ) * ( bamboo:->( book:<-strips ))', :abbrev_form => '( T:->W ) * ( B:->( B:<-S ))', :alpha => "TYWABYBIOS");
Formula.create( :base => '115', :offset => '005', :subindex => '0', :ord => '1', :iform => '78.1 */ 115.1', :word_form => 'Leaf-of-door */ Book-of-bamboo-strips', :abbrev_form => 'LOD */ BOBS', :alpha => "LODAOBOBS");
Formula.create( :base => '115', :offset => '005', :subindex => '0', :ord => '2', :iform => '78.1 */ ( 71.0:->( 115.0:<-4.0 ))', :word_form => 'Leaf-of-door */ ( bamboo:->( book:<-strips ))', :abbrev_form => 'LOD */ ( B:->( B:<-S ))', :alpha => "LODAOBYBIOS");
Formula.create( :base => '115', :offset => '013', :subindex => '0', :ord => '2', :iform => 'alt( 71.0:->( 115.0:<-4.0 )) / 46.1', :word_form => 'alt( bamboo:->( book:<-strips )) / table', :abbrev_form => 'A( B:->( B:<-S )) / T', :alpha => "ABYBIOSOT");
Formula.create( :base => '115', :offset => '013', :subindex => '0', :ord => '1', :iform => 'Alt( 115.1 ) / 46.1', :word_form => 'alt( Book-of-bamboo-strips ) / table', :abbrev_form => 'A( BOBS ) / T', :alpha => "ABOBSOT");
Formula.create( :base => '115', :offset => '014', :subindex => '0', :ord => '3', :iform => '10.1 / 12.1', :word_form => 'Person / turned-around-person', :abbrev_form => 'P / TAP', :alpha => "POTAP");
Formula.create( :base => '115', :offset => '014', :subindex => '0', :ord => '4', :iform => '10.1 / 12.1', :word_form => 'Person / spinner', :abbrev_form => 'P / S', :alpha => "POS");
Formula.create( :base => '115', :offset => '014', :subindex => '0', :ord => '1', :iform => '44.1 / 115.1', :word_form => 'Gather / Book-of-bamboo-strips', :abbrev_form => 'G / BOBS', :alpha => "GOBOBS");
Formula.create( :base => '115', :offset => '014', :subindex => '0', :ord => '2', :iform => '44.1 / ( 71.0:->( 115.0:<-4.0 ))', :word_form => 'Gather / ( bamboo:->( book:<-strips ))', :abbrev_form => 'G / ( B:->( B:<-S ))', :alpha => "GOBYBIOS");
Formula.create( :base => '115', :offset => '020', :subindex => '0', :ord => '3', :iform => '( 44.1 / 115.1 ) /\ row( 68.1 )', :word_form => '( Gather / book-of-bamboo-strips ) /\ row( openings )', :abbrev_form => '( G / BOBS ) /\ R( O )', :alpha => "GOBOBSOURO-O");
Formula.create( :base => '115', :offset => '020', :subindex => '0', :ord => '4', :iform => '( 44.1 / ( 71.0:->( 115.0:<-4.0 )) /\ row( 68.1 )', :word_form => '( Gather / ( bamboo:->( book:<-strips )) /\ row( openings )', :abbrev_form => '( G / ( B:->( B:<-S ))) /\ R( O )', :alpha => "GOBYBIOSOURO-O");
Formula.create( :base => '115', :offset => '020', :subindex => '0', :ord => '1', :iform => '115.14 /\ row( 68.1 )', :word_form => 'meditate /\ row( openings )', :abbrev_form => 'M /\ R( O )', :alpha => "MOURO-O");
Formula.create( :base => '115', :offset => '020', :subindex => '0', :ord => '2', :iform => '44.1 / row( 68.1 ) / 115.1', :word_form => 'Gather / row( openings ) / book-of-bamboo-strips', :abbrev_form => 'G / R( O ) / BOBS', :alpha => "GORO-O-OBOBS");
Formula.create( :base => '116', :offset => '000', :subindex => '0', :ord => '1', :iform => '116.0', :word_form => 'abstract( "vessel" )', :abbrev_form => 'V', :alpha => "V");
Formula.create( :base => '116', :offset => '000', :subindex => 'a', :ord => '1', :iform => '116.0.a', :word_form => 'abstract( "bowl" )', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '116', :offset => '000', :subindex => 'b', :ord => '1', :iform => '116.0.b', :word_form => 'abstract( "serve" )', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '116', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 116.0 ):(( 116.0.b ):>( 138.0 ):][ )', :word_form => 'Vessel:( serve:>food:][ )', :abbrev_form => 'V:( S:>F:][ )', :alpha => "VISOFI-I");
Formula.create( :base => '116', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 116.0.b ):>( 138.0 ):in( 116.0 )', :word_form => 'serve:>food:in( vessel )', :abbrev_form => 'S:>F:I( V )', :alpha => "SOFI-IV");
Formula.create( :base => '116', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 116.0.b ):>( 138.0 ):][( 116.0 )', :word_form => 'serve:>food:][ vessel', :abbrev_form => 'S:>F:][( V )', :alpha => "SOFI-IV");
Formula.create( :base => '116', :offset => '001', :subindex => '0', :ord => '1', :iform => '116.1', :word_form => '{"serving vessel"}', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '116', :offset => '002', :subindex => '0', :ord => '3', :iform => '116.1 \ 55.1', :word_form => 'Vessel \ ( baby::show:>arms )', :abbrev_form => 'V \( B::S:>A )', :alpha => "VUBASOA");
Formula.create( :base => '116', :offset => '002', :subindex => '0', :ord => '1', :iform => '55.1 / 116.1', :word_form => 'Child / vessel', :abbrev_form => 'C / V', :alpha => "COV");
Formula.create( :base => '116', :offset => '002', :subindex => '0', :ord => '2', :iform => '55.1 / 116.1', :word_form => '( baby::show:>arms ) / vessel', :abbrev_form => '( B::S:>A ) / V', :alpha => "BASOA-AOV");
Formula.create( :base => '116', :offset => '004', :subindex => '0', :ord => '1', :iform => '63.1 /|*| 83.1 / 116.1', :word_form => 'Roof /|*| heart / vessel', :abbrev_form => 'R /|*| H / V', :alpha => "RO-EHOV");
Formula.create( :base => '116', :offset => '009', :subindex => '0', :ord => '1', :iform => 'rotate( 2.21 ) / 116.1', :word_form => 'rotate( water ) / vessel', :abbrev_form => 'R( W) / V', :alpha => "ROWOV");
Formula.create( :base => '116', :offset => '011', :subindex => '0', :ord => '1', :iform => '1.1.c / 116.1', :word_form => 'Dot / vessel', :abbrev_form => 'D / V', :alpha => "DOV");
Formula.create( :base => '117', :offset => '001', :subindex => '0', :ord => '1', :iform => '117.1', :word_form => '{"Offering stand"}', :abbrev_form => 'OT', :alpha => "OT");
Formula.create( :base => '117', :offset => '002', :subindex => '0', :ord => '1', :iform => '54.1 * 117.1', :word_form => 'Woman * Offering-stand', :abbrev_form => 'W * OS', :alpha => "WAOS");
Formula.create( :base => '117', :offset => '003', :subindex => '0', :ord => '1', :iform => '138.1 * 117.1', :word_form => 'Rice * Offering-stand', :abbrev_form => 'R * OS', :alpha => "RAOS");
Formula.create( :base => '117', :offset => '004', :subindex => '0', :ord => '1', :iform => '91.1 * 117.1', :word_form => 'Dog-at-side * Offering-stand', :abbrev_form => 'DAS * OS', :alpha => "DASAOS");
Formula.create( :base => '117', :offset => '005', :subindex => '0', :ord => '1', :iform => '2.21.a * 117.1', :word_form => 'Side-water * Offering-stand', :abbrev_form => 'SW * OS', :alpha => "SWAOS");
Formula.create( :base => '117', :offset => '006', :subindex => '0', :ord => '1', :iform => '68.1 * 117.1', :word_form => 'Mouth * Offering-stand', :abbrev_form => 'M * OS', :alpha => "MAOS");
Formula.create( :base => '117', :offset => '007', :subindex => '0', :ord => '1', :iform => '88.3 * 117.1', :word_form => 'Tooth * Offering-stand', :abbrev_form => 'T * OS', :alpha => "TAOS");
Formula.create( :base => '117', :offset => '008', :subindex => '0', :ord => '1', :iform => '117.1 * 34.1', :word_form => 'Offering-stand * strength', :abbrev_form => 'OS * S', :alpha => "OSAS");
Formula.create( :base => '117', :offset => '010', :subindex => '0', :ord => '1', :iform => '108.1 * 117.1', :word_form => 'Grain * Offering-stand', :abbrev_form => 'G * OS', :alpha => "GAOS");
Formula.create( :base => '117', :offset => '011', :subindex => '0', :ord => '1', :iform => '167.1.a * 117.1', :word_form => '( hill->beta ) * Offering-stand', :abbrev_form => '( H->B ) * OS', :alpha => "HYBAOS");
Formula.create( :base => '117', :offset => '012', :subindex => '0', :ord => '1', :iform => '153.1 * 117.1', :word_form => 'Silk-thread * Offering-stand', :abbrev_form => 'ST * OS', :alpha => "STAOS");
Formula.create( :base => '117', :offset => '012', :subindex => '0', :ord => '3', :iform => '153.1 * 117.1', :word_form => '( thread:->silk ) * Offering-stand', :abbrev_form => '( T:->S ) * OS', :alpha => "TYSAOS");
Formula.create( :base => '117', :offset => '012', :subindex => '0', :ord => '5', :iform => '153.1 * 117.1', :word_form => '( silk:->thread ) * Offering-stand', :abbrev_form => '( S:->T ) * OS', :alpha => "SYTAOS");
Formula.create( :base => '117', :offset => '012', :subindex => '0', :ord => '7', :iform => '153.1 * 117.1', :word_form => '( thread:<-silk ) * Offering-stand', :abbrev_form => '( T:<-S ) * OS', :alpha => "TIOSAOS");
Formula.create( :base => '117', :offset => '013', :subindex => '0', :ord => '1', :iform => '1.46 * 117.1', :word_form => 'Revelation * Offering-stand', :abbrev_form => 'R * OS', :alpha => "RAOS");
Formula.create( :base => '117', :offset => '014', :subindex => '0', :ord => '1', :iform => '68.78 * 117.1', :word_form => 'Speak-a-word * Offering-stand', :abbrev_form => 'SAW * OS', :alpha => "SAWAOS");
Formula.create( :base => '117', :offset => '015', :subindex => '0', :ord => '1', :iform => '63.1 / 72.4 /  1.1.b', :word_form => 'Roof / many / floor', :abbrev_form => 'R / M / F', :alpha => "ROMOF");
Formula.create( :base => '117', :offset => '015', :subindex => '0', :ord => '2', :iform => '63.1 / stack( Top( 80.0:80.0.a )) /  1.1.b', :word_form => 'Roof / stack( Top( moon:crescent )) / floor', :abbrev_form => 'R / S( T( M:C )) / F', :alpha => "ROSOTOMICOF");
Formula.create( :base => '117', :offset => '015', :subindex => '0', :ord => '3', :iform => '63.1 / 117.1', :word_form => 'Roof / Offering-stand', :abbrev_form => 'R / OS', :alpha => "RO-OS");
Formula.create( :base => '117', :offset => '017', :subindex => '0', :ord => '1', :iform => '77.136 */ 117.1', :word_form => 'Sick */ Offering-stand', :abbrev_form => ' S */ OS', :alpha => "SAO-OS");
Formula.create( :base => '118', :offset => '000', :subindex => 'a', :ord => '1', :iform => '118.0.a', :word_form => 'abstract( "wave"  ) ', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '118', :offset => '001', :subindex => '0', :ord => '1', :iform => '118.1', :word_form => '{"Waving-banner"}', :abbrev_form => 'WB', :alpha => "WB");
Formula.create( :base => '118', :offset => '001', :subindex => '0', :ord => '2', :iform => '86.0::118.0.a', :word_form => 'banner::wave', :abbrev_form => 'B::W', :alpha => "BAW");
Formula.create( :base => '118', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 118.1 )', :word_form => 'alt( waving-banner )', :abbrev_form => 'A( WB )', :alpha => "AWB");
Formula.create( :base => '118', :offset => '002', :subindex => '0', :ord => '1', :iform => '118.1 */ alt( 10.7 )', :word_form => 'banner::wave */ alt( follow )', :abbrev_form => 'B::W */ A( F )', :alpha => "BAWAO-AF");
Formula.create( :base => '118', :offset => '002', :subindex => '0', :ord => '2', :iform => '118.1 */ alt( 10.7 )', :word_form => 'banner::wave */ alt( person^2 )', :abbrev_form => 'B::W */ A( P^2 )', :alpha => "BAWAO-APUT");
Formula.create( :base => '118', :offset => '002', :subindex => '0', :ord => '3', :iform => '118.1 */ alt( 10.7 )', :word_form => 'banner::wave */ alt( follow )', :abbrev_form => 'B::W */ A( F )', :alpha => "BAWAO-AF");
Formula.create( :base => '118', :offset => '002', :subindex => '0', :ord => '4', :iform => '118.1 */ alt( 10.7 )', :word_form => 'banner::wave */ alt( person^2 )', :abbrev_form => 'B::W */ A( P^2 )', :alpha => "BAWAO-APUT");
Formula.create( :base => '118', :offset => '003', :subindex => '0', :ord => '1', :iform => '118.1 */ 88.63', :word_form => 'banner::wave */ lower-leg', :abbrev_form => 'B::W */ LL', :alpha => "BAWAOLL");
Formula.create( :base => '118', :offset => '003', :subindex => '0', :ord => '3', :iform => '118.1 */ ( 88.0.a:->88.0.b )', :word_form => 'banner::wave */ ( knee:->roll )', :abbrev_form => 'B::W */ ( K:->R )', :alpha => "BAWAOKYR");
Formula.create( :base => '118', :offset => '003', :subindex => '0', :ord => '5', :iform => '118.1 */ ( 88.63.0:->88.0.b )', :word_form => 'banner::wave */ ( Lower-leg:->roll )', :abbrev_form => 'B::W */ (LL:-> )', :alpha => "BAWAOLLYR");
Formula.create( :base => '118', :offset => '005', :subindex => '0', :ord => '1', :iform => '118.1 */ 32.7', :word_form => 'banner::wave */ arrow', :abbrev_form => 'B::W */ A', :alpha => "BAWA-OA");
Formula.create( :base => '118', :offset => '007', :subindex => '0', :ord => '1', :iform => '118.1 */ 55.1', :word_form => 'banner::wave */ child', :abbrev_form => 'B::W */ C', :alpha => "BAWA-OC");
Formula.create( :base => '118', :offset => '007', :subindex => '0', :ord => '3', :iform => '118.1 */ 55.1', :word_form => 'banner::wave */ ( baby::show:>arm )', :abbrev_form => 'B::W */ ( B::S:>A )', :alpha => "BAWA-OBASOA");
Formula.create( :base => '118', :offset => '009', :subindex => '0', :ord => '1', :iform => '118.1 / ( 2.21 * 55.1 )', :word_form => 'banner::wave / ( water *child )', :abbrev_form => 'B::W / ( W * C )', :alpha => "BAWOWAC");
Formula.create( :base => '118', :offset => '009', :subindex => '0', :ord => '2', :iform => '118.1 / ( 2.21 * 55.1 )', :word_form => 'banner::wave / ( water * ( baby::show:>arm ) )', :abbrev_form => 'B::W / ( W * ( B::S:>A ))', :alpha => "BAWOWABASOA");
Formula.create( :base => '118', :offset => '009', :subindex => '0', :ord => '3', :iform => ' 2.21.a * 118.1 */ 55.1', :word_form => 'Side-water * banner::wave */ child', :abbrev_form => 'SW * B::W */ C', :alpha => "SWABAWAOC");
Formula.create( :base => '118', :offset => '009', :subindex => '0', :ord => '4', :iform => ' 2.21.a * 118.1 */ 55.1', :word_form => 'Side-water * banner::wave */ ( baby::show:>arm )', :abbrev_form => 'SW * B::W */ ( B::S:>A )', :alpha => "SWABAWAOBASOA");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '1', :iform => '118.10', :word_form => '{"crow with raised wing"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '2', :iform => '118.10', :word_form => '{"crow with raised wing"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '3', :iform => '118.10', :word_form => '{"crow with raised wing"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '4', :iform => '118.10', :word_form => '{"crow with raised wing"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '5', :iform => '118.10', :word_form => '{"crow with raised wing"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '6', :iform => '118.10', :word_form => '{"crow with raised wing"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '7', :iform => '178.0.a::169.0.a:>37.0', :word_form => 'crow::raise:>wing', :abbrev_form => 'C::R:>W', :alpha => "CAROW");
Formula.create( :base => '118', :offset => '010', :subindex => '0', :ord => '9', :iform => '178.0.a::169.0.b:>37.0', :word_form => 'crow::spread:>wing', :abbrev_form => 'C::S:>W', :alpha => "CASOW");
Formula.create( :base => '119', :offset => '001', :subindex => '0', :ord => '1', :iform => '119.1', :word_form => '{"sprouting plant"}', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '119', :offset => '001', :subindex => '0', :ord => '2', :iform => '66.0::66.0.a', :word_form => 'plant::sprout', :abbrev_form => 'P::S', :alpha => "PAS");
Formula.create( :base => '119', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * 119.1', :word_form => 'Side-water * plant::sprout', :abbrev_form => 'SW * P::S', :alpha => "SWAPAS");
Formula.create( :base => '119', :offset => '003', :subindex => '0', :ord => '2', :iform => '114.1:<rotate * 119.1', :word_form => 'eye:<Rotate * plant::sprout', :abbrev_form => 'E:<R * P::S', :alpha => "EIRAPAS");
Formula.create( :base => '119', :offset => '003', :subindex => '0', :ord => '1', :iform => 'Rot( 114.1 ) * 119.1', :word_form => 'Rotate( eye ) * plant::sprout', :abbrev_form => 'R( E ) * P::S', :alpha => "ROE-APAS");
Formula.create( :base => '120', :offset => '001', :subindex => '0', :ord => '1', :iform => '2.1:+2.3', :word_form => 'stream:+river', :abbrev_form => 'S:+R', :alpha => "SIR");
Formula.create( :base => '120', :offset => '001', :subindex => '0', :ord => '3', :iform => 'Rot( 2.1 ) #* 2.3', :word_form => 'Rot( stream) #* river', :abbrev_form => 'Rot( S ) #* R', :alpha => "ROSOLAR");
Formula.create( :base => '120', :offset => '001', :subindex => '0', :ord => '5', :iform => 'Rot( 2.3 ) #* 2.3', :word_form => 'Rot( river ) #* river', :abbrev_form => 'Rot( R ) #* R', :alpha => "ROROLAR");
Formula.create( :base => '120', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * ( Rot( 2.1 ) #* 2.3 )', :word_form => 'Side-water * ( Rot( stream) #* river )', :abbrev_form => 'SW * ( Rot( S ) #* R )', :alpha => "SWAROSOLAR");
Formula.create( :base => '120', :offset => '003', :subindex => '0', :ord => '1', :iform => '68.78 * ( Rot( 2.1 ) #* 2.3 )', :word_form => 'Speak-a-word * ( Rot( stream) #* river )', :abbrev_form => 'SAW * ( Rot( S ) #* R )', :alpha => "SAWAROSOLAR");
Formula.create( :base => '120', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Rev( 120.1 )', :word_form => 'rev( tributary )', :abbrev_form => 'R( T )', :alpha => "ROT");
Formula.create( :base => '120', :offset => '004', :subindex => '0', :ord => '2', :iform => 'Rev( 120.1 )', :word_form => 'rev( join )', :abbrev_form => 'R( J )', :alpha => "ROJ");
Formula.create( :base => '120', :offset => '004', :subindex => '0', :ord => '3', :iform => 'Rev( Rot( 2.1 ) #* 2.3 )', :word_form => 'rev( Rot( stream) #* river )', :abbrev_form => 'R( Rot( S ) #* R )', :alpha => "ROROSOLAR");
Formula.create( :base => '120', :offset => '004', :subindex => '0', :ord => '4', :iform => 'Rev( Rot( 2.3 ) #* 2.3 )', :word_form => 'rev( Rot( river ) #* river )', :abbrev_form => 'R( Rot( R ) #* R )', :alpha => "ROROROLAR");
Formula.create( :base => '121', :offset => '000', :subindex => '0', :ord => '1', :iform => '121.0', :word_form => 'Abstract( "bean" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '121', :offset => '001', :subindex => '0', :ord => '2', :iform => '121.0::66.0.a', :word_form => 'Bean::sprout', :abbrev_form => 'B::S', :alpha => "BAS");
Formula.create( :base => '121', :offset => '001', :subindex => '0', :ord => '1', :iform => '121.1', :word_form => '{"bean sprout"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '121', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 121.0::66.0.a ) * 14.1', :word_form => '( Bean::sprout ) * ( hand->again )', :abbrev_form => '( B::S ) * ( H->A )', :alpha => "BASA-HYA");
Formula.create( :base => '121', :offset => '008', :subindex => '0', :ord => '1', :iform => '45.22:<.(B:F) /*|* ( 121.0::66.0.a )', :word_form => 'dagger-ax:<.(blade:flat) /*|* ( Bean::sprout )', :abbrev_form => 'DA:<.(B:F) /*|* ( B::S )', :alpha => "DAIBIFO-EBAS");
Formula.create( :base => '121', :offset => '008', :subindex => '0', :ord => '3', :iform => '45.22:<.(B:F) /*|* ( 121.0::66.0.a )', :word_form => 'dagger-ax:<.(blade:flat) /*|* ( Bean::sprout )', :abbrev_form => 'DA:<.(B:F) /*|* ( B::S )', :alpha => "DAIBIFABAS");
Formula.create( :base => '122', :offset => '000', :subindex => '0', :ord => '1', :iform => '122.0', :word_form => 'Abstract( "tiger" )', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '122', :offset => '000', :subindex => 'a', :ord => '1', :iform => '122.0.a', :word_form => 'abstract("animal skin")', :abbrev_form => 'A( AS )', :alpha => "AAS");
Formula.create( :base => '122', :offset => '000', :subindex => 'b', :ord => '1', :iform => '122.0.b', :word_form => 'Abstract( "striped" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 122.0 ).( 143.0 )', :word_form => 'Tiger.head', :abbrev_form => 'T.H', :alpha => "TEH");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '6', :iform => '( 122.0 ).( 143.0 )', :word_form => 'Tiger.head', :abbrev_form => 'T.H', :alpha => "HOT");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 122.0 ).(( 68.0 ):( 68.0.a ) :* ( 143.0 ))', :word_form => 'Tiger.( mouth:open :* head ) ', :abbrev_form => 'T.( M:O :* H )', :alpha => "TEMIO-AH");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '8', :iform => '( 122.0 ).(( 68.0 ):( 68.0.a ) :* ( 143.0 ))', :word_form => 'Tiger.( mouth:open :* head ) ', :abbrev_form => 'T.( M:O :* H )', :alpha => "MIO-AHOT");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '2', :iform => '(122.0).(122.0.a)', :word_form => 'Tiger.animal-skin', :abbrev_form => 'T.AS', :alpha => "ASOT");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '3', :iform => '(122.0).(122.0.a)', :word_form => 'Tiger.animal-skin', :abbrev_form => 'T.AS', :alpha => "TE-AS");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '1', :iform => '122.1', :word_form => '{"striped fur of tiger"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '122', :offset => '001', :subindex => '0', :ord => '4', :iform => 'top( 122.0 )', :word_form => 'top( Tiger )', :abbrev_form => 'T( T )', :alpha => "TOT");
Formula.create( :base => '122', :offset => '002', :subindex => '0', :ord => '4', :iform => '( 122.0 ).( 143.0  / ( :stack( 11.0.a ) * ( 147.0 )) / 73.0 )', :word_form => 'Tiger.( head / ( :stack( leg ) * body ) / tail )', :abbrev_form => 'T.(( H ) / ( :S( L ) * B ) / T )', :alpha => "TEHOSOLABOT");
Formula.create( :base => '122', :offset => '002', :subindex => '0', :ord => '5', :iform => '( 122.0 ).( 143.0  / ( :stack( 11.0.a ) * ( 147.0 )) / 73.0 )', :word_form => 'Tiger.( head / ( :stack( leg ) * body ) / tail )', :abbrev_form => 'T.(( H ) / ( :S( L ) * B ) / T )', :alpha => "HOSOLABOTOT");
Formula.create( :base => '122', :offset => '002', :subindex => '0', :ord => '6', :iform => '( 122.0 ).(( ( 68.0 ):( 68.0.a ) :* 143.0 ) / ( :stack( 11.0.a ) * ( 147.0 ):( 122.0.b )) / 73.0 )', :word_form => 'Tiger.(( mouth:open :* head ) / ( :stack( leg ) * ( body:striped )) / tail )', :abbrev_form => 'T.(( M:O :* H ) / ( :S( L ) * B:S ) / T )', :alpha => "TEMIO-AHOSOLABISOT");
Formula.create( :base => '122', :offset => '002', :subindex => '0', :ord => '7', :iform => '( 122.0 ).(( ( 68.0 ):( 68.0.a ) :* 143.0 ) / ( :stack( 11.0.a ) * ( 147.0 ):( 122.0.b )) / 73.0 )', :word_form => 'Tiger.(( mouth:open :* head ) / ( :stack( leg ) * ( body:striped )) / tail )', :abbrev_form => 'T.(( M:O :* H ) / ( :S( L ) * B:S ) / T )', :alpha => "MIO-AHOSOLABISOTOT");
Formula.create( :base => '122', :offset => '002', :subindex => '0', :ord => '1', :iform => '(122.0).(122.0.a) */ 11.1', :word_form => 'Tiger.animal-skin */ ( person:->legs)', :abbrev_form => 'T.AS */ (P:->L )', :alpha => "ASOTAOPYL");
Formula.create( :base => '122', :offset => '002', :subindex => '0', :ord => '2', :iform => '(122.0).(122.0.a) */ 11.1', :word_form => 'Tiger.animal-skin */ ( person:->legs)', :abbrev_form => 'T.AS */ (P:->L )', :alpha => "TE-ASAOPYL");
Formula.create( :base => '122', :offset => '002', :subindex => '0', :ord => '3', :iform => '122.1 */ 11.1', :word_form => 'Tiger-skin */ ( person:->legs)', :abbrev_form => 'TS */ (P:->L )', :alpha => "T-SAOPYL");
Formula.create( :base => '122', :offset => '009', :subindex => '0', :ord => '1', :iform => '122.1 */ 111.1.b', :word_form => 'Tiger.animal-skin */ field-of-pottery', :abbrev_form => 'T.AS */ FOP', :alpha => "TE-ASAOFYP");
Formula.create( :base => '122', :offset => '017', :subindex => '0', :ord => '1', :iform => '122.1 */ ( 83.1 \ 143.1 )', :word_form => 'Tiger.animal-skin */ ( Heart \ ( skull [] brain ))', :abbrev_form => 'T.AS */ ( H \ (( S [] B )->F ))', :alpha => "TE-ASAOHUSEB");
Formula.create( :base => '122', :offset => '017', :subindex => '0', :ord => '2', :iform => '122.1 */ (  83.1 \ 111.1 )', :word_form => 'Tiger.animal-skin */ ( Heart \ field )', :abbrev_form => 'T.AS */ ( H \ F )', :alpha => "TE-ASAOHUF");
Formula.create( :base => '122', :offset => '017', :subindex => '0', :ord => '3', :iform => '122.1 */ ( 83.1 \ ( 143.1->111.1 ))', :word_form => 'Tiger.animal-skin */ ( Heart \ (( skull [] brain )->field ))', :abbrev_form => 'T.AS */ ( H \ (( S [] B )->F ))', :alpha => "TE-ASAOHUSEBYF");
Formula.create( :base => '122', :offset => '019', :subindex => '0', :ord => '1', :iform => '122.1 */ 122.19.a', :word_form => 'Tiger.animal-skin */ ( Pierced-object / strength )', :abbrev_form => 'T.AS */ ( PO / S)', :alpha => "TE-ASAOPO-OS");
Formula.create( :base => '122', :offset => '019', :subindex => '0', :ord => '2', :iform => '122.1 */ 122.19.a', :word_form => 'Tiger.animal-skin */ Pierced-object-strength', :abbrev_form => 'T.AS */ POS', :alpha => "TE-ASAOPOS");
Formula.create( :base => '122', :offset => '019', :subindex => 'a', :ord => '1', :iform => '95.1 / 34.1', :word_form => 'Pierced-object / strength', :abbrev_form => 'PO / S', :alpha => "PO-OS");
Formula.create( :base => '122', :offset => '021', :subindex => '0', :ord => '1', :iform => '122.1 */ rotate( 103.1 )', :word_form => 'Tiger.animal-skin */ rotate( claw )', :abbrev_form => 'T.AS */ R( C )', :alpha => "TE-ASAROC");
Formula.create( :base => '122', :offset => '021', :subindex => '0', :ord => '2', :iform => '122.1 */ rev( 14.1.b )', :word_form => 'Tiger.animal-skin  */ rev( grab )', :abbrev_form => 'T.AS  */ R( G )', :alpha => "TE-ASAROG");
Formula.create( :base => '122', :offset => '023', :subindex => '0', :ord => '1', :iform => '122.1 */ alt( 96.15 )', :word_form => 'Tiger.animal-skin */ alt( mound  )', :abbrev_form => 'T.AS */ A( M )', :alpha => "TE-ASAO-AM");
Formula.create( :base => '122', :offset => '023', :subindex => '0', :ord => '2', :iform => '122.1 */ alt( 12.38 / 1.1.b )', :word_form => 'Tiger.animal-skin */ alt( Book-ends / surfac  ', :abbrev_form => 'T.AS */ A( BE / S )', :alpha => "TE-ASAO-ABEOS");
Formula.create( :base => '122', :offset => '023', :subindex => '0', :ord => '3', :iform => '122.1 */ alt( Opposed( reverse( 10.1 )) / 1.1.b )', :word_form => 'Tiger.animal-skin */ alt( opposed( reverse( person )) / surfac  )', :abbrev_form => 'T.AS */ A( O( R( P )) / S )', :alpha => "TE-ASAO-AO-OROPOS");
Formula.create( :base => '122', :offset => '023', :subindex => '0', :ord => '4', :iform => '122.1 */ alt( ( Opposed(  reverse( 10.1 )):~:(96.1) ) / 1.1.b)', :word_form => 'Tiger.animal-skin */ alt( ( opposed( reverse( person ):~:(ax)) / surfac  ', :abbrev_form => 'T.AS */ A(( O( R( P )):~:( A )) /  )', :alpha => "TE-ASAO-AO-OROPILA-AOS");
Formula.create( :base => '123', :offset => '000', :subindex => '0', :ord => '1', :iform => '123.0', :word_form => 'abstract( sheep )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '123', :offset => '000', :subindex => 'a', :ord => '1', :iform => '123.0.a', :word_form => 'abstract( ram )', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '123', :offset => '000', :subindex => 'b', :ord => '1', :iform => '123.0.b', :word_form => 'abstract( lamb )', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '123', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 149.0^2 / 123.0 }', :word_form => '{ Horn^2 :/ sheep }', :abbrev_form => '{ H^2 :/ S }', :alpha => "HUTOS");
Formula.create( :base => '123', :offset => '001', :subindex => '0', :ord => '1', :iform => '123.1', :word_form => '{"sheep with horns"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '123', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'At-top( 123.1 )', :word_form => 'At-top( sheep )', :abbrev_form => 'AT( S )', :alpha => "ATOS");
Formula.create( :base => '123', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'bend( 123.1 )', :word_form => 'bend( sheep )', :abbrev_form => 'B( S )', :alpha => "BOS");
Formula.create( :base => '123', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * 123.1', :word_form => 'Side-water * sheep', :abbrev_form => 'SW * S', :alpha => "SWAS");
Formula.create( :base => '123', :offset => '003', :subindex => '0', :ord => '1', :iform => '10.1.a * 123.1', :word_form => 'Side-person * sheep', :abbrev_form => 'SP * S', :alpha => "SPAS");
Formula.create( :base => '123', :offset => '004', :subindex => '0', :ord => '1', :iform => '123.1 / 12.74', :word_form => 'Sheep /*|* food', :abbrev_form => 'S /*|* F', :alpha => "SO-EF");
Formula.create( :base => '123', :offset => '004', :subindex => '0', :ord => '3', :iform => '123.1.a / 12.74', :word_form => 'Sheep-at-top /*|* food', :abbrev_form => 'SAT /*|* F', :alpha => "SATO-EF");
Formula.create( :base => '123', :offset => '004', :subindex => '0', :ord => '4', :iform => '123.1.b / 12.74', :word_form => 'Bent-sheep /*|* food', :abbrev_form => 'SIB /*|* F', :alpha => "SIBO-EF");
Formula.create( :base => '123', :offset => '004', :subindex => '0', :ord => '2', :iform => 'Top( 123.1 ) / 12.74', :word_form => 'Top( Sheep ) /*|* food', :abbrev_form => 'T( S ) /*|* F', :alpha => "TOSO-EF");
Formula.create( :base => '123', :offset => '004', :subindex => 's', :ord => '1', :iform => '123.1.a / 10.1 /*|* 29.1', :word_form => 'Sheep-at-top / person /*|* divide', :abbrev_form => 'SAT / P /*|* D', :alpha => "SATOPO-ED");
Formula.create( :base => '123', :offset => '004', :subindex => 's', :ord => '2', :iform => '123.1.a / 10.1 /*|* ( 3.1 * 4.1 )', :word_form => 'Sheep-at-top / person /*|* ( fall-left * post )', :abbrev_form => 'SAT / P /*|* ( FL * P )', :alpha => "SATOPO-EFLAP");
Formula.create( :base => '123', :offset => '006', :subindex => '0', :ord => '3', :iform => '123.1 \* 81.1', :word_form => 'Sheep \* Vapor::curl', :abbrev_form => 'S \* V::C', :alpha => "SUAVAC");
Formula.create( :base => '123', :offset => '006', :subindex => '0', :ord => '4', :iform => '123.1 \* 81.1', :word_form => 'Sheep \* Vapor::rise', :abbrev_form => 'S \* V::R', :alpha => "SUAVAR");
Formula.create( :base => '123', :offset => '006', :subindex => '0', :ord => '1', :iform => '81.1 />< 123.1', :word_form => 'Vapor::curl />< sheep', :abbrev_form => 'V::C />< S', :alpha => "VACO-EXAS");
Formula.create( :base => '123', :offset => '006', :subindex => '0', :ord => '2', :iform => '81.1 />< 123.1', :word_form => 'Vapor::rise />< sheep', :abbrev_form => 'V::R />< S', :alpha => "VARO-EXAS");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '3', :iform => '123.1.a / 120.1', :word_form => 'Sheep-at-top / tributary', :abbrev_form => 'SAT / T', :alpha => "SATOT");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '4', :iform => '123.1.a / 120.1', :word_form => 'Sheep-at-top / forever', :abbrev_form => 'SAT / F', :alpha => "SATOF");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '7', :iform => '123.1.a / ( Rot( 2.1 ) #* 2.3 )', :word_form => 'Sheep-at-top /( Rot( stream) #* river )', :abbrev_form => 'SAT / ( Rot( S ) #* R)', :alpha => "SATOROSOLAR");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '8', :iform => '123.1.a / ( Rot( 2.3 ) #* 2.3 )', :word_form => 'Sheep-at-top / ( Rot( river ) #* river )', :abbrev_form => 'SAT / ( Rot( R ) #* R)', :alpha => "SATOROROLAR");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '1', :iform => 'Top( 123.1 ) / 120.1', :word_form => 'Top( sheep ) / tributary', :abbrev_form => 'T( S ) / T', :alpha => "TOSOT");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '2', :iform => 'Top( 123.1 ) / 120.1', :word_form => 'Top( sheep ) / forever', :abbrev_form => 'T( S ) / F', :alpha => "TOSOF");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '5', :iform => 'Top( 123.1 ) / ( Rot( 2.1 ) #* 2.3 )', :word_form => 'Top( sheep ) / ( Rot( stream) #* river )', :abbrev_form => 'T( S ) / ( Rot( S ) #* R)', :alpha => "TOSOROSOLAR");
Formula.create( :base => '123', :offset => '007', :subindex => '0', :ord => '6', :iform => 'Top( 123.1 ) / ( Rot( 2.3 ) #* 2.3 )', :word_form => 'Top( sheep ) /  ( Rot( river ) #* river )', :abbrev_form => 'T( S ) /( Rot( R ) #* R)', :alpha => "TOSOROROLAR");
Formula.create( :base => '123', :offset => '010', :subindex => '0', :ord => '5', :iform => '123.1.a / 83.1', :word_form => 'Sheep-at-top / heart', :abbrev_form => 'SAT / H', :alpha => "SATOH");
Formula.create( :base => '123', :offset => '010', :subindex => '0', :ord => '3', :iform => '83.1 \ Top( 123.1 )', :word_form => 'Heart \ Top( sheep )', :abbrev_form => 'H \ T( S )', :alpha => "HUTOS");
Formula.create( :base => '123', :offset => '010', :subindex => '0', :ord => '7', :iform => ' 83.1 \ 123.1.a', :word_form => 'Heart \ Sheep-at-top', :abbrev_form => 'H \ SAT', :alpha => "HUSAT");
Formula.create( :base => '123', :offset => '010', :subindex => '0', :ord => '1', :iform => 'Top( 123.1 ) / 83.1', :word_form => 'Top( sheep ) / heart', :abbrev_form => 'T( S ) / H', :alpha => "TOSOH");
Formula.create( :base => '123', :offset => '011', :subindex => '0', :ord => '3', :iform => '123.1.a / 54.1', :word_form => 'Sheep-at-top / woman', :abbrev_form => 'SAT / W', :alpha => "SATOW");
Formula.create( :base => '123', :offset => '011', :subindex => '0', :ord => '2', :iform => '54.1 \ Top( 123.1 )', :word_form => 'woman \ Top( sheep )', :abbrev_form => 'W \ T( S )', :alpha => "WUTOS");
Formula.create( :base => '123', :offset => '011', :subindex => '0', :ord => '4', :iform => ' 54.1 \ 123.1.a', :word_form => 'woman \ Sheep-at-top', :abbrev_form => 'W \ SAT', :alpha => "WUSAT");
Formula.create( :base => '123', :offset => '011', :subindex => '0', :ord => '1', :iform => 'Top( 123.1 ) / 54.1', :word_form => 'Top( sheep ) / woman', :abbrev_form => 'T( S ) / W', :alpha => "TOSOW");
Formula.create( :base => '123', :offset => '012', :subindex => '0', :ord => '2', :iform => '123.1.a / 11.1', :word_form => 'Sheep-at-top / ( person:->legs )', :abbrev_form => 'SAT / ( P:->L )', :alpha => "SATOPYL");
Formula.create( :base => '123', :offset => '012', :subindex => '0', :ord => '1', :iform => 'Top( 123.1 ) / 11.1', :word_form => 'Top( sheep ) / ( person:->legs )', :abbrev_form => 'T( S ) / ( P:->L )', :alpha => "TOSOPYL");
Formula.create( :base => '123', :offset => '013', :subindex => '0', :ord => '1', :iform => '68.78 * 123.1', :word_form => 'Speak-a-word * sheep', :abbrev_form => 'SAW * S', :alpha => "SAWAS");
Formula.create( :base => '123', :offset => '014', :subindex => '0', :ord => '1', :iform => '1.46 * 123.1', :word_form => 'Revelation * sheep', :abbrev_form => 'R * S', :alpha => "RAS");
Formula.create( :base => '123', :offset => '015', :subindex => '0', :ord => '1', :iform => '( 123.1<.123.0.a:123.0.c ) * 124.1', :word_form => '( sheep<.tail:bent ) * ( wing.feather:long ):^2', :abbrev_form => '(S<.T:B) * ( W.F:L ):^2', :alpha => "SITIBAFOW'ILUT");
Formula.create( :base => '123', :offset => '015', :subindex => '0', :ord => '2', :iform => '( 123.1<.123.0.b:123.0.a ) * 124.1', :word_form => 'Sheep<.(bend:>tail ) * ( wing.feather:long ):^2', :abbrev_form => 'S<.(B:>T) * ( W.F:L ):^2', :alpha => "SIBOTAFOW'ILUT");
Formula.create( :base => '123', :offset => '016', :subindex => '0', :ord => '1', :iform => '180.1 * 123.1', :word_form => 'fish * sheep', :abbrev_form => 'F * S', :alpha => "FAS");
Formula.create( :base => '123', :offset => '017', :subindex => '0', :ord => '1', :iform => '123.1 /][ 68.78', :word_form => 'Sheep /][ speak-a-word', :abbrev_form => 'S /][ SAW', :alpha => "SOISAW");
Formula.create( :base => '123', :offset => '017', :subindex => '0', :ord => '3', :iform => '123.1 /][ alt( 68.78 )', :word_form => 'Sheep /][ alt( speak-a-word )', :abbrev_form => 'S /][ A( SAW )', :alpha => "SOIASAW");
Formula.create( :base => '123', :offset => '017', :subindex => '0', :ord => '5', :iform => '123.1 /][ alt( 68.78 )', :word_form => 'Sheep /][ alt( speak-a-word )', :abbrev_form => 'S /][ A( SAW )', :alpha => "SOISAWA");
Formula.create( :base => '123', :offset => '017', :subindex => '0', :ord => '7', :iform => '68.78 \*|* 123.1', :word_form => 'Speak-a-word \*|* Sheep', :abbrev_form => 'SAW  \*|* S', :alpha => "SAWU-ES");
Formula.create( :base => '123', :offset => '021', :subindex => '0', :ord => '1', :iform => '123.1 / 39.1', :word_form => 'Sheep / ( person::show:>arms )', :abbrev_form => 'S / ( P::S:>A )', :alpha => "SOPASOA");
Formula.create( :base => '123', :offset => '021', :subindex => '0', :ord => '2', :iform => '123.1 /+ 39.1', :word_form => 'Sheep /+ ( person::show:>arms )', :abbrev_form => 'S /+ ( P::S:>A )', :alpha => "SOIPASOA");
Formula.create( :base => '123', :offset => '021', :subindex => '0', :ord => '3', :iform => '123.1 #/ 39.1', :word_form => 'Sheep #/ ( person::show:>arms )', :abbrev_form => 'S #/ ( P::S:>A )', :alpha => "SOLOPASOA");
Formula.create( :base => '123', :offset => '021', :subindex => '0', :ord => '4', :iform => '123.1.a / 39.1', :word_form => 'Sheep-at-top / ( person::show:>arms )', :abbrev_form => 'SAT / ( P::S:>A )', :alpha => "SATOPASOA");
Formula.create( :base => '123', :offset => '022', :subindex => '0', :ord => '1', :iform => '123.1 / 82.1', :word_form => 'Sheep / fire', :abbrev_form => 'S / F', :alpha => "SOF");
Formula.create( :base => '123', :offset => '022', :subindex => '0', :ord => '2', :iform => '123.1.a / 82.1.a', :word_form => 'Sheep-at-top / Fire-at-bottom', :abbrev_form => 'SAT / FAB', :alpha => "SATOFAB");
Formula.create( :base => '123', :offset => '022', :subindex => '0', :ord => '3', :iform => '123.1.a / train( 1.1.c )', :word_form => 'Sheep-at-top / train( dots )', :abbrev_form => 'SAT / T( D )', :alpha => "SATOTOD");
Formula.create( :base => '124', :offset => '000', :subindex => '0', :ord => '1', :iform => '124.0', :word_form => 'Abstract( "feather" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '124', :offset => '000', :subindex => 'a', :ord => '1', :iform => '124.0.a', :word_form => 'abstract( "long" )', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '124', :offset => '001', :subindex => '0', :ord => '2', :iform => '(( 37.0 ).(124.0 ):(124.0.a ) ):^2', :word_form => ' ( wing.feather:long ):^2', :abbrev_form => '( W.F:L ):^2', :alpha => "FOW'ILUT");
Formula.create( :base => '124', :offset => '001', :subindex => '0', :ord => '1', :iform => '124.1', :word_form => '{"long wing feathers "}', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '124', :offset => '001', :subindex => '0', :ord => '1', :iform => '( 37.0 ).(124.0 ):(124.0.a )', :word_form => 'wing.feather:long', :abbrev_form => 'W.F:L', :alpha => "FOW'IL");
Formula.create( :base => '124', :offset => '002', :subindex => '0', :ord => '1', :iform => '124.1 / 39.21', :word_form => ' (( wing.feather:long ):^2 ) / stand', :abbrev_form => '(( W.F:L ):^2 ) / S', :alpha => "FOW'ILUT'OS");
Formula.create( :base => '124', :offset => '002', :subindex => '0', :ord => '3', :iform => '124.1 / alt( 39.1 / 1.1.b )', :word_form => ' (( wing.feather:long ):^2 ) / alt(( person::show:>arms ) / surface )', :abbrev_form => '(( W.F:L ):^2 ) / alt( B::S:>A / S )', :alpha => "FOWILUT'O-ABASO'A-OS");
Formula.create( :base => '124', :offset => '003', :subindex => '0', :ord => '1', :iform => '124.1 / 76.2', :word_form => ' (( wing.feather:long ):^2 ) / white', :abbrev_form => '(( W.F:L ):^2 ) / W', :alpha => "FOW'ILUT'OW");
Formula.create( :base => '124', :offset => '003', :subindex => '0', :ord => '5', :iform => '124.1 / 76.2', :word_form => ' (( wing.feather:long ):^2 ) / ( sun:->white )', :abbrev_form => '(( W.F:L ):^2 ) / ( S:->W )', :alpha => "FOW'ILUT'OSYW");
Formula.create( :base => '124', :offset => '003', :subindex => '0', :ord => '3', :iform => '76.2 \ 124.1', :word_form => ' White \ (( wing.feather:long ):^2 )', :abbrev_form => 'W \ (( W.F:L ):^2 )', :alpha => "WUFOW'ILUT");
Formula.create( :base => '124', :offset => '003', :subindex => '0', :ord => '7', :iform => '76.2 \ 124.1', :word_form => '( sun:->white ) \ (( wing.feather:long ):^2 )', :abbrev_form => '( S:->W ) \ (( W.F:L ):^2 )', :alpha => "SYWUFOW'ILUT");
Formula.create( :base => '124', :offset => '003', :subindex => 's', :ord => '1', :iform => '124.1.0', :word_form => 'wing.feather:long', :abbrev_form => 'W.F:L', :alpha => "FOW'IL");
Formula.create( :base => '124', :offset => '005', :subindex => '0', :ord => '1', :iform => '124.1 / 162.1', :word_form => '(( wing.feather:long ):^2 ) / ( Bird:<.( tail:short ))', :abbrev_form => '(( W.F:L ):^2 ) / ( B:<.( T:S ))', :alpha => "FOW'ILUTOBIT'IS");
Formula.create( :base => '124', :offset => '013', :subindex => '0', :ord => '1', :iform => '78.1 */ 124.1', :word_form => '( door.leaf ) */ (( wing.feather:long ):^2 )', :abbrev_form => 'D.L */ (( W.F:L ):^2 )', :alpha => "LODAOFOW'ILUT");
Formula.create( :base => '124', :offset => '013', :subindex => '0', :ord => '3', :iform => '78.1 */ 124.1', :word_form => '( door.leaf ) */ (( wing.feather:long ):^2 )', :abbrev_form => 'D.L */ (( W.F:L ):^2 )', :alpha => "DELAOFOW'ILUT");
Formula.create( :base => '124', :offset => '015', :subindex => '0', :ord => '3', :iform => '( 24.9->76.1 ) / 124.1', :word_form => '( Cover-over-head->sun ) / (( wing.feather:long ):^2 )', :abbrev_form => '( COH->S ) / (( W.F:L ):^2 )', :alpha => "COHYSOFOW'ILUT");
Formula.create( :base => '124', :offset => '015', :subindex => '0', :ord => '1', :iform => '24.9 / 124.1', :word_form => 'Cover-over-head / (( wing.feather:long ):^2 )', :abbrev_form => 'COH / (( W.F:L ):^2 )', :alpha => "COHOFOW'ILUT");
Formula.create( :base => '124', :offset => '015', :subindex => '0', :ord => '2', :iform => '76.1 / 124.1', :word_form => 'sun / (( wing.feather:long ):^2 )', :abbrev_form => 'S / (( W.F:L ):^2 )', :alpha => "SOFOW'ILUT");
Formula.create( :base => '124', :offset => '019', :subindex => '0', :ord => '1', :iform => '(( 66.0 ):( 9.0.a ) | Alt( 124.1 )):^2', :word_form => '( plant:fragile | alt(( wing.feather:long )):^2', :abbrev_form => '( P:F | A( W.F:L )):^2', :alpha => "PIFO-AFOW'ILUT");
Formula.create( :base => '125', :offset => '000', :subindex => 'a', :ord => '1', :iform => '125.0.a', :word_form => 'abstract( "insect" )', :abbrev_form => 'A( I )', :alpha => "AI");
Formula.create( :base => '125', :offset => '000', :subindex => 'b', :ord => '1', :iform => '125.0.b', :word_form => 'abstract( "snake" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '125', :offset => '000', :subindex => 'c', :ord => '1', :iform => '125.0.c', :word_form => 'abstract( "worm" )', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '125', :offset => '001', :subindex => '0', :ord => '2', :iform => '125.0.a | 125.0.b ', :word_form => 'Insect | Snake', :abbrev_form => 'I | S', :alpha => "IOS");
Formula.create( :base => '125', :offset => '001', :subindex => '0', :ord => '1', :iform => '125.1', :word_form => '{ "small snake or snake-like insect" }', :abbrev_form => 'I', :alpha => "I");
Formula.create( :base => '125', :offset => '001', :subindex => 'a', :ord => '2', :iform => '((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )', :word_form => '( insect.head->mouth ) / ( Insect | Snake )', :abbrev_form => '( I.H->M ) / ( I | S )', :alpha => "IEHYMO-IOS");
Formula.create( :base => '125', :offset => '001', :subindex => 'a', :ord => '3', :iform => '((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )', :word_form => '( insect.head->mouth ) / ( Insect | Snake )', :abbrev_form => '( I.H->M ) / ( I | S )', :alpha => "HOI-YMO-IOS");
Formula.create( :base => '125', :offset => '001', :subindex => 'a', :ord => '1', :iform => '68.1.d / ( 125.0.a | 125.0.b )', :word_form => 'Insect-head / ( Insect | Snake )', :abbrev_form => 'IH / ( I | S )', :alpha => "IHO-IOS");
Formula.create( :base => '125', :offset => '002', :subindex => '0', :ord => '3', :iform => 'pile( 125.1 )', :word_form => 'pile( Insect-snake )', :abbrev_form => 'P( IS )', :alpha => "POIS");
Formula.create( :base => '125', :offset => '002', :subindex => '0', :ord => '1', :iform => 'Triangle( 125.1 )', :word_form => 'Triangle( Insect-snake )', :abbrev_form => 'T( IS )', :alpha => "TOIS");
Formula.create( :base => '125', :offset => '002', :subindex => 's', :ord => '1', :iform => '125.1', :word_form => 'Insect-snake', :abbrev_form => 'IS', :alpha => "IS");
Formula.create( :base => '125', :offset => '004', :subindex => '0', :ord => '9', :iform => '114.1.0 / 18.1 />< 125.1', :word_form => 'Eye / person-at-top />< insect-snake', :abbrev_form => 'E / PAT />< IS', :alpha => "EOPATO-EXA-IS");
Formula.create( :base => '125', :offset => '004', :subindex => '0', :ord => '3', :iform => '125.1 \* 125.4.a', :word_form => 'Insect-snake \* Silkworm', :abbrev_form => 'IS \* SW', :alpha => "ISUASW");
Formula.create( :base => '125', :offset => '004', :subindex => '0', :ord => '7', :iform => '125.1 \* 125.4.a', :word_form => 'Insect-snake \* ( worm::makes:>silk )', :abbrev_form => 'IS \* ( W::M:>S )', :alpha => "ISUAWAMOS");
Formula.create( :base => '125', :offset => '004', :subindex => '0', :ord => '1', :iform => '125.4.a />< 125.1', :word_form => 'Silkworm />< insect-snake', :abbrev_form => 'SW />< IS', :alpha => "SWOEXA-IS");
Formula.create( :base => '125', :offset => '004', :subindex => '0', :ord => '5', :iform => '125.4.a />< 125.1', :word_form => '( worm::makes:>silk  />< insect-snake', :abbrev_form => '( W::M:>S ) />< IS', :alpha => "WAMOSO-EXA-IS");
Formula.create( :base => '125', :offset => '004', :subindex => 'a', :ord => '2', :iform => '( 125.0.c )::( 153.0.c ):>( 153.0.b )', :word_form => 'worm::makes:>silk', :abbrev_form => 'W::M:>S', :alpha => "WAMOS");
Formula.create( :base => '125', :offset => '004', :subindex => 'a', :ord => '1', :iform => '125.4.a', :word_form => '{ "silkworm" }', :abbrev_form => 'SW', :alpha => "SW");
Formula.create( :base => '125', :offset => '013', :subindex => '0', :ord => '2', :iform => '( 125.1 ):/( 178.0.b )', :word_form => 'Insect-snake:/ tail', :abbrev_form => 'IS:/T', :alpha => "ISIOT");
Formula.create( :base => '125', :offset => '013', :subindex => '0', :ord => '3', :iform => '( 125.1 ):/:( 178.0.b )', :word_form => 'Insect-snake:/:( tail )', :abbrev_form => 'IS:/:( T )', :alpha => "ISIOT");
Formula.create( :base => '125', :offset => '013', :subindex => '0', :ord => '4', :iform => '( 125.1 )::( ):/:( 178.0.b )', :word_form => 'Insect-snake::rises:/:( tail )', :abbrev_form => 'IS::(R):/:( T )', :alpha => "ISARIOT");
Formula.create( :base => '125', :offset => '013', :subindex => '0', :ord => '5', :iform => '63.1 / ( 12.1 | 13.1 )', :word_form => 'Roof / ( spoon | spin | flip )', :abbrev_form => 'R / ( S | S | F )', :alpha => "ROSOSOF");
Formula.create( :base => '125', :offset => '013', :subindex => '0', :ord => '1', :iform => 'Upright( 125.1 )', :word_form => 'upright( insect-snake )', :abbrev_form => 'UR( IS )', :alpha => "URIS");
Formula.create( :base => '126', :offset => '001', :subindex => '0', :ord => '1', :iform => '126.1', :word_form => '{"robe"}', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '126', :offset => '001', :subindex => 'a', :ord => '2', :iform => '66.2.a  / base( 126.1)', :word_form => 'Grass / base( clothes)', :abbrev_form => 'G / BOC', :alpha => "GOBOC");
Formula.create( :base => '126', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Like( 126.1)', :word_form => 'like( clothing)', :abbrev_form => 'G', :alpha => "G");
Formula.create( :base => '126', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a * 126.1', :word_form => 'Person-at-side * clothing', :abbrev_form => 'PAC * C', :alpha => "PACAC");
Formula.create( :base => '126', :offset => '003', :subindex => '0', :ord => '1', :iform => '126.1 / (( 23.1 *|*/+ 32.1 / 68.1 ) | 23.54.a )', :word_form => 'Clothing / (( space *|*/+ go-in / mouth ) | window )', :abbrev_form => 'C / (( S *|*/+ GI / M ) | W )', :alpha => "COSEO-I'GIOMOW");
Formula.create( :base => '126', :offset => '003', :subindex => '0', :ord => '3', :iform => '126.1 / (( 23.1 *|*/ 29.1 / 68.1 ) | 23.54.a )', :word_form => 'Clothing / (( space *|*/ divide / mouth ) | window )', :abbrev_form => 'C / (( S *|*/ D / M ) | W )', :alpha => "COSEODOMOW");
Formula.create( :base => '126', :offset => '003', :subindex => '0', :ord => '5', :iform => '126.1 / ( 23.1 *|*/+ 32.1 / 68.1 )', :word_form => 'Clothing / ( space *|*/+ go-in / mouth )', :abbrev_form => 'C / ( S *|*/+ GI / M )', :alpha => "COSEO-I'GIOM");
Formula.create( :base => '126', :offset => '003', :subindex => '0', :ord => '7', :iform => '126.1 / ( 23.1 *|*/ 29.1 / 68.1 )', :word_form => 'Clothing / ( space *|*/ divide / mouth )', :abbrev_form => 'C / ( S *|*/ D / M )', :alpha => "COSEODOM");
Formula.create( :base => '126', :offset => '003', :subindex => '0', :ord => '9', :iform => '126.1 / 23.54.a', :word_form => 'Clothing / window', :abbrev_form => 'C / W', :alpha => "COW");
Formula.create( :base => '126', :offset => '003', :subindex => '0', :ord => '11', :iform => '126.1 / 23.54', :word_form => 'Clothing / stutter', :abbrev_form => 'C / S', :alpha => "COS");
Formula.create( :base => '126', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Explode( 126.1 ) /\ 68.1', :word_form => 'Explode( clothing ) /\ mouth', :abbrev_form => 'E( C ) /\ M', :alpha => "EOCO-UM");
Formula.create( :base => '126', :offset => '005', :subindex => '0', :ord => '1', :iform => 'Explode( 126.1 ) /\ ( 90.1:^2)', :word_form => 'Explode( clothing ) /\ ( Fur :^2)', :abbrev_form => 'E( C ) /\ ( F:^2)', :alpha => "EOCO-UFUT");
Formula.create( :base => '126', :offset => '005', :subindex => '0', :ord => '3', :iform => 'Explode( 126.1 ) /\ alt( 90.1:^2)', :word_form => 'Explode( clothing ) /\ alt( Fur :^2)', :abbrev_form => 'E( C ) /\ A( F:^2)', :alpha => "EOCO-UAFUT");
Formula.create( :base => '126', :offset => '005', :subindex => '0', :ord => '4', :iform => 'Explode( 126.1 ) /\ ( 68.1 + 1.1.a )', :word_form => 'Explode( clothing ) /\ ( mouth + bar )', :abbrev_form => 'E( C ) /\ ( M + B )', :alpha => "EOCO-U'MIB");
Formula.create( :base => '126', :offset => '005', :subindex => '0', :ord => '5', :iform => 'Explode( 126.1 ) /\ ( 1.1.a + 68.1 )', :word_form => 'Explode( clothing ) /\ ( bar + mouth )', :abbrev_form => 'E( C ) /\ ( B + M )', :alpha => "EOCO-U'BIM ");
Formula.create( :base => '126', :offset => '007', :subindex => '0', :ord => '1', :iform => '59.36 / base( 126.1 )', :word_form => 'Sprout-fetus-or-shuttle / base( clothing )', :abbrev_form => 'SFOS / B( C )', :alpha => "S-FOSOBOC");
Formula.create( :base => '126', :offset => '007', :subindex => '0', :ord => '2', :iform => '((66.1 / 59.1) | 59.36.a / base( 126.1 )', :word_form => '(( sprout / fetus ) | shuttle / base( clothing )', :abbrev_form => '(( S / F) | S / B( C )', :alpha => "SOFOOBOC");
Formula.create( :base => '126', :offset => '007', :subindex => '0', :ord => '3', :iform => '70.1 / 68.1 / base( 126.1 )', :word_form => 'Earth / mouth / base( clothing )', :abbrev_form => 'E / M / B( C )', :alpha => "EOMOBOC");
Formula.create( :base => '126', :offset => '014', :subindex => '0', :ord => '1', :iform => '90.1 / 126.1', :word_form => 'Fur / clothing', :abbrev_form => 'F / C', :alpha => "FOC");
Formula.create( :base => '126', :offset => '014', :subindex => '0', :ord => '3', :iform => 'Alt( 90.1 ) / base( 126.1 )', :word_form => 'Alt( Fur ) / base( clothing )', :abbrev_form => 'A( F ) / B( C )', :alpha => "AOFOBOC");
Formula.create( :base => '126', :offset => '014', :subindex => '0', :ord => '7', :iform => 'Alt( 90.1 ) #/ 126.1', :word_form => 'Alt( Fur ) #/ clothing', :abbrev_form => 'A( F ) #/ C', :alpha => "AOFOLOC");
Formula.create( :base => '126', :offset => '014', :subindex => '0', :ord => '5', :iform => 'explode( 126.1 ) /\ Alt( 90.1 )', :word_form => 'explode( clothing ) /\ Alt( Fur )', :abbrev_form => 'E( C ) /\ A( F )', :alpha => "ECO-UAF");
Formula.create( :base => '126', :offset => '014', :subindex => '0', :ord => '9', :iform => 'explode( 126.1 ) /\ top( 90.1 )', :word_form => 'explode( clothing ) /\ top( Fur )', :abbrev_form => 'E( C ) /\ T( F )', :alpha => "ECO-U'TOF");
Formula.create( :base => '126', :offset => '014', :subindex => '0', :ord => '11', :iform => 'Explode( 126.1 ) /\ 70.1', :word_form => 'explode( clothing ) /\ earth', :abbrev_form => 'E( C ) /\ E', :alpha => "ECO-UE");
Formula.create( :base => '126', :offset => '018', :subindex => '0', :ord => '5', :iform => '1.1.c / 1.1.a / 10.7 / 31.1', :word_form => 'Dot / dash / follow / ten', :abbrev_form => 'D / D / F / T', :alpha => "DODOFOT");
Formula.create( :base => '126', :offset => '018', :subindex => '0', :ord => '7', :iform => '1.1.c / 1.1.a / 10.7 / 31.1', :word_form => 'Dot / bar / follow / ten', :abbrev_form => 'D / B / F / T', :alpha => "DOBOFOT");
Formula.create( :base => '126', :offset => '018', :subindex => '0', :ord => '9', :iform => '1.1.c / 1.1.a / 10.7 / 31.1', :word_form => 'Dot / dash / ( person:^2 ) / ten', :abbrev_form => 'D / D / ( P:^2 ) / T', :alpha => "DODOPUTOT'");
Formula.create( :base => '126', :offset => '018', :subindex => '0', :ord => '11', :iform => '1.1.c / 1.1.a / 10.7 / 31.1', :word_form => 'Dot / bar / ( person:^2 ) / ten', :abbrev_form => 'D / B /  ( P:^2 ) / T', :alpha => "DOBOPUTOT'");
Formula.create( :base => '126', :offset => '018', :subindex => '0', :ord => '1', :iform => 'Alt( 126.1 ) /+ 1.1.a', :word_form => 'Alt( clothing ) /+ bar', :abbrev_form => 'AC /+ B', :alpha => "ACOIB");
Formula.create( :base => '126', :offset => '018', :subindex => '0', :ord => '3', :iform => 'Alt( 126.1 ) /+ 1.1.a', :word_form => 'Alt( clothing ) /+ dash', :abbrev_form => 'AC /+ D', :alpha => "ACOID");
Formula.create( :base => '127', :offset => '000', :subindex => '0', :ord => '1', :iform => '127.0', :word_form => 'abstract( "tortoise" )', :abbrev_form => '', :alpha => "");
Formula.create( :base => '127', :offset => '000', :subindex => 'a', :ord => '1', :iform => '127.0.a', :word_form => 'abstract( "crack" )', :abbrev_form => '', :alpha => "");
Formula.create( :base => '127', :offset => '001', :subindex => '0', :ord => '1', :iform => 'Opposed( ::( 127.0.a ):>( 127.0 ).(150.0.a ))', :word_form => 'Opposed( ::crack:>tortoise.shell )', :abbrev_form => 'O( ::C:>T.S )', :alpha => "OCOTES");
Formula.create( :base => '127', :offset => '001', :subindex => '0', :ord => '2', :iform => 'Opposed( ::( 127.0.a ):>( 127.0 ).(150.0.a ))', :word_form => 'Opposed( ::crack:>tortoise.shell )', :abbrev_form => 'O( ::C:>T.S )', :alpha => "OCOSOT");
Formula.create( :base => '127', :offset => '001', :subindex => '0', :ord => '3', :iform => 'Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'Opposed( tortoise.shell.crack )', :abbrev_form => 'O( T.S.C )', :alpha => "OTESEC");
Formula.create( :base => '127', :offset => '001', :subindex => '0', :ord => '4', :iform => 'Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'Opposed( tortoise.shell.crack )', :abbrev_form => 'O( T.S.C )', :alpha => "OCOSOT");
Formula.create( :base => '127', :offset => '001', :subindex => '0', :ord => '5', :iform => 'Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'O( C:][:( T.S ))', :alpha => "OCI-I'TES");
Formula.create( :base => '127', :offset => '001', :subindex => '0', :ord => '6', :iform => 'Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'O( C:][:( T.S ))', :alpha => "OCI-I'SOT");
Formula.create( :base => '127', :offset => '002', :subindex => '0', :ord => '1', :iform => '41.3 *\ 127.1', :word_form => 'Stop-and-go *\ omen', :abbrev_form => 'SAG *\ O', :alpha => "SAGA-U'O");
Formula.create( :base => '127', :offset => '002', :subindex => '0', :ord => '2', :iform => '41.3 *\ Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'Stop-and-go *\ Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'SAG *\ O( C:][:( T.S )', :alpha => "SAGA-U'OCI-I'TES");
Formula.create( :base => '127', :offset => '002', :subindex => '0', :ord => '3', :iform => '41.3 *\ Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'Stop-and-go *\ Opposed( tortoise.shell.crack )', :abbrev_form => 'SAG *\ O( T.S.C )', :alpha => "SAGA-U'OCOSOT");
Formula.create( :base => '127', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.1 * 127.1', :word_form => '( tree:->wood ) * omen', :abbrev_form => '( T:->W ) * O', :alpha => "TYWA-O");
Formula.create( :base => '127', :offset => '003', :subindex => '0', :ord => '2', :iform => '77.1 * Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => '( tree:->wood ) * Opposed( crack:][:( tortoise.shell ))', :abbrev_form => '( T:->W ) * O( C:][:( T.S ))', :alpha => "TYWA-OCI-I'TES");
Formula.create( :base => '127', :offset => '003', :subindex => '0', :ord => '3', :iform => '77.1 * Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => '( tree:->wood ) * Opposed( tortoise.shell.crack )', :abbrev_form => '( T:->W ) * O( T.S.C )', :alpha => "TYWA-OCOSOT");
Formula.create( :base => '127', :offset => '004', :subindex => '0', :ord => '1', :iform => '89.1.a *\ 127.1', :word_form => 'Side-hand *\ omen', :abbrev_form => 'SH *\ O', :alpha => "SHA-U'O");
Formula.create( :base => '127', :offset => '004', :subindex => '0', :ord => '2', :iform => '89.1.a *\ Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'Side-hand *\ Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'SH *\ O( C:][:( T.S ))', :alpha => "SHA-U'OCI-I'TES");
Formula.create( :base => '127', :offset => '004', :subindex => '0', :ord => '3', :iform => '89.1.a *\ Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'Side-hand *\ Opposed( tortoise.shell.crack )', :abbrev_form => 'SH *\ O( T.S.C )', :alpha => "SHA-U'OCOSOT");
Formula.create( :base => '127', :offset => '004', :subindex => '0', :ord => '4', :iform => '89.1.a *\ 127.1', :word_form => 'Side-hand *\ omen', :abbrev_form => 'SH *\ O', :alpha => "SHA-U'O");
Formula.create( :base => '127', :offset => '004', :subindex => '0', :ord => '5', :iform => '89.1.a *\ Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'Side-hand *\ Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'SH *\ O( C:][:( T.S ))', :alpha => "SHA-U'OCI-I'TES");
Formula.create( :base => '127', :offset => '004', :subindex => '0', :ord => '6', :iform => '89.1.a *\ Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'Side-hand *\ Opposed( tortoise.shell.crack )', :abbrev_form => 'SH *\ O( T.S.C )', :alpha => "SHA-U'OCOSOT");
Formula.create( :base => '127', :offset => '005', :subindex => '0', :ord => '1', :iform => '63.2 / 127.1', :word_form => 'Cave / omen', :abbrev_form => 'C / O', :alpha => "CO-O");
Formula.create( :base => '127', :offset => '005', :subindex => '0', :ord => '2', :iform => '63.2 / Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'Cave / Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'C / O( C:][:( T.S ))', :alpha => "CO-OCI-I'TES");
Formula.create( :base => '127', :offset => '005', :subindex => '0', :ord => '3', :iform => '63.2 / Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'Cave / Opposed( tortoise.shell.crack )', :abbrev_form => 'C / O( T.S.C )', :alpha => "CO-OCOSOT");
Formula.create( :base => '127', :offset => '006', :subindex => '0', :ord => '2', :iform => '(( 88.0.c ->68.1.a ) / 88.1 ) * 127.1', :word_form => '(( leg->object ) / foot ) * omen', :abbrev_form => '(( L->O ) / S ) * O', :alpha => "LYO-OSA-O");
Formula.create( :base => '127', :offset => '006', :subindex => '0', :ord => '3', :iform => '(( 88.0.c ->68.1.a ) / 88.1 ) * Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => '(( leg->object ) / foot ) * Opposed( crack:][:( tortoise.shell ))', :abbrev_form => '(( L->O ) / S ) * O( C:][:( T.S ))', :alpha => "LYO-OSA-OCI-I'TES");
Formula.create( :base => '127', :offset => '006', :subindex => '0', :ord => '4', :iform => '(( 88.0.c ->68.1.a ) / 88.1 ) * Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => '(( leg->object ) / foot ) * Opposed( tortoise.shell.crack )', :abbrev_form => '(( L->O ) / S ) * O( T.S.C )', :alpha => "LYO-OSA-OCOSOT");
Formula.create( :base => '127', :offset => '006', :subindex => '0', :ord => '1', :iform => '88.60 * 127.1', :word_form => 'Foot * omen', :abbrev_form => 'F * O', :alpha => "FAO");
Formula.create( :base => '127', :offset => '007', :subindex => '0', :ord => '1', :iform => 'Rot( 114.1.0 ) * 127.1', :word_form => 'rot( eye )* omen', :abbrev_form => 'R( E ) * O', :alpha => "RO-E'A-O");
Formula.create( :base => '127', :offset => '007', :subindex => '0', :ord => '2', :iform => 'Rot( 114.1.0 ) * Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'rot( eye )* Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'R( E ) * ( T:->W ) * O( C:][:( T.S ))', :alpha => "RO-E'A-OCI-I'TES");
Formula.create( :base => '127', :offset => '007', :subindex => '0', :ord => '3', :iform => 'Rot( 114.1.0 ) * Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'rot( eye )* Opposed( tortoise.shell.crack )', :abbrev_form => 'R( E ) * O( T.S.C )', :alpha => "RO-E'A-OCOSOT");
Formula.create( :base => '127', :offset => '008', :subindex => '0', :ord => '1', :iform => '54.1 * 127.1', :word_form => 'woman * omen', :abbrev_form => 'W * O', :alpha => "WA-O");
Formula.create( :base => '127', :offset => '008', :subindex => '0', :ord => '2', :iform => '54.1 * Opposed(( 127.0.a ):][:(( 127.0 ).(150.0.a )))', :word_form => 'woman * Opposed( crack:][:( tortoise.shell ))', :abbrev_form => 'W * O( C:][:( T.S ))', :alpha => "WA-OCI-I'TES");
Formula.create( :base => '127', :offset => '008', :subindex => '0', :ord => '3', :iform => '54.1 * Opposed(( 127.0 ).(150.0.a ).(127.0.a ))', :word_form => 'woman * Opposed( tortoise.shell.crack )', :abbrev_form => 'W * O( T.S.C )', :alpha => "WA-OCOSOT");
Formula.create( :base => '128', :offset => '000', :subindex => 'a', :ord => '1', :iform => '128.0.a', :word_form => 'abstract( "dive" )', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '128', :offset => '001', :subindex => '0', :ord => '5', :iform => '1.1.a / 19.1 / 70.1', :word_form => 'Dash / cocoon / earth ', :abbrev_form => 'D / C / E', :alpha => "DOCO-E");
Formula.create( :base => '128', :offset => '001', :subindex => '0', :ord => '1', :iform => '(178.0 )::( 128.0.a):->:(1.1.b )', :word_form => 'bird::dive:->:( ground )', :abbrev_form => 'B::D:->:( G )', :alpha => "BADI-IG");
Formula.create( :base => '128', :offset => '001', :subindex => '0', :ord => '3', :iform => '(178.0 )::( 128.0.a):,:(1.1.b )', :word_form => 'bird::dive:,:( ground )', :abbrev_form => 'B::D:,:( G )', :alpha => "BADI-AG");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '5', :iform => '10.105 >< ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'hobble >< ( bird::dive:->:( ground ))', :abbrev_form => 'H >< ( B::D:->:( G ))', :alpha => "HEXABADI-IG");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '6', :iform => '10.105 >< ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'hobble >< ( bird::dive:,:( ground ))', :abbrev_form => 'H >< ( B::D:,:( G ))', :alpha => "HEXABADI-AG");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '7', :iform => '10.105 >< ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'hobble >< ( bird::dive:->:( ground ))', :abbrev_form => 'H >< ( B::D:->:( G ))', :alpha => "HEXABADI-IG");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '8', :iform => '10.105 >< ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'hobble >< ( bird::dive:,:( ground ))', :abbrev_form => 'H >< ( B::D:,:( G ))', :alpha => "HEXABADI-AG");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '1', :iform => '((178.0 )::( 128.0.a):->:(1.1.b )) * 10.105', :word_form => '( bird::dive:->:( ground )) * hobble', :abbrev_form => '( B::D:->:( G )) * H', :alpha => "BADI-IGAH");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '2', :iform => '((178.0 )::( 128.0.a):,:(1.1.b )) * 10.105', :word_form => '( bird::dive:,:( ground )) * hobble', :abbrev_form => '( B::D:,:( G )) * H', :alpha => "BADI-AGAH");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '3', :iform => '((178.0 )::( 128.0.a):->:(1.1.b )) * 10.105', :word_form => '( bird::dive:->:( ground )) * hobble', :abbrev_form => '( B::D:->:( G )) * H', :alpha => "BADI-IGAH");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '4', :iform => '((178.0 )::( 128.0.a):,:(1.1.b )) * 10.105', :word_form => '( bird::dive:,:( ground )) * hobble', :abbrev_form => '( B::D:,:( G )) * H', :alpha => "BADI-AGAH");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '9', :iform => '((178.0 )::( 128.0.a):->:(1.1.b )) * 26.2', :word_form => '( bird::dive:->:( ground )) * tap', :abbrev_form => '( B::D:->:( G )) * T', :alpha => "BADI-I'GAT");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '10', :iform => '((178.0 )::( 128.0.a):,:(1.1.b )) * 26.2', :word_form => '( bird::dive:,:( ground )) * tap', :abbrev_form => '( B::D:,:( G )) * T', :alpha => "BADI-A'GAT");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '11', :iform => '((178.0 )::( 128.0.a):->:(1.1.b )) * 26.2', :word_form => '( bird::dive:->:( ground )) * tap', :abbrev_form => '( B::D:->:( G )) * T', :alpha => "BADI-I'GAT");
Formula.create( :base => '128', :offset => '002', :subindex => '0', :ord => '12', :iform => '((178.0 )::( 128.0.a):,:(1.1.b )) * 26.2', :word_form => '( bird::dive:,:( ground )) * tap', :abbrev_form => '( B::D:,:( G )) * T', :alpha => "BADI-A'GAT");
Formula.create( :base => '128', :offset => '004', :subindex => '0', :ord => '1', :iform => '63.2 / ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Cave / ( bird::dive:->:( ground )) ', :abbrev_form => 'C / ( B::D:->:( G ))', :alpha => "COBADI-IG");
Formula.create( :base => '128', :offset => '004', :subindex => '0', :ord => '2', :iform => '63.2 / ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Cave / ( bird::dive:,:( ground )) ', :abbrev_form => 'C / ( B::D:,:( G ))', :alpha => "COBADI-AG");
Formula.create( :base => '128', :offset => '005', :subindex => '0', :ord => '1', :iform => '77.1 * ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => '( tree:->wood ) * ( bird::dive:->:( ground )) ', :abbrev_form => '( T:->W ) * ( B::D:->:( G ))', :alpha => "TYWABADI-IG");
Formula.create( :base => '128', :offset => '005', :subindex => '0', :ord => '2', :iform => '77.1 * ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => '( tree:->wood ) * ( bird::dive:,:( ground )) ', :abbrev_form => '( T:->W ) * ( B::D:,:( G ))', :alpha => "TYWABADI-AG");
Formula.create( :base => '128', :offset => '006', :subindex => '0', :ord => '1', :iform => '158.1 * ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Vehicle * ( bird::dive:->:( ground )) ', :abbrev_form => 'V * ( B::D:->:( G ))', :alpha => "VABADI-IG");
Formula.create( :base => '128', :offset => '006', :subindex => '0', :ord => '2', :iform => '158.1 * ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Vehicle * ( bird::dive:,:( ground )) ', :abbrev_form => 'V * ( B::D:,:( G ))', :alpha => "VABADI-AG");
Formula.create( :base => '128', :offset => '006', :subindex => '0', :ord => '3', :iform => '158.1 * ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'cart * ( bird::dive:->:( ground )) ', :abbrev_form => 'C * ( B::D:->:( G ))', :alpha => "CABADI-IG");
Formula.create( :base => '128', :offset => '006', :subindex => '0', :ord => '4', :iform => '158.1 * ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'cart * ( bird::dive:,:( ground )) ', :abbrev_form => 'C * ( B::D:,:( G ))', :alpha => "CABADI-AG");
Formula.create( :base => '128', :offset => '007', :subindex => '0', :ord => '1', :iform => '54.1 * ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Woman * ( bird::dive:->:( ground )) ', :abbrev_form => 'W * ( B::D:->:( G ))', :alpha => "WABADI-IG");
Formula.create( :base => '128', :offset => '007', :subindex => '0', :ord => '2', :iform => '54.1 * ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Woman * ( bird::dive:,:( ground )) ', :abbrev_form => 'W * ( B::D:,:( G ))', :alpha => "WABADI-AG");
Formula.create( :base => '128', :offset => '007', :subindex => '0', :ord => '3', :iform => '54.1 * ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Woman * ( bird::dive:->:( ground )) ', :abbrev_form => 'W * ( B::D:->:( G ))', :alpha => "WABADI-IG");
Formula.create( :base => '128', :offset => '007', :subindex => '0', :ord => '4', :iform => '54.1 * ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Woman * ( bird::dive:,:( ground )) ', :abbrev_form => 'W * ( B::D:,:( G ))', :alpha => "WABADI-AG");
Formula.create( :base => '128', :offset => '007', :subindex => 's', :ord => '1', :iform => '10.1.a * ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Side-person * ( bird::dive:->:( ground )) ', :abbrev_form => 'SP * ( B::D:->:( G ))', :alpha => "SPABADI-IG");
Formula.create( :base => '128', :offset => '007', :subindex => 's', :ord => '2', :iform => '10.1.a * ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Side-person * ( bird::dive:,:( ground )) ', :abbrev_form => 'SP * ( B::D:,:( G ))', :alpha => "SPABADI-AG");
Formula.create( :base => '128', :offset => '007', :subindex => 's', :ord => '3', :iform => '10.1.a * ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Side-person * ( bird::dive:->:( ground )) ', :abbrev_form => 'SP * ( B::D:->:( G ))', :alpha => "SPABADI-IG");
Formula.create( :base => '128', :offset => '007', :subindex => 's', :ord => '4', :iform => '10.1.a * ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Side-person * ( bird::dive:,:( ground )) ', :abbrev_form => 'SP * ( B::D:,:( G ))', :alpha => "SPABADI-AG");
Formula.create( :base => '128', :offset => '008', :subindex => '0', :ord => '1', :iform => '63.1 / ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'roof / ( bird::dive:->:( ground )) ', :abbrev_form => 'R / ( B::D:->:( G ))', :alpha => "ROBADI-IG");
Formula.create( :base => '128', :offset => '008', :subindex => '0', :ord => '2', :iform => '63.1 / ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'roof / ( bird::dive:,:( ground )) ', :abbrev_form => 'R / ( B::D:,:( G ))', :alpha => "ROBADI-AG");
Formula.create( :base => '128', :offset => '009', :subindex => '0', :ord => '3', :iform => '40.1.a */ ((178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => '( roof->recliner ) */ ( bird::dive:->:( ground )) ', :abbrev_form => '( R->R ) */ ( B::D:->:( G ))', :alpha => "RYRAO-BADI-IG");
Formula.create( :base => '128', :offset => '009', :subindex => '0', :ord => '4', :iform => '40.1.a */ ((178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => '( roof->recliner ) */ ( bird::dive:,:( ground )) ', :abbrev_form => '( R->R ) */ ( B::D:,:( G ))', :alpha => "RYRAO-BADI-AG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '1', :iform => '( 66.0.a->( 1.1.c / 66.0.b )) / top( 23.3 ) / (178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => '(sprout->( dot / Z )) / top( tall ) / ( bird::dive:->:( ground )) ', :abbrev_form => '( S->( D / Z )) / T( T ) / ( B::D:->:( G ))', :alpha => "SYDOZOTOTOBADI-IG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '2', :iform => '( 66.0.a->( 1.1.c / 66.0.b )) / top( 23.3 ) / (178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => '(sprout->( dot / Z )) / top( tall ) / ( bird::dive:,:( ground )) ', :abbrev_form => '( S->( D / Z )) / T( T ) / ( B::D:,:( G ))', :alpha => "SYDOZOTOTOBADI-AG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '3', :iform => '( 66.0.a->( 1.1.c / 66.0.b )) / top( 23.3 ) / (178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => '(sprout->( dot / Z )) / top( tall ) / ( bird::dive:->:( ground )) ', :abbrev_form => '( S->( D / Z )) / T( T ) / ( B::D:->:( G ))', :alpha => "SYDOZOTOTOBADI-IG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '4', :iform => '( 66.0.a->( 1.1.c / 66.0.b )) / top( 23.3 ) / (178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => '(sprout->( dot / Z )) / top( tall ) / ( bird::dive:,:( ground )) ', :abbrev_form => '( S->( D / Z )) / T( T ) / ( B::D:,:( G ))', :alpha => "SYDOZOTOTOBADI-AG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '5', :iform => ' 31.2 / 68.1 / 24.1 *|*/ (178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Scholar / mouth / cover *|*/ ( bird::dive:->:( ground )) ', :abbrev_form => 'S / M / C *|*/ ( B::D:->:( G ))', :alpha => "SOMOCEOBADI-IG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '6', :iform => ' 31.2 / 68.1 / 24.1 *|*/ (178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Scholar / mouth / cover *|*/ ( bird::dive:,:( ground )) ', :abbrev_form => 'S / M / C *|*/ ( B::D:,:( G ))', :alpha => "SOMOCEOBADI-AG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '7', :iform => ' 31.2 / 68.1 / 24.1 *|*/ (178.0 )::( 128.0.a):->:(1.1.b ))', :word_form => 'Scholar / mouth / cover *|*/ ( bird::dive:->:( ground )) ', :abbrev_form => 'S / M / C *|*/ ( B::D:->:( G ))', :alpha => "SOMOCEOBADI-IG");
Formula.create( :base => '128', :offset => '012', :subindex => '0', :ord => '8', :iform => ' 31.2 / 68.1 / 24.1 *|*/ (178.0 )::( 128.0.a):,:(1.1.b ))', :word_form => 'Scholar / mouth / cover *|*/ ( bird::dive:,:( ground )) ', :abbrev_form => 'S / M / C *|*/ ( B::D:,:( G ))', :alpha => "SOMOCEOBADI-AG");
Formula.create( :base => '128', :offset => '012', :subindex => 's', :ord => '1', :iform => '58.6', :word_form => 'platform', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '9', :iform => '( 1.2 /\ 19.1 )^2 / 76.1', :word_form => '( two /\ cocoon )^2 / sun', :abbrev_form => '( T /\ C )^2 / S', :alpha => "TO-UCUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '11', :iform => '((( 178.0 )::( 128.0.a):->:(1.1.b ))->( 1.2 /\ 19.1 ))^2 / 76.1', :word_form => '(( bird::dive:->:( ground ))->( two /\ cocoon ))^2 / sun', :abbrev_form => '(( B::D:->:( G ))->( T /\ C ))^2 / S', :alpha => "BADI-IGYTO-UCUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '12', :iform => '((( 178.0 )::( 128.0.a):,:(1.1.b ))->( 1.2 /\ 19.1 ))^2 / 76.1', :word_form => '(( bird::dive:,:( ground ))->( two /\ cocoon ))^2 / sun', :abbrev_form => '(( B::D:,:( G ))->( T /\ C ))^2 / S', :alpha => "BADI-AGYTO-UCUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '13', :iform => '((( 178.0 )::( 128.0.a):->:(1.1.b ))->( 1.2 /\ 19.1 ))^2 / 76.1', :word_form => '(( bird::dive:->:( ground ))->( two /\ cocoon ))^2 / sun', :abbrev_form => '(( B::D:->:( G ))->( T /\ C ))^2 / S', :alpha => "BADI-IGYTO-UCUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '14', :iform => '((( 178.0 )::( 128.0.a):,:(1.1.b ))->( 1.2 /\ 19.1 ))^2 / 76.1', :word_form => '(( bird::dive:,:( ground ))->( two /\ cocoon ))^2 / sun', :abbrev_form => '(( B::D:,:( G ))->( T /\ C ))^2 / S', :alpha => "BADI-AGYTO-UCUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '1', :iform => '((178.0 )::( 128.0.a):->:(1.1.b ))^2 / 76.1', :word_form => '( bird::dive:->:( ground ))^2 / sun', :abbrev_form => '( B::D:->:( G ))^2 / S', :alpha => "BADI-IGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '2', :iform => '((178.0 )::( 128.0.a):,:(1.1.b ))^2 / 76.1', :word_form => '( bird::dive:,:( ground ))^2 / sun', :abbrev_form => '( B::D:,:( G ))^2 / S', :alpha => "BADI-AGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '3', :iform => '((178.0 )::( 128.0.a):->:(1.1.b ))^2 / 76.1', :word_form => '( bird::dive:->:( ground ))^2 / sun', :abbrev_form => '( B::D:->:( G ))^2 / S', :alpha => "BADI-IGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '4', :iform => '((178.0 )::( 128.0.a):,:(1.1.b ))^2 / 76.1', :word_form => '( bird::dive:,:( ground ))^2 / sun', :abbrev_form => '( B::D:,:( G ))^2 / S', :alpha => "BADI-AGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '5', :iform => 'top((178.0 )::( 128.0.a):->:(1.1.b ))^2 / 76.1', :word_form => 'top( bird::dive:->:( ground ))^2 / sun', :abbrev_form => 'top( B::D:->:( G ))^2 / S', :alpha => "TOBADI-IGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '6', :iform => 'top((178.0 )::( 128.0.a):,:(1.1.b ))^2 / 76.1', :word_form => 'top( bird::dive:,:( ground ))^2 / sun', :abbrev_form => 'top( B::D:,:( G ))^2 / S', :alpha => "TOBADI-AGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '7', :iform => 'top((178.0 )::( 128.0.a):->:(1.1.b ))^2 / 76.1', :word_form => 'top( bird::dive:->:( ground ))^2 / sun', :abbrev_form => 'top( B::D:->:( G ))^2 / S', :alpha => "TOBADI-IGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => '0', :ord => '8', :iform => 'top((178.0 )::( 128.0.a):,:(1.1.b ))^2 / 76.1', :word_form => 'top( bird::dive:,:( ground ))^2 / sun', :abbrev_form => 'top( B::D:,:( G ))^2 / S', :alpha => "TOBADI-AGUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => 's', :ord => '1', :iform => '( 1.2 /\ ( 29.1 *|* 4.1^2 ) / 76.1', :word_form => '( Two /\ ( divide *|* post*2 ) / sun', :abbrev_form => '( T /\ ( D *|* P^2 )) / S', :alpha => "TO-UDE'PUTOS");
Formula.create( :base => '128', :offset => '014', :subindex => 's', :ord => '3', :iform => '166.1.s / 76.1', :word_form => 'inferior / sun', :abbrev_form => 'I / S', :alpha => "IOS");
Formula.create( :base => '129', :offset => '000', :subindex => '0', :ord => '1', :iform => '129.0', :word_form => 'abstract( boat )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '129', :offset => '000', :subindex => 'a', :ord => '1', :iform => '129.0.a', :word_form => 'abstract( canoe )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '129', :offset => '000', :subindex => 'b', :ord => '1', :iform => '129.0.b', :word_form => 'abstract( dugout )', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '129', :offset => '001', :subindex => '0', :ord => '2', :iform => '129.0.a:129.0.b', :word_form => 'canoe:dugout', :abbrev_form => 'C:D', :alpha => "CID");
Formula.create( :base => '129', :offset => '001', :subindex => '0', :ord => '1', :iform => '129.1', :word_form => '{"dugout canoe"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '129', :offset => '002', :subindex => '0', :ord => '1', :iform => '129.1 * (( 37.0:178.0.c ::37.0.a ) / 14.1 )', :word_form => 'Boat * (( wing:short::flap ) / ( hand->again ))', :abbrev_form => 'B * (( W:S::F ) / ( H->A ))', :alpha => "BAWISAFOHYA");
Formula.create( :base => '129', :offset => '005', :subindex => '0', :ord => '5', :iform => '1.1.b / ( 129.0.a:129.0.b ) / 1.1.b', :word_form => 'ground / canoe:dugout / ground', :abbrev_form => 'G / C:D / G', :alpha => "GOCIDOG");
Formula.create( :base => '129', :offset => '005', :subindex => '0', :ord => '1', :iform => '1.2 /\ 129.1', :word_form => 'Two /\ boat', :abbrev_form => 'T /\ B', :alpha => "TO-UB");
Formula.create( :base => '129', :offset => '005', :subindex => '0', :ord => '3', :iform => '1.2 /\ ( 129.0.a:129.0.b )', :word_form => 'Two /\ canoe:dugout', :abbrev_form => 'T /\ C:D', :alpha => "TO-UCID");
Formula.create( :base => '129', :offset => '005', :subindex => 's', :ord => '1', :iform => '1.15', :word_form => 'Swirl-in-between', :abbrev_form => 'SIB', :alpha => "SIB");
Formula.create( :base => '129', :offset => '007', :subindex => '0', :ord => '1', :iform => '44.1 / ( 129.1 * 2.2 )', :word_form => 'Gather / ( boat * stream^2 )', :abbrev_form => 'G / ( B * S^2 )', :alpha => "GOBASUT");
Formula.create( :base => '129', :offset => '007', :subindex => '0', :ord => '2', :iform => '44.1 / (( 129.1->80.1 ) * 35.1.a )', :word_form => 'Gather / (( boat->moon) * knife-at-right )', :abbrev_form => 'G / (( B->M ) * KAR )', :alpha => "GOBYMAKAR");
Formula.create( :base => '129', :offset => '019', :subindex => '0', :ord => '1', :iform => '88.1 / 129.1', :word_form => 'Foot / boat', :abbrev_form => 'F / B', :alpha => "FOB");
Formula.create( :base => '129', :offset => '019', :subindex => '0', :ord => '2', :iform => '88.1 / ( 129.1 * 35.1.a )', :word_form => 'Foot / ( boat * knife-at-right )', :abbrev_form => 'F / ( B * KAR )', :alpha => "FOBAKAR");
Formula.create( :base => '129', :offset => '019', :subindex => '0', :ord => '3', :iform => '88.1 / (( 129.1->80.1 ) * 35.1.a )', :word_form => 'Stop / (( boat->moon) * knife-at-right )', :abbrev_form => 'S / (( B->M ) * KAR )', :alpha => "SOBYMAKAR");
Formula.create( :base => '129', :offset => '023', :subindex => '0', :ord => '1', :iform => '129.1 * ( 82.1 / 15.39 )', :word_form => 'Boat * ( fire / ( left::join:>right ))', :abbrev_form => 'B * ( F / ( L::J:>R ))', :alpha => "BAFOLAJAR");
Formula.create( :base => '129', :offset => '023', :subindex => '0', :ord => '3', :iform => '129.1 * 39.35.a', :word_form => 'Boat * ( slave:->dowry )', :abbrev_form => 'B * ( S:->D )', :alpha => "BASYD");
Formula.create( :base => '129', :offset => '023', :subindex => '0', :ord => '5', :iform => '129.1 * ( 39.0.a:->39.0.b )', :word_form => 'Boat * ( slave:->dowry )', :abbrev_form => 'B * ( S:->D )', :alpha => "BASYD");
Formula.create( :base => '129', :offset => '023', :subindex => '0', :ord => '7', :iform => '129.1 * ( 29.1 / 39.35 )', :word_form => 'Boat * ( Divide / sky )', :abbrev_form => 'B * ( D / S )', :alpha => "BADOS");
Formula.create( :base => '129', :offset => '023', :subindex => '0', :ord => '9', :iform => '129.1 * 39.35.a', :word_form => 'Boat * Divide-sky', :abbrev_form => 'B * DS', :alpha => "BADS");
Formula.create( :base => '130', :offset => '000', :subindex => 'a', :ord => '1', :iform => '130.0.a', :word_form => 'abstract( nest )', :abbrev_form => 'A( N )', :alpha => "AN");
Formula.create( :base => '130', :offset => '001', :subindex => '0', :ord => '1', :iform => '130.1', :word_form => '{ "roosting bird" }', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '130', :offset => '001', :subindex => '0', :ord => '2', :iform => '178.0:/+ 130.0.a', :word_form => 'bird:/+nest', :abbrev_form => 'B : / + N', :alpha => "BO-IN");
Formula.create( :base => '130', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 178.0:/+ 130.0.a ) / 70.1', :word_form => '( bird:/+nest ) / earth', :abbrev_form => '( B : / + W ) / E', :alpha => "BO-INO-E");
Formula.create( :base => '130', :offset => '005', :subindex => '0', :ord => '1', :iform => '76.1 * 130.1', :word_form => 'Sun * bird-in-nest', :abbrev_form => 'S * BIN', :alpha => "SABIN");
Formula.create( :base => '130', :offset => '005', :subindex => '0', :ord => '2', :iform => '76.1 * ( 178.0:/+ 130.0.a )', :word_form => 'Sun * ( bird:/+nest )', :abbrev_form => 'S * ( "B:/+N"  ) ', :alpha => "SABO-IN");
Formula.create( :base => '130', :offset => '005', :subindex => '0', :ord => '3', :iform => '76.1 * 130.1', :word_form => 'Sun * west', :abbrev_form => 'S * W', :alpha => "SAW");
Formula.create( :base => '130', :offset => '006', :subindex => '0', :ord => '1', :iform => '2.21.a * ( 178.0:/+ 130.0.a )', :word_form => 'Side-water * ( bird:/+nest )', :abbrev_form => 'SW * ("B:/+N")', :alpha => "SWABO-IN");
Formula.create( :base => '130', :offset => '007', :subindex => '0', :ord => '1', :iform => '( 178.0:/+ 130.0.a ) [] stack( 1.1.c^2 )', :word_form => '( bird:/+nest ) [] stack( dot^2 )', :abbrev_form => '( B : /+N ) [] S( D^2 )', :alpha => "BO-INE'SODUT");
Formula.create( :base => '130', :offset => '007', :subindex => '0', :ord => '2', :iform => '130.1 [] stack( 1.1.c^2 )', :word_form => 'west [] stack( dot^2 )', :abbrev_form => 'W [] S( D^2 )', :alpha => "WES'ODUT");
Formula.create( :base => '130', :offset => '007', :subindex => '0', :ord => '3', :iform => '26.1 / ( 69.1 [] ( 3.2 |%| stack( 1.1.c^2 )))', :word_form => 'Diviner / ( square  [] ( mow |%| stack( dot^2 )))', :abbrev_form => 'D / ( S  [] ( M |%| S( D^2 )))', :alpha => "DOSEMILS'ODUT");
Formula.create( :base => '131', :offset => '001', :subindex => '0', :ord => '1', :iform => '131.1', :word_form => '{ "mortar" }', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '131', :offset => '001', :subindex => 'a', :ord => '1', :iform => '143.0->131.1', :word_form => 'head->mortar', :abbrev_form => 'H->M', :alpha => "HYM");
Formula.create( :base => '131', :offset => '001', :subindex => 'b', :ord => '1', :iform => '20.0->131.1', :word_form => 'pit->mortar', :abbrev_form => 'P->M', :alpha => "PYM");
Formula.create( :base => '131', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 66.2 / ((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 131.1', :word_form => 'Type-of-owl / mortar', :abbrev_form => '( G / ( B:<.( T:S ))) / M', :alpha => "GOBITISOM");
Formula.create( :base => '131', :offset => '002', :subindex => '0', :ord => '3', :iform => '162.61 / 131.1', :word_form => 'Type-of-owl / mortar', :abbrev_form => 'TOO / M', :alpha => "TO-O-OM");
Formula.create( :base => '131', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 143.0 ->131.1 ) / 34.19', :word_form => '( head->mortar ) / male', :abbrev_form => '( H->M ) / M', :alpha => "HYMOM");
Formula.create( :base => '131', :offset => '003', :subindex => '0', :ord => '1', :iform => '131.1 / ( 111.1 / 34.1 )', :word_form => 'Mortar / ( field / strength )', :abbrev_form => 'M / ( F / S )', :alpha => "MOFOS");
Formula.create( :base => '131', :offset => '003', :subindex => '0', :ord => '2', :iform => '131.1 / 34.19', :word_form => 'Mortar / male', :abbrev_form => 'M / M', :alpha => "MOM");
Formula.create( :base => '131', :offset => '004', :subindex => '0', :ord => '1', :iform => '10.1 / 20.0', :word_form => 'Person / pit', :abbrev_form => 'P / P', :alpha => "POP");
Formula.create( :base => '131', :offset => '004', :subindex => '0', :ord => '2', :iform => '10.1.d / ( 20.0->131.1 )', :word_form => 'Person-at-top / ( pit->mortar )', :abbrev_form => 'PAT / ( P->M )', :alpha => "PATOPYM");
Formula.create( :base => '131', :offset => '010', :subindex => '0', :ord => '1', :iform => '103.1 / 131.1', :word_form => 'Claw / mortar', :abbrev_form => 'C / M', :alpha => "COM");
Formula.create( :base => '131', :offset => '014', :subindex => '0', :ord => '1', :iform => '( 143.0 ->131.1 ) / ( 10.0:->11.0 ) ', :word_form => '( head->mortar ) / ( person:->legs )', :abbrev_form => '( H->M ) / ( P:->L )', :alpha => "HYMOPYL");
Formula.create( :base => '131', :offset => '017', :subindex => '0', :ord => '1', :iform => '131.17', :word_form => '{ "bird" }', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '131', :offset => '017', :subindex => '0', :ord => '2', :iform => '(178.0 ):<.(( 143.0 ->131.1 ) :/ (( 178.0.b ):( 178.0.d )))', :word_form => 'Bird:<.(( head->mortar ) :/ ( tail:long ))', :abbrev_form => 'B:<.(( H->M) :/ ( T:L ))', :alpha => "BIHYM'OTIL");
Formula.create( :base => '131', :offset => '017', :subindex => '0', :ord => '3', :iform => '(178.0 ):<.(( 178.0.b ):( 178.0.d )):<.( 143.0 ->131.1 )', :word_form => 'Bird:<.( tail:long ):<.( head->mortar )', :abbrev_form => 'B:<.( T:L ):<.( H->M )', :alpha => "BITIL'IHYM");
Formula.create( :base => '131', :offset => '020', :subindex => '0', :ord => '1', :iform => '70.1 \ ( 131.1 * ( 37.1 / 14.1 ))', :word_form => 'Earth \ ( Mortar * ( flap / ( hand->again )))', :abbrev_form => 'E \ ( M * ( F / ( H->A )))', :alpha => "E-U'MAFOHY'A");
Formula.create( :base => '131', :offset => '020', :subindex => '0', :ord => '2', :iform => '70.1 \ ( 131.1 * (( 37.0:178.0.c ::37.0.a ) / 14.1 ))', :word_form => 'Earth \ ( Mortar * (( wing:short::flap ) / ( hand->again )))', :abbrev_form => 'E \ ( M * (( W:S::F ) / ( H->A )))', :alpha => "E-U'MAWIS'AFOHY'A");
Formula.create( :base => '131', :offset => '020', :subindex => '0', :ord => '3', :iform => '70.1 \* ( 131.1 * ( 37.1 / 14.1 ))', :word_form => 'Earth \* ( Mortar * ( flap / ( hand->again )))', :abbrev_form => 'E \* ( M * ( F / ( H->A )))', :alpha => "E-U'AMAFOHY'A");
Formula.create( :base => '131', :offset => '020', :subindex => '0', :ord => '4', :iform => '70.1 \* ( 131.1 * (( 37.0:178.0.c ::37.0.a ) / 14.1 ))', :word_form => 'Earth \* ( Mortar * (( wing:short::flap ) / ( hand->again )))', :abbrev_form => 'E \* ( M * (( W:S::F ) / ( H->A )))', :alpha => "E-U'AMAWIS'AFOHY'A");
Formula.create( :base => '131', :offset => '022', :subindex => '0', :ord => '2', :iform => '131.1 {}\ 50.1', :word_form => ' Mortar {}\ ( pestle | shield )', :abbrev_form => 'M {}\ ( P | S )', :alpha => "ME-UPOS");
Formula.create( :base => '131', :offset => '022', :subindex => '0', :ord => '1', :iform => '50.1 /}{ 131.1', :word_form => '( pestle | shield ) /}{ mortar', :abbrev_form => '( P | S ) /}{ M', :alpha => "POSO-IM");
Formula.create( :base => '131', :offset => '024', :subindex => '0', :ord => '1', :iform => '131.1 * ( 37.1 / 14.1 )', :word_form => 'Mortar * ( flap / ( hand->again ))', :abbrev_form => 'M * ( F / ( H->A ))', :alpha => "MAFOHY'A");
Formula.create( :base => '131', :offset => '024', :subindex => '0', :ord => '2', :iform => '131.1 * (( 37.0:178.0.c ::37.0.a ) / 14.1 )', :word_form => 'Mortar * (( wing:short::flap ) / ( hand->again ))', :abbrev_form => 'M * (( W:S::F ) / ( H->A ))', :alpha => "MAWIS'AFOHY'A");
Formula.create( :base => '132', :offset => '001', :subindex => '0', :ord => '1', :iform => '132.1', :word_form => '{"meat"}', :abbrev_form => 'M', :alpha => "M");
Formula.create( :base => '132', :offset => '001', :subindex => 'a', :ord => '3', :iform => '132.1->80.1', :word_form => 'meat->moon', :abbrev_form => 'M->M', :alpha => "MYM");
Formula.create( :base => '132', :offset => '001', :subindex => 'a', :ord => '1', :iform => '132.1->like( 80.1 )', :word_form => 'meat->like( moon)', :abbrev_form => 'M->like(M)', :alpha => "MYLM");
Formula.create( :base => '132', :offset => '001', :subindex => 'b', :ord => '1', :iform => '132.1.b', :word_form => '{"strips of meat"}', :abbrev_form => 'SOM', :alpha => "SOM");
Formula.create( :base => '132', :offset => '001', :subindex => 'b', :ord => '2', :iform => 'Strips( 132.1 )', :word_form => 'Strips( meat )', :abbrev_form => 'S( M )', :alpha => "SOM");
Formula.create( :base => '132', :offset => '001', :subindex => 'c', :ord => '1', :iform => 'Rot( 132.1.a )', :word_form => 'rot( meat->moon )', :abbrev_form => 'R( M->M )', :alpha => "ROMYM");
Formula.create( :base => '132', :offset => '001', :subindex => 'c', :ord => '2', :iform => 'turn( 132.1.a )', :word_form => 'turn( meat->moon )', :abbrev_form => 'T( M->M )', :alpha => "TOMYM");
Formula.create( :base => '132', :offset => '001', :subindex => 'd', :ord => '1', :iform => '132.1 | 80.1', :word_form => 'Meat | moon', :abbrev_form => 'M | M', :alpha => "MOM");
Formula.create( :base => '132', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1.a / 132.1', :word_form => 'object / meat', :abbrev_form => 'O / M', :alpha => "O-OM");
Formula.create( :base => '132', :offset => '002', :subindex => '0', :ord => '2', :iform => '68.1.a / ( 132.1->80.1 )', :word_form => 'object / ( meat->moon )', :abbrev_form => 'O / ( M->M )', :alpha => "O-OMYM");
Formula.create( :base => '132', :offset => '007', :subindex => '0', :ord => '2', :iform => '( 132.7.0->111.1 ) / ( 132.1->80.1 )', :word_form => '( Stomach-and-contents->field ) / ( meat->moon )', :abbrev_form => '( SAC->F ) / ( M->M )', :alpha => "SACYFOMYM");
Formula.create( :base => '132', :offset => '007', :subindex => '0', :ord => '1', :iform => '111.1 / 132.1', :word_form => 'field / meat', :abbrev_form => 'F /  M', :alpha => "FOM");
Formula.create( :base => '132', :offset => '007', :subindex => '0', :ord => '1', :iform => '132.7.0', :word_form => '{ "stomach containing food" }', :abbrev_form => 'SAC', :alpha => "SAC");
Formula.create( :base => '132', :offset => '007', :subindex => '0', :ord => '2', :iform => '68.0.b :[] 138.0', :word_form => 'Stomach:[] food', :abbrev_form => 'S:[] F', :alpha => "SEF");
Formula.create( :base => '132', :offset => '007', :subindex => '0', :ord => '3', :iform => '68.0.b :[] 31.1.b', :word_form => 'Stomach:[] ( food->ten )', :abbrev_form => 'S:[] ( F->T )', :alpha => "SEFYT");
Formula.create( :base => '132', :offset => '009', :subindex => '0', :ord => '4', :iform => '( 133.0.d :{} 133.0.c ) / ( 132.1->80.1 )', :word_form => '( Ribs :{} spine ) / ( meat->moon )', :abbrev_form => '( R :{} S ) / ( M->M )', :alpha => "RESOMYM");
Formula.create( :base => '132', :offset => '009', :subindex => '0', :ord => '1', :iform => '( 173.1 / 1.1.a ) / ( 132.1->80.1 )', :word_form => '( Plant-is-droopy / bar ) / ( meat->moon )', :abbrev_form => '( PID / B ) /( M->M )', :alpha => "PIDOBOMYM");
Formula.create( :base => '132', :offset => '009', :subindex => '0', :ord => '2', :iform => '( stack( 1.1.c )^2 {} 4.1 ) / 1.1.a ) / ( 132.1->80.1 )', :word_form => '( Stack( dots )^2 {} post ) / bar ) / ( meat->moon )', :abbrev_form => '( S( D )^2 {} P ) / B) /( M->M )', :alpha => "SODUTEPO'BOMYM");
Formula.create( :base => '132', :offset => '009', :subindex => '0', :ord => '5', :iform => '( stack( 1.1.c )^2 {}/ 10.1 ) / ( 132.1->80.1 )', :word_form => '( Stack( dots )^2 {}/ person ) / ( meat->moon )', :abbrev_form => '( S( D )^2 {}/ P ) /( M->M )', :alpha => "SODUTE-O'POMYM");
Formula.create( :base => '132', :offset => '009', :subindex => '0', :ord => '3', :iform => '132.9.a / ( 132.1->80.1 )', :word_form => 'Spine-and-ribs / ( meat->moon )', :abbrev_form => 'SAR /( M->M )', :alpha => "SARMYM");
Formula.create( :base => '132', :offset => '009', :subindex => 'a', :ord => '1', :iform => '132.9.a', :word_form => '{"spine and ribs"}', :abbrev_form => 'SAR', :alpha => "SAR");
Formula.create( :base => '132', :offset => '010', :subindex => '0', :ord => '1', :iform => 'Rot( 132.1.a ) / 82.1', :word_form => 'rot( meat->moon ) / fire', :abbrev_form => 'R( M->M ) / F', :alpha => "ROMYMOF");
Formula.create( :base => '132', :offset => '011', :subindex => '0', :ord => '2', :iform => '( 143.0 / 147.0 ) * ( 103.0^2 )', :word_form => '( Head / body ) * ( claw^2 )', :abbrev_form => '( H / B ) * ( C^2 )', :alpha => "HOBACUT");
Formula.create( :base => '132', :offset => '011', :subindex => '0', :ord => '5', :iform => '( 143.0 / 147.0 ) * stack( 103.0 )', :word_form => '( Head / body ) * stack( claw )', :abbrev_form => '( H / B ) * S( C )', :alpha => "HOBASOC");
Formula.create( :base => '132', :offset => '011', :subindex => '0', :ord => '7', :iform => '( 19.1 / ( 132.1->80.1 )) * stack( 12.1.c )', :word_form => '( cocoon / meat ) * stack( dagger )', :abbrev_form => '( C / ( M->M )) * S( D )', :alpha => "COMY'MASOD");
Formula.create( :base => '132', :offset => '011', :subindex => '0', :ord => '6', :iform => '( 58.3 / ( 132.1->80.1 )) * stack( 12.1.c )', :word_form => '( half-open-snake / meat ) * stack( dagger )', :abbrev_form => '( HOS / ( M->M )) * S( D )', :alpha => "HOSAMY'MASOD");
Formula.create( :base => '132', :offset => '011', :subindex => '0', :ord => '8', :iform => '(( 58.3->19.1) / ( 132.1->80.1 )) * stack( 12.1.c )', :word_form => '(( half-open-snake->cocoon ) / meat ) * stack( dagger )', :abbrev_form => '(( HOS->C ) / ( M->M )) * S( D )', :alpha => "HOSYCOMY'MASOD");
Formula.create( :base => '132', :offset => '011', :subindex => '0', :ord => '1', :iform => '132.11', :word_form => '{ "bear" }', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '132', :offset => '011', :subindex => '0', :ord => '4', :iform => '143.0 / ( 147.0  * 103.0^2 )', :word_form => 'Head / ( body * claw^2 )', :abbrev_form => 'H / ( B * C^2 )', :alpha => "HOBACUT");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '3', :iform => '((( 1.43 / 50.1 ) / ( 50.79 / ( 70.36 / 76.88 ))) / ( 132.1->80.1 )) * 132.16.0', :word_form => '((( Up / offend ) / (( good | stand ) / (( tree:->wood ) + sun ))) / ( meat->moon )) * Dragon-in-flight', :abbrev_form => '((( U / O ) / (( G | S ) / (( T:->W ) + S ))) / ( M->M )) * DIF', :alpha => "UO-O-OGOSOTYWISOMYMADIF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '4', :iform => '((( 1.43 / 50.1 ) / ( 50.79 / ( 70.36 / 76.88 ))) / ( 132.1->80.1 )) * ( 163.0.a::169.0 )', :word_form => '((( Up / offend ) / (( good | stand ) / (( tree:->wood ) + sun ))) / ( meat->moon )) * ( dragon::flies )', :abbrev_form => '((( U / O ) / (( G | S ) / (( T:->W ) + S ))) / ( M->M )) * ( D::F )', :alpha => "UO-O-OGOSOTYWISOMYMADAF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '5', :iform => '(( 39.21 / 76.91 ) / ( 132.1->80.1 )) *132.16.0', :word_form => '(( stand / heavy ) / ( meat->moon )) * Dragon-in-flight', :abbrev_form => '(( S / H ) / ( M->M )) * DIF', :alpha => "SOHOMYMADIF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '6', :iform => '(( 39.21 / 76.91 ) / ( 132.1->80.1 )) * ( 163.0.a::169.0 )', :word_form => '(( stand / heavy ) / ( meat->moon )) * ( dragon::flies )', :abbrev_form => '(( S / H ) / ( M->M )) * ( D::F )', :alpha => "SOHOMYMADAF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '1', :iform => '( 76.101 / ( 132.1->80.1 ) ) *132.16.0', :word_form => '(( boy:->slave ) / ( meat->moon )) * Dragon-in-flight', :abbrev_form => '(( B:->S ) / ( M->M )) * DIF', :alpha => "BYSOMYMADIF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '2', :iform => '( 76.101 / ( 132.1->80.1 ) ) * ( 163.0.a::169.0 )', :word_form => '(( boy:->slave ) / ( meat->moon )) * ( dragon::flies )', :abbrev_form => '(( B:->S ) / ( M->M )) * ( D::F )', :alpha => "BYSOMYMADAF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '7', :iform => '(( top( 1.43 / 50.1 ) / ( top( 50.79 ) / ( 70.36 / 76.88 ))) / ( 132.1->80.1 )) * 132.16.0', :word_form => '(( top( Up / offend ) / ( top( good | stand ) / (( tree:->wood ) + sun ))) / ( meat->moon )) * Dragon-in-flight', :abbrev_form => '(( T( U / O ) / ( T( G | S ) / (( T:->W ) + S ))) / ( M->M )) * DIF', :alpha => "TUO-O-OTOGOSOTYWISOMYMADIF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '8', :iform => '(( top( 1.43 / 50.1 ) / ( top( 50.79 ) / ( 70.36 / 76.88 ))) / ( 132.1->80.1 )) * ( 163.0.a::169.0 )', :word_form => '(( top( Up / offend ) / ( top( good | stand ) / (( tree:->wood ) + sun ))) / ( meat->moon )) * ( dragon::flies )', :abbrev_form => '(( T( U / O ) / ( T( G | S ) / (( T:->W ) + S ))) / ( M->M )) * ( D::F )', :alpha => "TUO-O-OTOGOSOTYWISOMYMADAF");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '1', :iform => '132.16.0', :word_form => '{"dragon in flight"}', :abbrev_form => 'D', :alpha => "D");
Formula.create( :base => '132', :offset => '016', :subindex => '0', :ord => '2', :iform => '163.0.a::169.0', :word_form => 'dragon::flies', :abbrev_form => 'D::F', :alpha => "DAF");
Formula.create( :base => '133', :offset => '000', :subindex => '0', :ord => '1', :iform => '133.0', :word_form => 'abstract( "skeleton" )', :abbrev_form => 'A( S )', :alpha => "AR");
Formula.create( :base => '133', :offset => '000', :subindex => 'a', :ord => '1', :iform => '133.0.a', :word_form => 'abstract( "bones" )', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '133', :offset => '000', :subindex => 'b', :ord => '1', :iform => '133.0.b', :word_form => 'abstract( "vertebra" )', :abbrev_form => 'A( V )', :alpha => "AV");
Formula.create( :base => '133', :offset => '000', :subindex => 'c', :ord => '1', :iform => '133.0.c', :word_form => 'abstract( "spine" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '133', :offset => '000', :subindex => 'd', :ord => '1', :iform => '133.0.d', :word_form => 'abstract( "ribs" )', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '133', :offset => '000', :subindex => 'e', :ord => '1', :iform => '133.0.e', :word_form => 'abstract( "break" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '133', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 143.0.a :* (133.0.b^n ) }', :word_form => '{ Skull:* ( vertebra^n ) }', :abbrev_form => '{ S:*V^N }', :alpha => "SAVUN");
Formula.create( :base => '133', :offset => '001', :subindex => '0', :ord => '1', :iform => '133.1', :word_form => '{"skull and vertebrae"}', :abbrev_form => 'SAV', :alpha => "SAV");
Formula.create( :base => '133', :offset => '002', :subindex => '0', :ord => '1', :iform => '133.1.b  / ( 132.1->80.1 )', :word_form => 'Skull-and-vertebrae / ( meat->moon )', :abbrev_form => 'SAV / ( M->M )', :alpha => "SAVOMYM");
Formula.create( :base => '133', :offset => '005', :subindex => '0', :ord => '1', :iform => '133.1.b {}/ 68.1', :word_form => 'Skull-and-vertebrae {}/ mouth', :abbrev_form => 'SAV {}/ M', :alpha => "SAV-EOM");
Formula.create( :base => '133', :offset => '012', :subindex => '0', :ord => '1', :iform => '::( 133.0.e ):>133.1.b', :word_form => '::break:>Skull-and-vertebrae', :abbrev_form => '::B:>SAV', :alpha => "BOSAV");
Formula.create( :base => '133', :offset => '012', :subindex => '0', :ord => '2', :iform => '::( 133.0.e ):>( 133.0.a )', :word_form => '::break:>bones', :abbrev_form => '::B:>B', :alpha => "BOB");
Formula.create( :base => '134', :offset => '000', :subindex => '0', :ord => '1', :iform => '134.0', :word_form => 'abstract( "beard" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '134', :offset => '001', :subindex => '0', :ord => '3', :iform => '{ 134.0 }', :word_form => '{ beard }', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '134', :offset => '001', :subindex => '0', :ord => '4', :iform => '1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )', :word_form => 'Bar / dot / ( cover {}/ post^2 )', :abbrev_form => 'B / D / ( C {}/ P^2 )', :alpha => "BODOCEOPUT");
Formula.create( :base => '134', :offset => '001', :subindex => '0', :ord => '1', :iform => '134.1', :word_form => '{"beard"}', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '134', :offset => '002', :subindex => '0', :ord => '1', :iform => '134.2', :word_form => '{"plant growing above ground and below ground"}', :abbrev_form => 'T', :alpha => "T");
Formula.create( :base => '134', :offset => '002', :subindex => '0', :ord => '2', :iform => '134.2', :word_form => '{"plant growing above ground and below ground"}', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '134', :offset => '002', :subindex => '0', :ord => '5', :iform => '176.0.a / 1.1.b / 100.0', :word_form => 'Branches / ground / roots', :abbrev_form => 'B / G / R', :alpha => "BOGOR");
Formula.create( :base => '134', :offset => '002', :subindex => '0', :ord => '3', :iform => '67.1 / 134.1', :word_form => 'Mountain / beard', :abbrev_form => 'M / B', :alpha => "MOB");
Formula.create( :base => '134', :offset => '002', :subindex => 's', :ord => '7', :iform => '59.37', :word_form => 'shuttle', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '134', :offset => '014', :subindex => '0', :ord => '1', :iform => '134.1 * 14.63', :word_form => 'Beard * ( hand:->inch )', :abbrev_form => 'B * ( H:->I )', :alpha => "BAHYI");
Formula.create( :base => '134', :offset => '015', :subindex => '0', :ord => '1', :iform => '134.1 / 54.1', :word_form => 'Beard / woman', :abbrev_form => 'B / W', :alpha => "BOW");
Formula.create( :base => '134', :offset => '015', :subindex => '0', :ord => '2', :iform => ' 54.1 \ 134.1', :word_form => 'Woman \ Beard', :abbrev_form => 'W \ B', :alpha => "WUB");
Formula.create( :base => '135', :offset => '000', :subindex => 'a', :ord => '1', :iform => '135.0.a', :word_form => 'abstract( "bend" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '135', :offset => '000', :subindex => 'b', :ord => '1', :iform => '135.0.b', :word_form => 'abstract( "bent" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '11', :iform => '( 135.0.b  ):>( 77.0.a )', :word_form => 'bend:>wood', :abbrev_form => 'B:>W', :alpha => "BOW");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '12', :iform => '(( 135.0.b  ):>( 77.0.a )):->116.0', :word_form => '( bend:>wood ):->vessel', :abbrev_form => '( B:>W ):->V', :alpha => "BOWYV");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '13', :iform => '(( 135.0.b ):>( 77.0.a )):->116.0.a', :word_form => '( bend:>wood ):->bowl', :abbrev_form => '( B:>W ):->B', :alpha => "BOWYB");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '14', :iform => '( 135.0.b  ):>( 77.0.a )', :word_form => 'bend:>wood', :abbrev_form => 'B:>W', :alpha => "BOW");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '15', :iform => '(( 135.0.b  ):>( 77.0.a )):->116.0', :word_form => '( bend:>wood ):->vessel', :abbrev_form => '( B:>W ):->V', :alpha => "BOWYV");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '16', :iform => '(( 135.0.b  ):>( 77.0.a )):->116.0.a', :word_form => '( bend:>wood ):->bowl', :abbrev_form => '( B:>W ):->B', :alpha => "BOWYB");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 77.0.a ):( 135.0.b  )', :word_form => 'wood:bent', :abbrev_form => 'W:B', :alpha => "WIB");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '6', :iform => '(( 77.0.a ):( 135.0.b  )):->116.0', :word_form => 'wood:bent:->vessel', :abbrev_form => 'W:B:->V', :alpha => "WIBYV");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '7', :iform => '(( 77.0.a ):( 135.0.b  )):->116.0.a', :word_form => 'wood:bent:->bowl', :abbrev_form => 'W:B:->B', :alpha => "WIBYB");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '8', :iform => '( 77.0.a ):( 135.0.b  )', :word_form => 'wood:bent', :abbrev_form => 'W:B', :alpha => "WIB");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '9', :iform => '(( 77.0.a ):( 135.0.b  )):->116.0', :word_form => 'wood:bent:->vessel', :abbrev_form => 'W:B:->V', :alpha => "WIBYV");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '10', :iform => '(( 77.0.a ):( 135.0.b  )):->116.0.a', :word_form => 'wood:bent:->bowl', :abbrev_form => 'W:B:->B', :alpha => "WIBYB");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '1', :iform => '135.1', :word_form => '{ "wood curved into bowl shape" }', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '135', :offset => '001', :subindex => '0', :ord => '3', :iform => '135.1', :word_form => '{ "wood curved into bowl shape" }', :abbrev_form => 'S', :alpha => "S");
Formula.create( :base => '135', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 125.0.a | 125.0.b ) * 135.1', :word_form => '( Insect | Snake ) * wood:bent', :abbrev_form => '( I | S ) * W:B', :alpha => "IOSAWIB");
Formula.create( :base => '135', :offset => '002', :subindex => '0', :ord => '1', :iform => '125.1 * 135.1', :word_form => 'Insect-snake * wood:bent', :abbrev_form => 'IS * W:B', :alpha => "ISAWIB");
Formula.create( :base => '136', :offset => '000', :subindex => 'a', :ord => '1', :iform => '136.0.a', :word_form => 'abstract( "pitchfork" )', :abbrev_form => 'A( PF )', :alpha => "APF");
Formula.create( :base => '136', :offset => '000', :subindex => 'b', :ord => '1', :iform => '136.0.b', :word_form => 'abstract( "handle" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '136', :offset => '000', :subindex => 'c', :ord => '1', :iform => '136.0.c', :word_form => 'abstract( "winnow" )', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '136', :offset => '001', :subindex => '0', :ord => '3', :iform => '(( 106.0 ):(::136.0.c )) /+( 136.0.b )', :word_form => '( Basket:(::winnow )) /+ handle', :abbrev_form => '( B:( ::W )) /+ H', :alpha => "BIAWOIH");
Formula.create( :base => '136', :offset => '001', :subindex => '0', :ord => '4', :iform => '((( 106.0 ):(::136.0.c )) | 136.0.a ) /+( 136.0.b )', :word_form => '(( Basket:(::winnow )) | pitchfork ) /+ handle', :abbrev_form => '(( B:( ::W )) | P ) /+ H', :alpha => "BIAWOPOIH");
Formula.create( :base => '136', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 136.0.b ) \+ (( 106.0 ):(::136.0.c ))', :word_form => 'Handle \+ ( Basket:(::winnow ))', :abbrev_form => 'H \+ ( B:( ::W ))', :alpha => "HU-IBIAW'");
Formula.create( :base => '136', :offset => '001', :subindex => '0', :ord => '6', :iform => '( 136.0.b ) \+ ((( 106.0 ):(::136.0.c )) | 136.0.a )', :word_form => 'Handle \+ (( Basket:(::winnow )) | pitchfork )', :abbrev_form => 'H \+ (( B:( ::W )) | P )', :alpha => "HU-IBI'AWOP");
Formula.create( :base => '136', :offset => '001', :subindex => '0', :ord => '2', :iform => '136.1 | 136.0.a', :word_form => 'Winnow-basket | pitchfork', :abbrev_form => 'WB | P', :alpha => "WBOP");
Formula.create( :base => '136', :offset => '001', :subindex => '0', :ord => '1', :iform => '136.1', :word_form => '{ "winnowing basket or pitchfork with handle" }', :abbrev_form => 'WB', :alpha => "WB");
Formula.create( :base => '136', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.5 / 136.1', :word_form => 'Cry / winnow-basket', :abbrev_form => 'C / WB', :alpha => "COWB");
Formula.create( :base => '136', :offset => '002', :subindex => '0', :ord => '3', :iform => '68.5 / ( 136.1 | 136.0.a )', :word_form => 'Cry / ( Winnow-basket | pitchfork )', :abbrev_form => 'C / ( WB | P )', :alpha => "COWBOP");
Formula.create( :base => '136', :offset => '002', :subindex => '0', :ord => '5', :iform => '68.5 / (( 136.0.b ) \+ (( 106.0 ):(::136.0.c )))', :word_form => 'Cry / ( Handle \+ ( Basket:(::winnow )))', :abbrev_form => 'C / ( H \+ ( B:( ::W )))', :alpha => "COHU-IBIAW'");
Formula.create( :base => '136', :offset => '002', :subindex => '0', :ord => '6', :iform => '68.5 / (( 136.0.b ) \+ ((( 106.0 ):(::136.0.c )) | 136.0.a ))', :word_form => 'Cry / ( Handle \+ (( Basket:(::winnow )) | pitchfork ))', :abbrev_form => 'C / ( H \+ (( B:( ::W )) | P ))', :alpha => "COHU-IBI'AWOP");
Formula.create( :base => '136', :offset => '002', :subindex => '0', :ord => '7', :iform => '68.5 / 111.1 / 31.1', :word_form => 'Cry / field / ten', :abbrev_form => 'C / F / T', :alpha => "COFOT");
Formula.create( :base => '136', :offset => '002', :subindex => 's', :ord => '1', :iform => '29.1 / 111.1 / 31.1', :word_form => 'divide / field / ten', :abbrev_form => 'D / F / T', :alpha => "DOFOT");
Formula.create( :base => '136', :offset => '008', :subindex => '0', :ord => '1', :iform => ' 111.1 / 136.1', :word_form => 'Field / winnow-basket', :abbrev_form => 'F / WB', :alpha => "FOWB");
Formula.create( :base => '136', :offset => '008', :subindex => '0', :ord => '3', :iform => ' 111.1 / ( 136.1 | 136.0.a )', :word_form => 'Field / ( Winnow-basket | pitchfork )', :abbrev_form => 'F / ( WB | P )', :alpha => "FOWBOP");
Formula.create( :base => '136', :offset => '008', :subindex => '0', :ord => '5', :iform => ' 111.1 / alt( 136.1 )', :word_form => 'Field / alt( winnow-basket )', :abbrev_form => 'F / A( WB )', :alpha => "FO-AWB");
Formula.create( :base => '136', :offset => '008', :subindex => 's', :ord => '1', :iform => '12.2 / 31.1', :word_form => 'Compare / ten', :abbrev_form => 'C / T', :alpha => "COT");
Formula.create( :base => '136', :offset => '008', :subindex => 's', :ord => '3', :iform => 'Rev( 10.0 ) / 31.1', :word_form => 'Rev( person )^2 / ten', :abbrev_form => 'R( P )^2 / T', :alpha => "ROPUTOT");
Formula.create( :base => '137', :offset => '000', :subindex => '0', :ord => '1', :iform => '137.0', :word_form => 'Abstract( "ear" )', :abbrev_form => 'A( E )', :alpha => "AE");
Formula.create( :base => '137', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 137.0 }', :word_form => '{ ear }', :abbrev_form => '{ E }', :alpha => "E");
Formula.create( :base => '137', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 137.0 )', :word_form => 'Alt( ear )', :abbrev_form => 'A{ E }', :alpha => "AOE");
Formula.create( :base => '137', :offset => '002', :subindex => '0', :ord => '1', :iform => '12.74 * 137.1', :word_form => 'Food * ear', :abbrev_form => 'F * E', :alpha => "FA-E");
Formula.create( :base => '137', :offset => '003', :subindex => '0', :ord => '1', :iform => '65.1 * 137.1', :word_form => 'Bow * ear', :abbrev_form => 'B * E', :alpha => "BA-E");
Formula.create( :base => '137', :offset => '004', :subindex => '0', :ord => '2', :iform => '137.1 / 137.1^2', :word_form => 'Ear / ear^2', :abbrev_form => 'E / E^2', :alpha => "EO-E'UT");
Formula.create( :base => '137', :offset => '004', :subindex => '0', :ord => '1', :iform => '137.1*3', :word_form => 'Ear^3', :abbrev_form => 'E^3', :alpha => "E-UT");
Formula.create( :base => '137', :offset => '004', :subindex => '0', :ord => '4', :iform => 'pile( 137.1 )', :word_form => 'pile( ear )', :abbrev_form => 'P( E )', :alpha => "PO-E");
Formula.create( :base => '137', :offset => '004', :subindex => '0', :ord => '3', :iform => 'Triangle( 137.1 )', :word_form => 'triangle( ear )', :abbrev_form => 'T( E )', :alpha => "TO-E");
Formula.create( :base => '137', :offset => '007', :subindex => '0', :ord => '1', :iform => '68.1 / 137.1', :word_form => 'Mouth / ear', :abbrev_form => 'M / E', :alpha => "MO-E");
Formula.create( :base => '137', :offset => '010', :subindex => '0', :ord => '1', :iform => '137.1.a * 26.2', :word_form => 'Alt-ear * tap', :abbrev_form => 'A( E ) * T', :alpha => "AO-E-AT");
Formula.create( :base => '137', :offset => '016', :subindex => '0', :ord => '1', :iform => '66.2 / 137.1', :word_form => 'Grass / ear', :abbrev_form => 'G / E', :alpha => "GO-E");
Formula.create( :base => '137', :offset => '017', :subindex => '0', :ord => '1', :iform => '137.1 * 14.1', :word_form => 'Ear * ( hand->again )', :abbrev_form => 'E * ( H->A )', :alpha => "E-AHYA");
Formula.create( :base => '137', :offset => '025', :subindex => '0', :ord => '1', :iform => '137.1 * 83.1', :word_form => 'Ear * heart', :abbrev_form => 'E * H', :alpha => "E-AH");
Formula.create( :base => '137', :offset => '025', :subindex => '0', :ord => '3', :iform => '137.1 * 83.1', :word_form => 'Ear * heart:open', :abbrev_form => 'E * H:O', :alpha => "E-AHI'O");
Formula.create( :base => '137', :offset => '025', :subindex => '0', :ord => '5', :iform => '83.1 >< 137.1', :word_form => 'Heart >< Ear', :abbrev_form => 'H >< E', :alpha => "HEXA-E");
Formula.create( :base => '137', :offset => '026', :subindex => '0', :ord => '1', :iform => '137.1 * 9.1.d', :word_form => 'Ear * ( droopy->sprout-effort )', :abbrev_form => 'E * ( D->A( SE ))', :alpha => "E-ADYA'SE");
Formula.create( :base => '137', :offset => '026', :subindex => '0', :ord => '2', :iform => '137.1 * ( 173.0.b->9.1.a )', :word_form => 'Ear * ( droopy->sprout-effort )', :abbrev_form => 'E * ( D->A( SE ))', :alpha => "E-ADYA'SE");
Formula.create( :base => '137', :offset => '028', :subindex => '0', :ord => '1', :iform => '137.1 * 82.1', :word_form => 'Ear * fire', :abbrev_form => 'E * F', :alpha => "E-AF");
Formula.create( :base => '137', :offset => '029', :subindex => '0', :ord => '1', :iform => '137.1 * 33.18', :word_form => 'Ear * ( city->beta  )', :abbrev_form => 'E * ( C->B )', :alpha => "E-ACYB");
Formula.create( :base => '138', :offset => '000', :subindex => '0', :ord => '1', :iform => '138.0', :word_form => 'abstract( "food" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '138', :offset => '000', :subindex => 'a', :ord => '1', :iform => '138.0.a', :word_form => 'abstract( "rice" )', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '138', :offset => '000', :subindex => 'b', :ord => '1', :iform => '138.0.b', :word_form => 'abstract( "grains" )', :abbrev_form => 'A( G )', :alpha => "AG");
Formula.create( :base => '138', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 138.0.a ).( 138.0.b )', :word_form => 'rice.grains', :abbrev_form => 'R.G', :alpha => "GOR");
Formula.create( :base => '138', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 138.0.a ).( 138.0.b )', :word_form => 'rice.grains', :abbrev_form => 'R.G', :alpha => "REG");
Formula.create( :base => '138', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 138.0.a ):<-( 138.0.b )', :word_form => 'rice:<-grains', :abbrev_form => 'R:<-G', :alpha => "RIOG");
Formula.create( :base => '138', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 138.0.b ):->( 138.0.a )', :word_form => 'grains:->rice', :abbrev_form => 'G:->R', :alpha => "GYR");
Formula.create( :base => '138', :offset => '001', :subindex => '0', :ord => '1', :iform => '', :word_form => '{ "grains of rice" }', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '138', :offset => '002', :subindex => '0', :ord => '1', :iform => '41.3.a *\ 138.1', :word_form => 'Stop-and-go *\ rice', :abbrev_form => 'SAG *\ R', :alpha => "SAGA-UR");
Formula.create( :base => '139', :offset => '000', :subindex => '0', :ord => '1', :iform => '139.0', :word_form => 'Abstract( "nose")', :abbrev_form => 'A( N )', :alpha => "AN");
Formula.create( :base => '139', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 139.0 }', :word_form => '{ nose }', :abbrev_form => '{ N }', :alpha => "PON");
Formula.create( :base => '139', :offset => '002', :subindex => '0', :ord => '1', :iform => '139.1 / 83.1', :word_form => 'Nose / heart:open', :abbrev_form => 'N / H:O', :alpha => "NOHIO");
Formula.create( :base => '139', :offset => '002', :subindex => '0', :ord => '2', :iform => '83.1 \ 139.1', :word_form => 'Heart \ Nose', :abbrev_form => 'H \ N', :alpha => "HUN");
Formula.create( :base => '139', :offset => '005', :subindex => '0', :ord => '1', :iform => '68.1 * 139.1', :word_form => 'Mouth * nose', :abbrev_form => 'M * N', :alpha => "MAN");
Formula.create( :base => '139', :offset => '006', :subindex => '0', :ord => '1', :iform => '139.1 / 63.2 / 94.1.a', :word_form => 'Nose / cave / ( cover->square )', :abbrev_form => 'N / C / ( C->S )', :alpha => "NOCOCYS");
Formula.create( :base => '139', :offset => '006', :subindex => '0', :ord => '3', :iform => '139.1 / 63.2 / 94.1.b', :word_form => 'Nose / cave / ( lid->square )', :abbrev_form => 'N / C / ( L->S )', :alpha => "NOCOLYS");
Formula.create( :base => '140', :offset => '001', :subindex => '0', :ord => '1', :iform => '140.1', :word_form => '{"large spirit head"}', :abbrev_form => 'SH', :alpha => "SH");
Formula.create( :base => '140', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'Alt( 140.1)', :word_form => 'alt( spirit-head )', :abbrev_form => 'A( SH )', :alpha => "ASH");
Formula.create( :base => '140', :offset => '001', :subindex => 'a', :ord => '2', :iform => 'Alt( 140.1)', :word_form => 'alt( spirit-head )', :abbrev_form => 'A( SH )', :alpha => "SHA");
Formula.create( :base => '140', :offset => '001', :subindex => 'b', :ord => '3', :iform => '7.1 / 69.25', :word_form => 'drag / middle', :abbrev_form => 'D / M', :alpha => "DOM");
Formula.create( :base => '140', :offset => '001', :subindex => 'b', :ord => '4', :iform => 'Alt( 140.1)', :word_form => 'alt( spirit-head )', :abbrev_form => 'A( SH )', :alpha => "ASH");
Formula.create( :base => '140', :offset => '001', :subindex => 'b', :ord => '2', :iform => 'Like( 140.1)', :word_form => 'like( spirit-head)', :abbrev_form => 'L( SH )', :alpha => "LOSH");
Formula.create( :base => '140', :offset => '001', :subindex => 'b', :ord => '1', :iform => 'Like( 140.1)->(7.1 / 69.25)', :word_form => 'like( spirit-head)->(drag / middle )', :abbrev_form => 'L( SH )->( D / M)', :alpha => "LOSHYDOM");
Formula.create( :base => '140', :offset => '001', :subindex => 'c', :ord => '4', :iform => '26.1 / ( 32.1 +  23.1 )', :word_form => 'diviner / ( enter + space )', :abbrev_form => 'D / (E + S)', :alpha => "DO-E-IS");
Formula.create( :base => '140', :offset => '001', :subindex => 'c', :ord => '5', :iform => '26.1 / 23.50', :word_form => 'diviner / internal', :abbrev_form => 'D / I', :alpha => "DOI");
Formula.create( :base => '140', :offset => '001', :subindex => 'c', :ord => '6', :iform => 'Alt( 140.1)', :word_form => 'alt( spirit-head )', :abbrev_form => 'A( SH )', :alpha => "ASH");
Formula.create( :base => '140', :offset => '001', :subindex => 'c', :ord => '1', :iform => 'Like( 140.1)->( 26.1 / ( 32.1 +  23.1 ))', :word_form => 'Like( Spirit-head )->( diviner / ( enter + space ) )', :abbrev_form => 'L( SH )->( D / (E + S) )', :alpha => "LOSHYDO-E-IS");
Formula.create( :base => '140', :offset => '001', :subindex => 'c', :ord => '2', :iform => 'Like( 140.1)->( 26.1 / 23.50 )', :word_form => 'Like( Spirit-head )->( diviner / internal  )', :abbrev_form => 'L( SH )->( D / I )', :alpha => "LOSHYDOI");
Formula.create( :base => '140', :offset => '001', :subindex => 'c', :ord => '3', :iform => 'Like( 140.1)', :word_form => 'Like( Spirit-head )', :abbrev_form => 'L( SH )', :alpha => "LOSH");
Formula.create( :base => '140', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 140.1->111.1 ) / 103.1.b', :word_form => '( spirit-head->field ) / alt( claw )', :abbrev_form => '( SH->F ) / A( C )', :alpha => "SHYFO-AC");
Formula.create( :base => '140', :offset => '002', :subindex => '0', :ord => '2', :iform => '111.1.e / 103.1.b', :word_form => 'Animal-head / alt( claw )', :abbrev_form => 'AH / A( C )', :alpha => "AHO-AC");
Formula.create( :base => '140', :offset => '006', :subindex => '0', :ord => '1', :iform => '140.1 / ( 11.1 *\ 19.1.d )', :word_form => 'Spirit-head / (( person:->legs ) *\ ( vapor->cocoon ))', :abbrev_form => 'SH / (( P:->L ) *\ ( V->C ))', :alpha => "SHOPYLA-UVYC");
Formula.create( :base => '140', :offset => '006', :subindex => '0', :ord => '2', :iform => '140.1 / ( 11.1 *\ ( 81.0->19.1 ))', :word_form => 'Spirit-head / (( person:->legs ) *\ ( vapor->cocoon ))', :abbrev_form => 'SH / (( P:->L ) *\ ( V->C ))', :alpha => "SHOPYLA-UVYC");
Formula.create( :base => '141', :offset => '000', :subindex => '0', :ord => '1', :iform => '141.0', :word_form => 'Abstract( "pottery")', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '141', :offset => '000', :subindex => 'a', :ord => '1', :iform => '141.0.a', :word_form => 'Abstract( "pot")', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '141', :offset => '000', :subindex => 'b', :ord => '1', :iform => '141.0.b', :word_form => 'Abstract( "clay")', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '141', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 ))', :word_form => 'Lid:/}{:( clay:->vessel )', :abbrev_form => 'L :/}{: ( C:->V )', :alpha => "LOICYV");
Formula.create( :base => '141', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b ))', :word_form => 'Lid:/}{:( vessel:<-clay )', :abbrev_form => 'L :/}{: ( V:<-C )', :alpha => "LOIVIOC");
Formula.create( :base => '141', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a ))', :word_form => 'Lid:/}{:( clay:->pot )', :abbrev_form => 'L :/}{: ( C:->P )', :alpha => "LOICYP");
Formula.create( :base => '141', :offset => '001', :subindex => '0', :ord => '6', :iform => '( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b ))', :word_form => 'Lid:/}{:( pot:<-clay )', :abbrev_form => 'L :/}{: ( P:<-C )', :alpha => "LOIPIOC");
Formula.create( :base => '141', :offset => '001', :subindex => '0', :ord => '1', :iform => '141.1', :word_form => '{ "covered clay vessel" }', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '141', :offset => '001', :subindex => '0', :ord => '2', :iform => '24.0 / 141.0.b', :word_form => 'Cover / pottery', :abbrev_form => 'C / P', :alpha => "COP");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '1', :iform => '18.1 {}/ (( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 )))', :word_form => 'Person-at-top {}/ ( Lid:/}{:( clay:->vessel ))', :abbrev_form => 'PAT {}/ ( L :/}{: ( C:->V ))', :alpha => "PATEOLOICYV");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '2', :iform => '18.1 {}/ (( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b )))', :word_form => 'Person-at-top {}/ ( Lid:/}{:( vessel:<-clay ))', :abbrev_form => 'PAT {}/ ( L :/}{: ( V:<-C ))', :alpha => "PATEOLOIVIOC");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '3', :iform => '18.1 {}/ (( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a )))', :word_form => 'Person-at-top {}/ ( Lid:/}{:( clay:->pot ))', :abbrev_form => 'PAT {}/ ( L :/}{: ( C:->P ))', :alpha => "PATEOLOICYP");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '4', :iform => '18.1 {}/ (( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b )))', :word_form => 'Person-at-top {}/ ( Lid:/}{:( pot:<-clay )) ', :abbrev_form => 'PAT {}/ ( L :/}{: ( P:<-C ))', :alpha => "PATEOLOIPIOC");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '5', :iform => '18.1 ></ (( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 )))', :word_form => 'Person-at-top ></ ( Lid:/}{:( clay:->vessel ))', :abbrev_form => 'PAT ></ ( L :/}{: ( C:->V ))', :alpha => "PATEXOLOICYV");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '6', :iform => '18.1 ></ (( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b )))', :word_form => 'Person-at-top ></ ( Lid:/}{:( vessel:<-clay ))', :abbrev_form => 'PAT ></ ( L :/}{: ( V:<-C ))', :alpha => "PATEXOLOIVIOC");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '7', :iform => '18.1 ></ (( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a )))', :word_form => 'Person-at-top ></ ( Lid:/}{:( clay:->pot ))', :abbrev_form => 'PAT ></ ( L :/}{: ( C:->P ))', :alpha => "PATEXOLOICYP");
Formula.create( :base => '141', :offset => '002', :subindex => '0', :ord => '8', :iform => '18.1 ></ (( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b )))', :word_form => 'Person-at-top ></ ( Lid:/}{:( pot:<-clay )) ', :abbrev_form => 'PAT ></ ( L :/}{: ( P:<-C ))', :alpha => "PATEXOLOIPIOC");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '5', :iform => '132.1.c / (( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 )))', :word_form => 'meat / ( Lid:/}{:( clay:->vessel ))', :abbrev_form => 'M / ( L :/}{: ( C:->V ))', :alpha => "MOLOICYV");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '6', :iform => '132.1.c / (( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b )))', :word_form => 'meat / ( Lid:/}{:( vessel:<-clay ))', :abbrev_form => 'M / ( L :/}{: ( V:<-C ))', :alpha => "MOLOIVIOC");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '7', :iform => '132.1.c / (( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a )))', :word_form => 'meat / ( Lid:/}{:( clay:->pot ))', :abbrev_form => 'M / ( L :/}{: ( C:->P ))', :alpha => "MOLOICYP");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '8', :iform => '132.1.c / (( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b )))', :word_form => 'meat / ( Lid:/}{:( pot:<-clay )) ', :abbrev_form => 'M / ( L :/}{: ( P:<-C ))', :alpha => "MOLOIPIOC");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '1', :iform => 'Rot( 132.1.a ) / (( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 )))', :word_form => 'rot( meat->moon ) / ( Lid:/}{:( clay:->vessel ))', :abbrev_form => 'R( M->M ) / ( L :/}{: ( C:->V ))', :alpha => "ROMYMOLOICYV");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '2', :iform => 'Rot( 132.1.a ) / (( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b )))', :word_form => 'rot( meat->moon ) / ( Lid:/}{:( vessel:<-clay ))', :abbrev_form => 'R( M->M ) / ( L :/}{: ( V:<-C ))', :alpha => "ROMYMOLOIVIOC");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '3', :iform => 'Rot( 132.1.a ) / (( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a )))', :word_form => 'rot( meat->moon ) / ( Lid:/}{:( clay:->pot ))', :abbrev_form => 'R( M->M ) / ( L :/}{: ( C:->P ))', :alpha => "ROMYMOLOICYP");
Formula.create( :base => '141', :offset => '007', :subindex => '0', :ord => '4', :iform => 'Rot( 132.1.a ) / (( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b )))', :word_form => 'rot( meat->moon ) / ( Lid:/}{:( pot:<-clay )) ', :abbrev_form => 'R( M->M ) / ( L :/}{: ( P:<-C ))', :alpha => "ROMYMOLOIPIOC");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '1', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( clay:->vessel ))) / ( mollusk:][shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( C:->V ))) / ( M:][S )', :alpha => "ROPOJYKALOICYVOMIS");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '2', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( vessel:<-clay ))) / ( mollusk:][shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( V:<-C ))) / ( M:][S )', :alpha => "ROPOJYKALOIVIOCOMIS");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '3', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( clay:->pot ))) / ( mollusk:][shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( C:->P ))) / ( M:][S )', :alpha => "ROPOJYKALOICYPOMIS");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '4', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( pot:<-clay ))) / ( mollusk:][shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( P:<-C ))) / ( M:][S )', :alpha => "ROPOJYKALOIPIOCOMIS");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '5', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( clay:->vessel ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( C:->V ))) / ( M.S )', :alpha => "ROPOJYKALOICYVOMES");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '6', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( vessel:<-clay ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( V:<-C ))) / ( M.S )', :alpha => "ROPOJYKALOIVIOCOMES");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '7', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( clay:->pot ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( C:->P ))) / ( M.S )', :alpha => "ROPOJYKALOICYPOMES");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '8', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( pot:<-clay ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( P:<-C ))) / ( M.S )', :alpha => "ROPOJYKALOIPIOCOMES");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '9', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.b ):->( 116.0 )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( clay:->vessel ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( C:->V ))) / ( M.S )', :alpha => "ROPOJYKALOICYVOSOM");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '10', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 116.0 ):<-( 141.0.b )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( vessel:<-clay ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( V:<-C ))) / ( M.S )', :alpha => "ROPOJYKALOIVIOCOSOM");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '11', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.b ):->( 141.0.a )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( clay:->pot ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( C:->P ))) / ( M.S )', :alpha => "ROPOJYKALOICYPOSOM");
Formula.create( :base => '141', :offset => '011', :subindex => '0', :ord => '12', :iform => '63.1 / (( 107.1.a->1.20 ) * (( 24.0.a ):/}{:(( 141.0.a ):<-( 141.0.b )))) / ( 150.1 )', :word_form => 'Roof / (( pieces-of-jade->king ) * ( Lid:/}{:( pot:<-clay ))) / ( mollusk.shell )', :abbrev_form => 'R / (( POJ->K) * ( L :/}{: ( P:<-C ))) / ( M.S )', :alpha => "ROPOJYKALOIPIOCOSOM");
Formula.create( :base => '141', :offset => '011', :subindex => 's', :ord => '1', :iform => '63.1 / 107.1', :word_form => 'Roof / (( pieces-of-jade->king ) */\ dot )', :abbrev_form => 'R / (( POJ->K) */\ D )', :alpha => "ROPOJYKA-OUD");
Formula.create( :base => '141', :offset => '011', :subindex => 's', :ord => '2', :iform => '63.1 / (( 107.1.a->1.20 ) */\ 1.1.c )', :word_form => 'Roof / (( pieces-of-jade->king ) */\ dot )', :abbrev_form => 'R / (( POJ->K) */\ D )', :alpha => "ROPOJYKA-OUD");
Formula.create( :base => '141', :offset => '011', :subindex => 's', :ord => '3', :iform => '63.1 / 107.1', :word_form => 'Roof / jade', :abbrev_form => 'R / J', :alpha => "ROJ");
Formula.create( :base => '142', :offset => '000', :subindex => '0', :ord => '1', :iform => '142.0', :word_form => 'Abstract( "servant" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '142', :offset => '000', :subindex => 'a', :ord => '1', :iform => '142.0.a', :word_form => 'Abstract( "minister" )', :abbrev_form => 'A( M )', :alpha => "AM");
Formula.create( :base => '142', :offset => '000', :subindex => 'b', :ord => '1', :iform => '142.0.b', :word_form => 'Abstract( "bow" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '142', :offset => '001', :subindex => '0', :ord => '1', :iform => '142.0::142.0.b', :word_form => 'servant::bows', :abbrev_form => 'S::B', :alpha => "SAB");
Formula.create( :base => '142', :offset => '001', :subindex => '0', :ord => '2', :iform => '142.0.a::142.0.b', :word_form => 'minister::bows', :abbrev_form => 'M::B', :alpha => "MAB");
Formula.create( :base => '142', :offset => '002', :subindex => '0', :ord => '1', :iform => '142.1 * 10.1', :word_form => 'minister::bows * person', :abbrev_form => 'M::B * P', :alpha => "MABAP");
Formula.create( :base => '142', :offset => '017', :subindex => '0', :ord => '1', :iform => '142.1 * 14.1', :word_form => 'minister::bows * ( hand->again )', :abbrev_form => 'M::B * ( H->A )', :alpha => "MABAHYA");
Formula.create( :base => '142', :offset => '022', :subindex => '0', :ord => '1', :iform => '63.1 / 142.1', :word_form => 'Roof / minister::bows', :abbrev_form => 'R / M::B', :alpha => "ROMAB");
Formula.create( :base => '143', :offset => '000', :subindex => '0', :ord => '1', :iform => '143.0', :word_form => 'Abstract( "head" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '143', :offset => '000', :subindex => 'a', :ord => '1', :iform => '143.0.a', :word_form => 'Abstract( "skull" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '143', :offset => '000', :subindex => 'b', :ord => '1', :iform => '143.0.b', :word_form => 'Abstract( "brain" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '143', :offset => '001', :subindex => '0', :ord => '2', :iform => '143.0.a [] 143.0.b', :word_form => 'skull [] brain', :abbrev_form => 'S [] B', :alpha => "SEB");
Formula.create( :base => '143', :offset => '001', :subindex => '0', :ord => '1', :iform => '143.1', :word_form => '{"skull enclosing brain"}', :abbrev_form => 'H', :alpha => "H");
Formula.create( :base => '143', :offset => '002', :subindex => '0', :ord => '2', :iform => '12.1 * ( 2.3.b / 143.1 )', :word_form => 'Reverse-of-person * ( Hair-as-river-is-bent / Skull-and-brain )', :abbrev_form => 'ROP * ( HARIB / SAB )', :alpha => "ROP'AHARIB'OSAB");
Formula.create( :base => '143', :offset => '002', :subindex => '0', :ord => '1', :iform => 'Rev( 10.1 ) * ((( 90.0.a )->( ::( 135.0.a ):>2.3 )) / ( 143.0.a [] 143.0.b ))', :word_form => 'rev( person ) * (( hair->( ::bend:>river )) / skull [] brain )', :abbrev_form => 'R( P ) * (( H->( ::B:>R )) / S [] B )', :alpha => "ROP'AHYBOR'OSEB");
Formula.create( :base => '143', :offset => '006', :subindex => '0', :ord => '1', :iform => '153.1 * ( 143.1->111.1 )', :word_form => '( thread:->silk ) * (( skull [] brain )->field )', :abbrev_form => '( T:->S ) * (( S [] B )->F )', :alpha => "TYSASEBYF");
Formula.create( :base => '143', :offset => '006', :subindex => '0', :ord => '2', :iform => '153.1 * 111.1.c', :word_form => '( thread:->silk ) * Head-as-field', :abbrev_form => '( T:->S ) * HAF', :alpha => "TYSAHAF");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '5', :iform => '( 143.1->111.1 ) / 83.1', :word_form => '(( skull [] brain )->field ) / heart', :abbrev_form => '(( S [] B )->F ) / H', :alpha => "SEBYFOH");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '3', :iform => '111.1  / 83.1', :word_form => 'field / heart', :abbrev_form => '(( S [] B )->F ) / H', :alpha => "FOH");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '7', :iform => '111.1.c / 83.1', :word_form => 'Head-as-field / heart', :abbrev_form => 'HAF / H', :alpha => "HAFOH");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '9', :iform => '111.1.c / 83.1', :word_form => 'Head-as-field / heart-is-open', :abbrev_form => 'HAF / HIO', :alpha => "HAFOHIO");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '1', :iform => '143.1 / 83.1', :word_form => '( skull [] brain ) / heart', :abbrev_form => '( S [] B ) / H', :alpha => "SEBOH");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '2', :iform => '83.1 \ 143.1', :word_form => 'Heart \ ( skull [] brain )', :abbrev_form => 'H \ (( S [] B )->F )', :alpha => "HUSEB");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '4', :iform => '83.1 \ 111.1', :word_form => 'Heart \ field', :abbrev_form => 'H \ F', :alpha => "HUF");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '6', :iform => '83.1 \ ( 143.1->111.1 )', :word_form => 'Heart \ (( skull [] brain )->field )', :abbrev_form => 'H \ (( S [] B )->F )', :alpha => "HUSEBYF");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '8', :iform => '83.1 \ 111.1.c ', :word_form => 'Heart \ Head-as-field', :abbrev_form => 'H \ HAF', :alpha => "HUHAF");
Formula.create( :base => '143', :offset => '007', :subindex => '0', :ord => '10', :iform => '83.1 \ 111.1.c ', :word_form => 'Heart-is-open \ Head-as-field', :abbrev_form => 'HIO \ HAF', :alpha => "HIO-UHAF");
Formula.create( :base => '144', :offset => '000', :subindex => '0', :ord => '1', :iform => '144.0', :word_form => 'abstract( "window" )', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '144', :offset => '000', :subindex => 'a', :ord => '1', :iform => '144.0.a', :word_form => 'abstract( "lattice" )', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '144', :offset => '001', :subindex => '0', :ord => '2', :iform => '144.0 [] 144.0.a', :word_form => 'Window [] lattice', :abbrev_form => 'W [] L', :alpha => "WEL");
Formula.create( :base => '144', :offset => '001', :subindex => '0', :ord => '3', :iform => '144.0.a ][ 144.0', :word_form => 'Lattice ][ Window', :abbrev_form => 'L ][ W', :alpha => "LIW");
Formula.create( :base => '144', :offset => '001', :subindex => '0', :ord => '1', :iform => '144.1', :word_form => '{"window-with-lattice"}', :abbrev_form => 'LW', :alpha => "LW");
Formula.create( :base => '144', :offset => '001', :subindex => 's', :ord => '2', :iform => '14.1 ][ 144.0', :word_form => '( hand->again ) ][ Window', :abbrev_form => '( H->A ) ][ W', :alpha => "HYA-ILIW");
Formula.create( :base => '144', :offset => '001', :subindex => 's', :ord => '1', :iform => '144.0 [] 14.1', :word_form => 'Window [] ( hand->again )', :abbrev_form => 'W [] ( H->A )', :alpha => "WEHYA");
Formula.create( :base => '144', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 144.0 [] 144.0.a ) / alt( 83.1 )', :word_form => '( Window [] lattice ) / alt( heart:open )', :abbrev_form => '( W [] L ) / A( H:O )', :alpha => "WELO-AHIO");
Formula.create( :base => '144', :offset => '002', :subindex => '0', :ord => '4', :iform => '( 144.0.a ][ 144.0 ) / alt( 83.1 )', :word_form => '( Lattice ][ Window ) / alt( heart:open )', :abbrev_form => '( L ][ W ) / A( H:O )', :alpha => "LIWO-AHIO");
Formula.create( :base => '144', :offset => '002', :subindex => '0', :ord => '1', :iform => '144.1 / alt( 83.1 )', :word_form => '( Window [] lattice ) / alt( heart:open )', :abbrev_form => '( W [] L ) / A( H:O )', :alpha => "WELO-AHIO");
Formula.create( :base => '144', :offset => '002', :subindex => '0', :ord => '2', :iform => '144.1 / alt( 83.1 )', :word_form => '( Lattice ][ Window ) / alt( heart:open )', :abbrev_form => '( L ][ W ) / A( H:O )', :alpha => "LIWO-AHIO");
Formula.create( :base => '144', :offset => '006', :subindex => '0', :ord => '3', :iform => '( 63.1 / 29.1 ) / ( 144.0 [] 144.0.a )', :word_form => '( Roof / divide ) / ( Window [] lattice )', :abbrev_form => '( R / D ) / ( W [] L )', :alpha => "RODOWEL");
Formula.create( :base => '144', :offset => '006', :subindex => '0', :ord => '4', :iform => '( 63.1 / 29.1 ) / ( 144.0.a ][ 144.0 )', :word_form => '( Roof / divide ) / ( Lattice ][ Window )', :abbrev_form => '( R / D ) / ( L ][ W )', :alpha => "RODOLIW");
Formula.create( :base => '144', :offset => '006', :subindex => '0', :ord => '1', :iform => '63.2 / ( 144.0 [] 144.0.a )', :word_form => 'Cave / ( Window [] lattice )', :abbrev_form => 'C / ( W [] L )', :alpha => "COWEL");
Formula.create( :base => '144', :offset => '006', :subindex => '0', :ord => '2', :iform => '63.2 / ( 144.0.a ][ 144.0 )', :word_form => 'Cave / ( Lattice ][ Window )', :abbrev_form => 'C / ( L ][ W )', :alpha => "COLIW");
Formula.create( :base => '144', :offset => '007', :subindex => '0', :ord => '1', :iform => '29.1 / ( 144.0 [] 144.0.a ) / 68.46', :word_form => 'divide / ( Window [] lattice ) / say', :abbrev_form => 'D / ( W [] L ) / S', :alpha => "DOWELOS");
Formula.create( :base => '144', :offset => '007', :subindex => '0', :ord => '4', :iform => '29.1 / ( 144.0.a ][ 144.0 ) / 68.46', :word_form => 'divide / ( Lattice ][ Window ) / say', :abbrev_form => 'D / ( L ][ W ) / S', :alpha => "DOLIWOS");
Formula.create( :base => '144', :offset => '007', :subindex => '0', :ord => '7', :iform => '29.1 / ( 69.1 [] 29.1 ) / 68.46', :word_form => 'divide / ( square [] small ) / say', :abbrev_form => 'D / ( S [] S ) / S', :alpha => "DOSESOS");
Formula.create( :base => '144', :offset => '017', :subindex => '0', :ord => '1', :iform => '( 144.0 [] 144.0.a ) / stack( 82.1 )', :word_form => '( Window [] lattice ) / stack( fire )', :abbrev_form => '( W [] L ) / S( F )', :alpha => "WELOSOF");
Formula.create( :base => '144', :offset => '017', :subindex => '0', :ord => '3', :iform => '( 144.0 [] 144.0.a ) / 70.1 / 82.1.a', :word_form => '( Window [] lattice ) / earth / fire-at-bottom', :abbrev_form => '( W [] L ) / E / FAB', :alpha => "WELO-E'OFAB");
Formula.create( :base => '144', :offset => '017', :subindex => '0', :ord => '5', :iform => '( 144.0 [] 144.0.a ) / 70.1 / train( 1.1.c )', :word_form => '( Window [] lattice ) / earth / train( dots )', :abbrev_form => '( W [] L ) / E / T( D )', :alpha => "WELO-E'OTOD");
Formula.create( :base => '144', :offset => '017', :subindex => '0', :ord => '2', :iform => '( 144.0.a ][ 144.0 ) / stack( 82.1 )', :word_form => '( Lattice ][ Window ) / stack( fire )', :abbrev_form => '( L ][ W ) / S( F )', :alpha => "LIWOSOF");
Formula.create( :base => '144', :offset => '017', :subindex => '0', :ord => '4', :iform => '( 144.0.a ][ 144.0 ) / 70.1 / 82.1.a', :word_form => '( Lattice ][ Window ) / earth / fire-at-bottom', :abbrev_form => '( L ][ W ) / E / FAB', :alpha => "LIWO-E'OFAB");
Formula.create( :base => '144', :offset => '017', :subindex => '0', :ord => '6', :iform => '( 144.0.a ][ 144.0 ) / 70.1 / train( 1.1.c )', :word_form => '( Lattice ][ Window ) / earth / train( dots )', :abbrev_form => '( L ][ W ) / E / T( D )', :alpha => "LIWO-E'OTOD");
Formula.create( :base => '145', :offset => '000', :subindex => '0', :ord => '1', :iform => '145.0', :word_form => 'abstract( "cheek" )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '145', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 148.0 }', :word_form => '{ face }', :abbrev_form => '{ F }', :alpha => "F");
Formula.create( :base => '145', :offset => '001', :subindex => '0', :ord => '2', :iform => '148.0:->145.0', :word_form => 'face:->cheek', :abbrev_form => 'F:->C', :alpha => "FYC");
Formula.create( :base => '145', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 148.0:->145.0 ) * 148.12', :word_form => '( face:->cheek ) * ( head->page )', :abbrev_form => '( F:->C ) * ( H->P )', :alpha => "FYCAHYP");
Formula.create( :base => '145', :offset => '002', :subindex => '0', :ord => '1', :iform => '145.1 * 148.12', :word_form => 'cheek * ( head->page )', :abbrev_form => 'C * ( H->P )', :alpha => "CAHYP");
Formula.create( :base => '145', :offset => '003', :subindex => '0', :ord => '1', :iform => '54.1 * ( 148.0:->145.0 )', :word_form => 'Woman * ( face:->cheek )', :abbrev_form => 'W * ( F:->C )', :alpha => "WAFYC");
Formula.create( :base => '145', :offset => '003', :subindex => '0', :ord => '2', :iform => '54.1 * 145', :word_form => 'Woman * cheek', :abbrev_form => 'W * C', :alpha => "WAC");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 145 * 58.1 ) / 82.1', :word_form => '( cheek * fetus ) / fire', :abbrev_form => '( C * F ) / F', :alpha => "CAFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 145 * 58.1 ) / 82.1', :word_form => '( cheek * snake-or-fetus ) / fire', :abbrev_form => '( C * SOF ) / F', :alpha => "CASOFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '6', :iform => '( 145 * 58.1 ) / 82.1.a', :word_form => '( cheek * fetus ) / Fire-at-bottom', :abbrev_form => '( C * F ) / FAB', :alpha => "CAFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '8', :iform => '( 145 * 58.1 ) / 82.1.a', :word_form => '( cheek * snake-or-fetus ) / Fire-at-bottom', :abbrev_form => '( C * SOF ) / FAB', :alpha => "CASOFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '10', :iform => '( 145 * 58.1 ) / Train( 1.1.c )', :word_form => '( cheek * fetus ) / train( dots )', :abbrev_form => '( C * F ) / T( D )', :alpha => "CAFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '12', :iform => '( 145 * 58.1 ) / Train( 1.1.c )', :word_form => '( cheek * snake-or-fetus ) / train( dots )', :abbrev_form => '( C * SOF ) / T( D )', :alpha => "CASOFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '14', :iform => '( 145 * 58.1 ) / 82.1', :word_form => '( cheek * fetus ) / fire', :abbrev_form => '( C * F ) / F', :alpha => "CAFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '16', :iform => '( 145 * 58.1 ) / 82.1', :word_form => '( cheek * snake-or-fetus ) / fire', :abbrev_form => '( C * SOF ) / F', :alpha => "CASOFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '18', :iform => '( 145 * 58.1 ) / 82.1.a', :word_form => '( cheek * fetus ) / Fire-at-bottom', :abbrev_form => '( C * F ) / FAB', :alpha => "CAFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '20', :iform => '( 145 * 58.1 ) / 82.1.a', :word_form => '( cheek * snake-or-fetus ) / Fire-at-bottom', :abbrev_form => '( C * SOF ) / FAB', :alpha => "CASOFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '22', :iform => '( 145 * 58.1 ) / Train( 1.1.c )', :word_form => '( cheek * fetus ) / train( dots )', :abbrev_form => '( C * F ) / T( D )', :alpha => "CAFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '24', :iform => '( 145 * 58.1 ) / Train( 1.1.c )', :word_form => '( cheek * snake-or-fetus ) / train( dots )', :abbrev_form => '( C * SOF ) / T( D )', :alpha => "CASOFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '1', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1', :word_form => '(( face:->cheek ) * fetus ) / fire', :abbrev_form => '(( F:->C ) * F ) / F', :alpha => "FYCAFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '3', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1', :word_form => '(( face:->cheek ) * snake-or-fetus ) / fire', :abbrev_form => '(( F:->C ) * SOF ) / F', :alpha => "FYCASOFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '5', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1.a', :word_form => '(( face:->cheek ) * fetus ) / Fire-at-bottom', :abbrev_form => '(( F:->C ) * F ) / FAB', :alpha => "FYCAFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '7', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1.a', :word_form => '(( face:->cheek ) * snake-or-fetus ) / Fire-at-bottom', :abbrev_form => '(( F:->C ) * SOF ) / FAB', :alpha => "FYCASOFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '9', :iform => '(( 148.0:->145.0 ) * 58.1 ) / Train( 1.1.c )', :word_form => '(( face:->cheek ) * fetus ) / train( dots )', :abbrev_form => '(( F:->C ) * F ) / T( D )', :alpha => "FYCAFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '11', :iform => '(( 148.0:->145.0 ) * 58.1 ) / Train( 1.1.c )', :word_form => '(( face:->cheek ) * snake-or-fetus ) / train( dots )', :abbrev_form => '(( F:->C ) * SOF ) / T( D )', :alpha => "FYCASOFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '13', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1', :word_form => '(( face:->cheek ) * fetus ) / fire', :abbrev_form => '(( F:->C ) * F ) / F', :alpha => "FYCAFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '15', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1', :word_form => '(( face:->cheek ) * snake-or-fetus ) / fire', :abbrev_form => '(( F:->C ) * SOF ) / F', :alpha => "FYCASOFOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '17', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1.a', :word_form => '(( face:->cheek ) * fetus ) / Fire-at-bottom', :abbrev_form => '(( F:->C ) * F ) / FAB', :alpha => "FYCAFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '19', :iform => '(( 148.0:->145.0 ) * 58.1 ) / 82.1.a', :word_form => '(( face:->cheek ) * snake-or-fetus ) / Fire-at-bottom', :abbrev_form => '(( F:->C ) * SOF ) / FAB', :alpha => "FYCASOFOFAB");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '21', :iform => '(( 148.0:->145.0 ) * 58.1 ) / Train( 1.1.c )', :word_form => '(( face:->cheek ) * fetus ) / train( dots )', :abbrev_form => '(( F:->C ) * F ) / T( D )', :alpha => "FYCAFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '23', :iform => '(( 148.0:->145.0 ) * 58.1 ) / Train( 1.1.c )', :word_form => '(( face:->cheek ) * snake-or-fetus ) / train( dots )', :abbrev_form => '(( F:->C ) * SOF ) / T( D )', :alpha => "FYCASOFOTOD");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '1', :iform => '( 148.0:->145.0 ) * 58.1', :word_form => '( face:->cheek ) * fetus', :abbrev_form => '( F:->C ) * F', :alpha => "FYCAF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 148.0:->145.0 ) * 58.1', :word_form => '( face:->cheek ) * snake-or-fetus', :abbrev_form => '( F:->C ) * SOF', :alpha => "FYCASOF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '2', :iform => '145 * 58.1', :word_form => 'cheek * fetus', :abbrev_form => 'C * F', :alpha => "CAF");
Formula.create( :base => '145', :offset => '004', :subindex => '0', :ord => '4', :iform => '145 * 58.1', :word_form => 'cheek * snake-or-fetus', :abbrev_form => 'C * SOF', :alpha => "CASOF");
Formula.create( :base => '146', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 91.0 ):<.( 103.0 )', :word_form => 'animal:<.claws', :abbrev_form => 'A:<.C', :alpha => "AIC");
Formula.create( :base => '146', :offset => '001', :subindex => '0', :ord => '3', :iform => '(( 91.0 ):<.( 103.0 )):->(:~:91.0.b )', :word_form => '( animal:<.claws ):->( :~:cat )', :abbrev_form => '( A:<.C ):->(:~:C )', :alpha => "AICY-ILAC");
Formula.create( :base => '146', :offset => '001', :subindex => '0', :ord => '4', :iform => '(( 91.0 ):<.( 103.0 )):->(:~:91.0.b )', :word_form => '( animal:<.claws ):->( :~:cat )', :abbrev_form => '( A:<.C ):->(:~:C )', :alpha => "AICY-ILIC");
Formula.create( :base => '146', :offset => '001', :subindex => '0', :ord => '5', :iform => '(( 91.0 ):<.( 103.0 )):->(:~:91.0.b )', :word_form => '( animal:<.claws ):->( :~:cat )', :abbrev_form => '( A:<.C ):->(:~:C )', :alpha => "AICY-ILOC");
Formula.create( :base => '146', :offset => '001', :subindex => '0', :ord => '6', :iform => '(( 91.0 ):<.( 103.0 )):~:91.0.b', :word_form => '( animal:<.claws ):~:cat', :abbrev_form => '( A:<.C ):~:C', :alpha => "AICILAC");
Formula.create( :base => '146', :offset => '001', :subindex => '0', :ord => '7', :iform => '(( 91.0 ):<.( 103.0 )):~:91.0.b', :word_form => '( animal:<.claws ):~:cat', :abbrev_form => '( A:<.C ):~:C', :alpha => "AICILIC");
Formula.create( :base => '146', :offset => '001', :subindex => '0', :ord => '1', :iform => '146.1', :word_form => '{ "clawed beast" }', :abbrev_form => 'MA', :alpha => "MA");
Formula.create( :base => '147', :offset => '000', :subindex => '0', :ord => '1', :iform => '147.0', :word_form => 'abstract( "body" )', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '147', :offset => '000', :subindex => 'a', :ord => '1', :iform => '147.0.a', :word_form => 'abstract( "profile" )', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '147', :offset => '000', :subindex => 'b', :ord => '1', :iform => '147.0.b', :word_form => 'abstract( "identity" )', :abbrev_form => 'A( I )', :alpha => "AI");
Formula.create( :base => '147', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 10.0 ).( 147.0 ).( 147.0.a )', :word_form => 'Person.body.Profile', :abbrev_form => 'P.B.P', :alpha => "POBOP");
Formula.create( :base => '147', :offset => '001', :subindex => '0', :ord => '6', :iform => '( 10.0 ).( 147.0 ).( 147.0.a )', :word_form => 'Person.body.Profile', :abbrev_form => 'P.B.P', :alpha => "PEBEP");
Formula.create( :base => '147', :offset => '001', :subindex => '0', :ord => '3', :iform => '147.0.a( 147.0 )', :word_form => 'Profile( body )', :abbrev_form => 'P( B )', :alpha => "POB");
Formula.create( :base => '147', :offset => '001', :subindex => '0', :ord => '4', :iform => '147.0.a( 147.0 ( 10.0 ))', :word_form => 'Profile( body( person ))', :abbrev_form => 'P( B( P ))', :alpha => "POBOP");
Formula.create( :base => '147', :offset => '001', :subindex => '0', :ord => '1', :iform => '147.1', :word_form => '{"human profile"}', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '147', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 10.0 ).( 147.0 ).( 147.0.a ) * 32.7', :word_form => 'Person.body.Profile * arrow', :abbrev_form => 'P.B.P * A', :alpha => "POBOPA-A");
Formula.create( :base => '147', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 10.0 ).( 147.0 ).( 147.0.a ) * 32.7', :word_form => 'Person.body.Profile * arrow', :abbrev_form => 'P.B.P * A', :alpha => "PEBEPA-A");
Formula.create( :base => '147', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 10.0 ).( 147.0 ).( 147.0.a ) * 14.63', :word_form => 'Person.body.Profile * ( hand:->inch )', :abbrev_form => 'P.B.P * ( H:->I )', :alpha => "POBOPAHY-I");
Formula.create( :base => '147', :offset => '002', :subindex => '0', :ord => '4', :iform => '( 10.0 ).( 147.0 ).( 147.0.a ) * 14.63', :word_form => 'Person.body.Profile * ( hand:->inch )', :abbrev_form => 'P.B.P * ( H:->I )', :alpha => "PEBEPAHY-I");
Formula.create( :base => '147', :offset => '002', :subindex => '0', :ord => '5', :iform => '( 10.0 ).( 147.0 ).( 147.0.a ) * ( 32.7->14.63 )', :word_form => 'Person.body.Profile * ( arrow->( hand:->inch ))', :abbrev_form => 'P.B.P * ( A->( H:->I ))', :alpha => "POBOPA-AYHY-I");
Formula.create( :base => '147', :offset => '002', :subindex => '0', :ord => '6', :iform => '( 10.0 ).( 147.0 ).( 147.0.a ) * ( 32.7->14.63 )', :word_form => 'Person.body.Profile * ( arrow->( hand:->inch ))', :abbrev_form => 'P.B.P * ( A->( H:->I ))', :alpha => "PEBEPA-AYHY-I");
Formula.create( :base => '148', :offset => '000', :subindex => '0', :ord => '1', :iform => '148.0', :word_form => 'abstract( "face" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '148', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 148.0 }', :word_form => '{ face }', :abbrev_form => '{ F }', :alpha => "F");
Formula.create( :base => '148', :offset => '001', :subindex => '0', :ord => '2', :iform => '148.0->( 1.1.a / 139.1 )', :word_form => 'face->( dash / nose )', :abbrev_form => 'F->( D / N )', :alpha => "FYDON");
Formula.create( :base => '148', :offset => '001', :subindex => '0', :ord => '3', :iform => '148.0->( 1.1.a / 139.1 )', :word_form => 'face->( bar / nose )', :abbrev_form => 'F->( B / N )', :alpha => "FYBON");
Formula.create( :base => '148', :offset => '002', :subindex => '0', :ord => '1', :iform => '(( 90.0.a )->( ::( 135.0.a ):>2.3 )) / ( 148.0->( 1.1.a / 139.1 ))', :word_form => '( hair->( ::bend:>river )) / ( face->( dash / nose ))', :abbrev_form => '( H->( ::B:>R )) / ( F->( D / N ))', :alpha => "HYBOROFYDON");
Formula.create( :base => '148', :offset => '002', :subindex => '0', :ord => '2', :iform => '(( 90.0.a )->( ::( 135.0.a ):>2.3 )) / ( 148.0->( 1.1.a / 139.1 ))', :word_form => '( hair->( ::bend:>river )) / ( face->( bar / nose ))', :abbrev_form => '( H->( ::B:>R )) / ( F->( B / N ))', :alpha => "HYBOROFYBON");
Formula.create( :base => '148', :offset => '002', :subindex => '0', :ord => '3', :iform => '(( 90.0.a )->( ::( 135.0.a ):>2.3 )) / 148.1', :word_form => '( hair->( ::bend:>river )) / face', :abbrev_form => '( H->( ::B:>R )) / F', :alpha => "HYBOROF");
Formula.create( :base => '148', :offset => '002', :subindex => '0', :ord => '4', :iform => '90.0.a / ( 148.0->( 1.1.a / 139.1 ))', :word_form => 'hair / ( face->( dash / nose ))', :abbrev_form => 'H / ( F->( D / N ))', :alpha => "HOFYDON");
Formula.create( :base => '148', :offset => '002', :subindex => '0', :ord => '5', :iform => '90.0.a / ( 148.0->( 1.1.a / 139.1 ))', :word_form => 'hair / ( face->( bar / nose ))', :abbrev_form => 'H / ( F->( B / N ))', :alpha => "HOFYBON");
Formula.create( :base => '148', :offset => '002', :subindex => '0', :ord => '6', :iform => '90.0.a / 148.1', :word_form => 'hair / face', :abbrev_form => 'H / F', :alpha => "HOF");
Formula.create( :base => '148', :offset => '008', :subindex => '0', :ord => '6', :iform => '( 148.0->( 1.1.a / 139.1 )) /+][ 69.1', :word_form => '( face->( dash / nose )) /+][ square', :abbrev_form => '( F->( D / N )) /+][ S', :alpha => "FYDONO-I'IS");
Formula.create( :base => '148', :offset => '008', :subindex => '0', :ord => '7', :iform => '( 148.0->( 1.1.a / 139.1 )) /+][ 69.1', :word_form => '( face->( bar / nose )) /+][ square', :abbrev_form => '( F->( B / N )) /+][ S', :alpha => "FYBONO-I'IS");
Formula.create( :base => '148', :offset => '008', :subindex => '0', :ord => '1', :iform => '69.0 [] 114.9', :word_form => 'Perimeter [] eye', :abbrev_form => 'P [] E', :alpha => "PE-E");
Formula.create( :base => '148', :offset => '008', :subindex => '0', :ord => '2', :iform => '69.1 []+ 148.1', :word_form => 'Square []+ face', :abbrev_form => 'S []+ F', :alpha => "SE-IF");
Formula.create( :base => '148', :offset => '008', :subindex => '0', :ord => '3', :iform => '69.1 []+\ 148.1', :word_form => 'Square []+\ face', :abbrev_form => 'S []+\ F', :alpha => "SE-I-UF");
Formula.create( :base => '148', :offset => '008', :subindex => '0', :ord => '4', :iform => '69.1 []+\ ( 148.0->( 1.1.a / 139.1 ))', :word_form => 'Square []+\ ( face->( dash / nose ))', :abbrev_form => 'S []+\ ( F->( D / N ))', :alpha => "SE-I-UFYDON");
Formula.create( :base => '148', :offset => '008', :subindex => '0', :ord => '5', :iform => '69.1 []+\ ( 148.0->( 1.1.a / 139.1 ))', :word_form => 'Square []+\ ( face->( bar / nose ))', :abbrev_form => 'S []+\ ( F->( B / N ))', :alpha => "SE-I-UFYBON");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '1', :iform => '( 148.0->( 1.1.a / 139.1 )) / ( 10.0:->11.0 )', :word_form => '( face->( dash / nose )) / ( person:->legs )', :abbrev_form => '( F->( D / N )) / ( P:->L )', :alpha => "FYDONOPYL");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '2', :iform => '( 148.0->( 1.1.a / 139.1 )) / ( 10.0:->11.0 )', :word_form => '( face->( bar / nose )) / ( person:->legs )', :abbrev_form => '( F->( B / N )) / ( P:->L )', :alpha => "FYBONOPYL");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '4', :iform => '1.1.a / 139.1 / 29.1', :word_form => 'bar / nose / divide', :abbrev_form => 'B / N / D', :alpha => "BONOD");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '5', :iform => '1.1.a / 1.1.c / 150.1', :word_form => 'bar / dot / mollusk.shell', :abbrev_form => 'B / D / M.S', :alpha => "BODOSOM");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '6', :iform => '1.1.a / 1.1.c / 150.1', :word_form => 'bar / dot / mollusk.shell', :abbrev_form => 'B / D / M.S', :alpha => "BODO-MES");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '3', :iform => '148.1 / ( 10.0:->11.0 )', :word_form => 'face / ( person:->legs )', :abbrev_form => 'F / ( P:->L )', :alpha => "FOPYL");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '7', :iform => '148.12', :word_form => 'head->page', :abbrev_form => 'H->P', :alpha => "HYP");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '1', :iform => '( 148.0->( 1.1.a / 139.1 )) / ( 10.0:->11.0 )', :word_form => '( face->( dash / nose )) / ( person:->legs )', :abbrev_form => '( F->( D / N )) / ( P:->L )', :alpha => "FYDONOPYL");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '2', :iform => '( 148.0->( 1.1.a / 139.1 )) / ( 10.0:->11.0 )', :word_form => '( face->( bar / nose )) / ( person:->legs )', :abbrev_form => '( F->( B / N )) / ( P:->L )', :alpha => "FYBONOPYL");
Formula.create( :base => '148', :offset => '012', :subindex => '0', :ord => '3', :iform => '148.1 / ( 10.0:->11.0 )', :word_form => 'face / ( person:->legs )', :abbrev_form => 'F / ( P:->L )', :alpha => "FOPYL");
Formula.create( :base => '148', :offset => '020', :subindex => '0', :ord => '1', :iform => '( 148.0->( 1.1.a / 139.1 )) / 42.5', :word_form => '( face->( dash / nose )) / dagger-ax', :abbrev_form => '( F->( D / N )) / DA', :alpha => "FYDONODA");
Formula.create( :base => '148', :offset => '020', :subindex => '0', :ord => '2', :iform => '( 148.0->( 1.1.a / 139.1 )) / 42.5', :word_form => '( face->( bar / nose )) / dagger-ax', :abbrev_form => '( F->( B / N )) / DA', :alpha => "FYBONODA");
Formula.create( :base => '148', :offset => '020', :subindex => '0', :ord => '3', :iform => '148.0 / 42.5', :word_form => 'face / dagger-ax', :abbrev_form => 'F / DA', :alpha => "FODA");
Formula.create( :base => '149', :offset => '000', :subindex => '0', :ord => '1', :iform => '149.0', :word_form => 'abstract( "horn" )', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '149', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 149.0 }', :word_form => '{ horn }', :abbrev_form => '{ H }', :alpha => "H");
Formula.create( :base => '149', :offset => '001', :subindex => '0', :ord => '3', :iform => '10.1.d / 69.35', :word_form => 'Person-at-top / use', :abbrev_form => 'PAT / U', :alpha => "PATO-U");
Formula.create( :base => '149', :offset => '001', :subindex => '0', :ord => '5', :iform => '10.1.d / ( 23.1 {}/ 70.1 )', :word_form => 'Person-at-top / ( border {}/ earth )', :abbrev_form => 'PAT / ( B {}/ E )', :alpha => "PATOBEO-E");
Formula.create( :base => '149', :offset => '001', :subindex => '0', :ord => '7', :iform => '10.1.d / ( 80.1 {} 4.1 )', :word_form => 'Person-at-top / (( moon:->crescent ) {}+ post )', :abbrev_form => 'PAT / (( M:->C ) {}+ P )', :alpha => "PATOMYCE-IP");
Formula.create( :base => '149', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 10.1.d / 69.35 ) * ( 35.1 / 92.1 )', :word_form => '( Person-at-top / use ) * ( knife / ox )', :abbrev_form => '( PAT / U ) * ( K / O )', :alpha => "PATO-U'AKO-O");
Formula.create( :base => '149', :offset => '002', :subindex => '0', :ord => '5', :iform => '( 10.1.d / ( 23.1 {}/ 70.1 )) * ( 35.1 / 92.1 )', :word_form => '( Person-at-top / ( border {}/ earth )) * ( knife / ox )', :abbrev_form => '( PAT / ( B {}/ E )) * ( K / O )', :alpha => "PATOBEO-E-AKO-O");
Formula.create( :base => '149', :offset => '002', :subindex => '0', :ord => '7', :iform => '( 10.1.d / ( 80.1 {} 4.1 )) * ( 35.1 / 92.1 )', :word_form => '( Person-at-top / (( moon:->crescent ) {}+ post )) * ( knife / ox )', :abbrev_form => '( PAT / (( M:->C ) {}+ P )) * ( K / O )', :alpha => "PATOMYCE-IPAKO-O");
Formula.create( :base => '149', :offset => '002', :subindex => '0', :ord => '1', :iform => '149.1 * ( 35.1 / 92.1 )', :word_form => 'Horn * ( knife / ox )', :abbrev_form => 'H * ( K / O )', :alpha => "HAKO-O");
Formula.create( :base => '150', :offset => '000', :subindex => '0', :ord => '1', :iform => '150.0', :word_form => 'abstract( "mollusk" )', :abbrev_form => 'A(M )', :alpha => "AM");
Formula.create( :base => '150', :offset => '000', :subindex => 'a', :ord => '1', :iform => '150.0.a', :word_form => 'abstract( "shell" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '150', :offset => '001', :subindex => '0', :ord => '1', :iform => '( 150.0 ).( 150.0.a )', :word_form => 'mollusk.shell', :abbrev_form => 'M.S', :alpha => "MES");
Formula.create( :base => '150', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 150.0 ).( 150.0.a )', :word_form => 'mollusk.shell', :abbrev_form => 'M.S', :alpha => "SOM");
Formula.create( :base => '150', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 150.0 ) :][ ( 150.0.a )', :word_form => 'Mollusk :][ shell', :abbrev_form => 'M :][ S', :alpha => "MIS");
Formula.create( :base => '150', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 150.0.a ) :[] ( 150.0 )', :word_form => 'Shell :[] Mollusk', :abbrev_form => 'S :[] M', :alpha => "SEM");
Formula.create( :base => '150', :offset => '002', :subindex => '0', :ord => '1', :iform => '(( 150.0 ).( 150.0.a ))^2', :word_form => '( mollusk.shell )^2', :abbrev_form => '( M.S )^2', :alpha => "MESUT");
Formula.create( :base => '150', :offset => '002', :subindex => '0', :ord => '2', :iform => '(( 150.0 ).( 150.0.a ))^2', :word_form => '( mollusk.shell )^2', :abbrev_form => '( M.S )^2', :alpha => "SOMUT");
Formula.create( :base => '150', :offset => '002', :subindex => '0', :ord => '3', :iform => '(( 150.0 ) :][ ( 150.0.a ))^2', :word_form => '( Mollusk :][ shell )^2', :abbrev_form => '( M :][ S )^2', :alpha => "MISUT");
Formula.create( :base => '150', :offset => '002', :subindex => '0', :ord => '4', :iform => '(( 150.0.a ) :[] ( 150.0 ))^2', :word_form => '( Shell :[] Mollusk )^2', :abbrev_form => '( S :[] M )^2', :alpha => "SEMUT");
Formula.create( :base => '150', :offset => '006', :subindex => '0', :ord => '1', :iform => '(( 150.0 ).( 150.0.a )) * 26.2', :word_form => '( mollusk.shell ) * tap', :abbrev_form => '( M.S ) * T', :alpha => "MESAT");
Formula.create( :base => '150', :offset => '006', :subindex => '0', :ord => '2', :iform => '(( 150.0 ).( 150.0.a )) * 26.2', :word_form => '( mollusk.shell ) * tap', :abbrev_form => '( M.S ) * T', :alpha => "SOMAT");
Formula.create( :base => '150', :offset => '006', :subindex => '0', :ord => '3', :iform => '(( 150.0 ) :][ ( 150.0.a )) * 26.2', :word_form => '( Mollusk :][ shell ) * tap', :abbrev_form => '( M :][ S ) * T', :alpha => "MISAT");
Formula.create( :base => '150', :offset => '006', :subindex => '0', :ord => '4', :iform => '(( 150.0.a ) :[] ( 150.0 )) * 26.2', :word_form => '( Shell :[] Mollusk ) * tap', :abbrev_form => '( S :[] M ) * T', :alpha => "SEMAT");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '5', :iform => '( 68.0.b->68.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( object->mouth ) / ( mollusk.shell )', :abbrev_form => '( O->M ) / ( M.S )', :alpha => "OYMOMES");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '6', :iform => '( 68.0.b->68.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( object->mouth ) / ( mollusk.shell )', :abbrev_form => '( O->M ) / ( M.S )', :alpha => "OYMOSOM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '7', :iform => '( 68.0.b->68.0 ) / (( 150.0 ) :][ ( 150.0.a ))', :word_form => '( object->mouth ) / ( Mollusk :][ shell )', :abbrev_form => '( O->M ) / ( M :][ S )', :alpha => "OYMOMIS");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '8', :iform => '( 68.0.b->68.0 ) / (( 150.0.a ) :[] ( 150.0 ))', :word_form => '( object->mouth ) / ( Shell :[] Mollusk )', :abbrev_form => '( O->M ) / ( S :[] M )', :alpha => "OYMOSEM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '13', :iform => '( 68.0.b->68.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( object->mouth ) / ( mollusk.shell )', :abbrev_form => '( O->M ) / ( M.S )', :alpha => "OYMOMES");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '14', :iform => '( 68.0.b->68.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( object->mouth ) / ( mollusk.shell )', :abbrev_form => '( O->M ) / ( M.S )', :alpha => "OYMOSOM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '15', :iform => '( 68.0.b->68.0 ) / (( 150.0 ) :][ ( 150.0.a ))', :word_form => '( object->mouth ) / ( Mollusk :][ shell )', :abbrev_form => '( O->M ) / ( M :][ S )', :alpha => "OYMOMIS");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '16', :iform => '( 68.0.b->68.0 ) / (( 150.0.a ) :[] ( 150.0 ))', :word_form => '( object->mouth ) / ( Shell :[] Mollusk )', :abbrev_form => '( O->M ) / ( S :[] M )', :alpha => "OYMOSEM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '21', :iform => '( 68.0.b->68.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( object->mouth ) / ( mollusk.shell )', :abbrev_form => '( O->M ) / ( M.S )', :alpha => "OYMOMES");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '22', :iform => '( 68.0.b->68.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( object->mouth ) / ( mollusk.shell )', :abbrev_form => '( O->M ) / ( M.S )', :alpha => "OYMOSOM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '23', :iform => '( 68.0.b->68.0 ) / (( 150.0 ) :][ ( 150.0.a ))', :word_form => '( object->mouth ) / ( Mollusk :][ shell )', :abbrev_form => '( O->M ) / ( M :][ S )', :alpha => "OYMOMIS");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '24', :iform => '( 68.0.b->68.0 ) / (( 150.0.a ) :[] ( 150.0 ))', :word_form => '( object->mouth ) / ( Shell :[] Mollusk )', :abbrev_form => '( O->M ) / ( S :[] M )', :alpha => "OYMOSEM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '1', :iform => '68.1 / (( 150.0 ).( 150.0.a ))', :word_form => 'Object / ( mollusk.shell )', :abbrev_form => 'O / ( M.S )', :alpha => "O-OMES");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '2', :iform => '68.1 / (( 150.0 ).( 150.0.a ))', :word_form => 'Object / ( mollusk.shell )', :abbrev_form => 'O / ( M.S )', :alpha => "O-OSOM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '3', :iform => '68.1 / (( 150.0 ) :][ ( 150.0.a ))', :word_form => 'Object / ( Mollusk :][ shell )', :abbrev_form => 'O / ( M :][ S )', :alpha => "O-OMIS");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '4', :iform => '68.1 / (( 150.0.a ) :[] ( 150.0 ))', :word_form => 'Object / ( Shell :[] Mollusk )', :abbrev_form => 'O / ( S :[] M )', :alpha => "O-OSEM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '9', :iform => '68.1 / (( 150.0 ).( 150.0.a ))', :word_form => 'Object / ( mollusk.shell )', :abbrev_form => 'O / ( M.S )', :alpha => "O-OMES");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '10', :iform => '68.1 / (( 150.0 ).( 150.0.a ))', :word_form => 'Object / ( mollusk.shell )', :abbrev_form => 'O / ( M.S )', :alpha => "O-OSOM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '11', :iform => '68.1 / (( 150.0 ) :][ ( 150.0.a ))', :word_form => 'Object / ( Mollusk :][ shell )', :abbrev_form => 'O / ( M :][ S )', :alpha => "O-OMIS");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '12', :iform => '68.1 / (( 150.0.a ) :[] ( 150.0 ))', :word_form => 'Object / ( Shell :[] Mollusk )', :abbrev_form => 'O / ( S :[] M )', :alpha => "O-OSEM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '17', :iform => '68.1 / (( 150.0 ).( 150.0.a ))', :word_form => 'Object / ( mollusk.shell )', :abbrev_form => 'O / ( M.S )', :alpha => "O-OMES");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '18', :iform => '68.1 / (( 150.0 ).( 150.0.a ))', :word_form => 'Object / ( mollusk.shell )', :abbrev_form => 'O / ( M.S )', :alpha => "O-OSOM");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '19', :iform => '68.1 / (( 150.0 ) :][ ( 150.0.a ))', :word_form => 'Object / ( Mollusk :][ shell )', :abbrev_form => 'O / ( M :][ S )', :alpha => "O-OMIS");
Formula.create( :base => '150', :offset => '007', :subindex => '0', :ord => '20', :iform => '68.1 / (( 150.0.a ) :[] ( 150.0 ))', :word_form => 'Object / ( Shell :[] Mollusk )', :abbrev_form => 'O / ( S :[] M )', :alpha => "O-OSEM");
Formula.create( :base => '150', :offset => '012', :subindex => '0', :ord => '1', :iform => '(( 150.0 ).( 150.0.a )) * 35.1.a', :word_form => '( mollusk.shell ) * knife-at-right', :abbrev_form => '( M.S ) * KAR', :alpha => "MESAKAR");
Formula.create( :base => '150', :offset => '012', :subindex => '0', :ord => '2', :iform => '(( 150.0 ).( 150.0.a )) * 35.1.a', :word_form => '( mollusk.shell ) * knife-at-right', :abbrev_form => '( M.S ) * KAR', :alpha => "SOMAKAR");
Formula.create( :base => '150', :offset => '012', :subindex => '0', :ord => '3', :iform => '(( 150.0 ) :][ ( 150.0.a )) * 35.1.a', :word_form => '( Mollusk :][ shell ) * knife-at-right', :abbrev_form => '( M :][ S ) * KAR', :alpha => "MISAKAR");
Formula.create( :base => '150', :offset => '012', :subindex => '0', :ord => '4', :iform => '(( 150.0.a ) :[] ( 150.0 )) * 35.1.a', :word_form => '( Shell :[] Mollusk ) * knife-at-right', :abbrev_form => '( S :[] M ) * KAR', :alpha => "SEMAKAR");
Formula.create( :base => '150', :offset => '017', :subindex => '0', :ord => '1', :iform => '10.1.d / (( 150.0 ).( 150.0.a ))', :word_form => 'Person-at-top / ( mollusk.shell )', :abbrev_form => 'PAT / ( M.S )', :alpha => "PATOMES");
Formula.create( :base => '150', :offset => '017', :subindex => '0', :ord => '2', :iform => '10.1.d / (( 150.0 ).( 150.0.a ))', :word_form => 'Person-at-top / ( mollusk.shell )', :abbrev_form => 'PAT / ( M.S )', :alpha => "PATOSOM");
Formula.create( :base => '150', :offset => '017', :subindex => '0', :ord => '3', :iform => '10.1.d / (( 150.0 ) :][ ( 150.0.a ))', :word_form => 'Person-at-top / ( Mollusk :][ shell )', :abbrev_form => 'PAT / ( M :][ S )', :alpha => "PATOMIS");
Formula.create( :base => '150', :offset => '017', :subindex => '0', :ord => '4', :iform => '10.1.d / (( 150.0.a ) :[] ( 150.0 ))', :word_form => 'Person-at-top / ( Shell :[] Mollusk )', :abbrev_form => 'PAT / ( S :[] M )', :alpha => "PATOSEM");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '9', :iform => '( 3.22->114.1.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( net->eye ) / ( mollusk.shell )', :abbrev_form => '( N->E ) / ( M.S )', :alpha => "NYE-OMES");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '10', :iform => '( 3.22->114.1.0 ) / (( 150.0 ).( 150.0.a ))', :word_form => '( net->eye ) / ( mollusk.shell )', :abbrev_form => '( N->E ) / ( M.S )', :alpha => "NYE-OSOM");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '11', :iform => '( 3.22->114.1.0 ) / (( 150.0 ) :][ ( 150.0.a ))', :word_form => '( net->eye ) / ( Mollusk :][ shell )', :abbrev_form => '( N->E ) / ( M :][ S )', :alpha => "NYE-OMIS");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '12', :iform => '( 3.22->114.1.0 ) / (( 150.0.a ) :[] ( 150.0 ))', :word_form => '( net->eye ) / ( Shell :[] Mollusk )', :abbrev_form => '( N->E ) / ( S :[] M )', :alpha => "NYE-OSEM");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '1', :iform => '3.22 / (( 150.0 ).( 150.0.a ))', :word_form => 'Net / ( mollusk.shell )', :abbrev_form => 'N / ( M.S )', :alpha => "NOMES");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '2', :iform => '3.22 / (( 150.0 ).( 150.0.a ))', :word_form => 'Net / ( mollusk.shell )', :abbrev_form => 'N / ( M.S )', :alpha => "NOSOM");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '3', :iform => '3.22 / (( 150.0 ) :][ ( 150.0.a ))', :word_form => 'Net / ( Mollusk :][ shell )', :abbrev_form => 'N / ( M :][ S )', :alpha => "NOMIS");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '4', :iform => '3.22 / (( 150.0.a ) :[] ( 150.0 ))', :word_form => 'Net / ( Shell :[] Mollusk )', :abbrev_form => 'N / ( S :[] M )', :alpha => "NOSEM");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '5', :iform => '3.22.a / (( 150.0 ).( 150.0.a ))', :word_form => 'Net-at-top / ( mollusk.shell )', :abbrev_form => 'NAT / ( M.S )', :alpha => "NATOMES");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '6', :iform => '3.22.a / (( 150.0 ).( 150.0.a ))', :word_form => 'Net-at-top / ( mollusk.shell )', :abbrev_form => 'NAT / ( M.S )', :alpha => "NATOSOM");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '7', :iform => '3.22.a / (( 150.0 ) :][ ( 150.0.a ))', :word_form => 'Net-at-top / ( Mollusk :][ shell )', :abbrev_form => 'NAT / ( M :][ S )', :alpha => "NATOMIS");
Formula.create( :base => '150', :offset => '018', :subindex => '0', :ord => '8', :iform => '3.22.a / (( 150.0.a ) :[] ( 150.0 ))', :word_form => 'Net-at-top / ( Shell :[] Mollusk )', :abbrev_form => 'NAT / ( S :[] M )', :alpha => "NATOSEM");
Formula.create( :base => '150', :offset => '026', :subindex => '0', :ord => '1', :iform => '(( 150.0 ).( 150.0.a )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( mollusk.shell ) / ( Left::join:> right )', :abbrev_form => '( M.S ) / ( L::J:>R )', :alpha => "MESOLAJOR");
Formula.create( :base => '150', :offset => '026', :subindex => '0', :ord => '2', :iform => '(( 150.0 ).( 150.0.a )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( mollusk.shell ) / ( Left::join:> right )', :abbrev_form => '( M.S ) / ( L::J:>R )', :alpha => "SOMOLAJOR");
Formula.create( :base => '150', :offset => '026', :subindex => '0', :ord => '3', :iform => '(( 150.0 ) :][ ( 150.0.a )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Mollusk :][ shell ) / ( Left::join:> right )', :abbrev_form => '( M :][ S ) / ( L::J:>R )', :alpha => "MISOLAJOR");
Formula.create( :base => '150', :offset => '026', :subindex => '0', :ord => '4', :iform => '(( 150.0.a ) :[] ( 150.0 )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Shell :[] Mollusk ) / ( Left::join:> right )', :abbrev_form => '( S :[] M ) / ( L::J:>R )', :alpha => "SEMOLAJOR");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '1', :iform => '133.0.b / 1.1.c / 133.0.b', :word_form => 'Vertebra / dot / vertebra', :abbrev_form => 'V / D / V', :alpha => "VODOV");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '3', :iform => '68.1.a / 1.1.c / 68.1.a', :word_form => 'object / dot / object', :abbrev_form => 'O / D / O', :alpha => "O-ODO-O");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '5', :iform => '69.1 / 1.1.c / 69.1', :word_form => 'square-encloses-nothing / dot / square-encloses-nothing', :abbrev_form => 'SEN / D / SEN', :alpha => "SENODOSEN");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '2', :iform => 'Stack( 133.0.b ) /\ 1.1.c', :word_form => 'Stack( Vertebra ) /\ dot', :abbrev_form => 'S( V ) /\ D', :alpha => "SOVO-UD");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '7', :iform => 'Stack( 133.0.b->68.1.a ) /\ 1.1.c', :word_form => 'Stack( Vertebra->object ) /\ dot', :abbrev_form => 'S( V->O ) /\ D', :alpha => "SOVYO-O'UD");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '8', :iform => 'Stack( 133.0.b->69.1 ) /\ 1.1.c', :word_form => 'Stack( Vertebra->square-encloses-nothing ) /\ dot', :abbrev_form => 'S( V->SEN ) /\ D', :alpha => "SOVYSENO'UD");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '4', :iform => 'Stack( 68.1.a ) /\ 1.1.c', :word_form => 'Stack( object ) /\ dot', :abbrev_form => 'S( O ) /\ D', :alpha => "SO-O-O'UD");
Formula.create( :base => '151', :offset => '001', :subindex => '0', :ord => '6', :iform => 'Stack( 69.1 ) /\ 1.1.c', :word_form => 'Stack( square-encloses-nothing ) /\ dot', :abbrev_form => 'S( SEN ) /\ D', :alpha => "SOSENO'UD");
Formula.create( :base => '151', :offset => '001', :subindex => 's', :ord => '1', :iform => 'Stack( 133.0.b )', :word_form => 'Stack( Vertebra )', :abbrev_form => 'S( V )', :alpha => "SOV");
Formula.create( :base => '151', :offset => '001', :subindex => 's', :ord => '4', :iform => 'Stack( 133.0.b->68.1.a )', :word_form => 'Stack( Vertebra->object )', :abbrev_form => 'S( V->O )', :alpha => "SOVYO");
Formula.create( :base => '151', :offset => '001', :subindex => 's', :ord => '5', :iform => 'Stack( 133.0.b->69.1 )', :word_form => 'Stack( Vertebra->square-encloses-nothing )', :abbrev_form => 'S( V->SEN )', :alpha => "SOVYSEN");
Formula.create( :base => '151', :offset => '001', :subindex => 's', :ord => '2', :iform => 'Stack( 68.1.a )', :word_form => 'Stack( object )', :abbrev_form => 'S( O )', :alpha => "SO-O-");
Formula.create( :base => '151', :offset => '001', :subindex => 's', :ord => '3', :iform => 'Stack( 69.1 )', :word_form => 'Stack( square-encloses-nothing )', :abbrev_form => 'S( SEN )', :alpha => "SOSEN");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a * ( 133.0.b / 1.1.c / 133.0.b )', :word_form => 'Side-person * ( Vertebra / dot / vertebra )', :abbrev_form => 'SP * ( V / D / V )', :alpha => "SPAVODOV");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '2', :iform => '10.1.a * ( stack( 133.0.b ) /\ 1.1.c )', :word_form => 'Side-person * ( stack( Vertebra ) /\ dot )', :abbrev_form => 'SP * ( S( V ) /\ D )', :alpha => "SPASOVO-UD");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '3', :iform => '10.1.a * ( 68.1.a / 1.1.c / 68.1.a )', :word_form => 'Side-person * ( object / dot / object )', :abbrev_form => 'SP * ( O / D / O )', :alpha => "SPAO-ODO-O");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '4', :iform => '10.1.a * ( stack( 68.1.a ) /\ 1.1.c )', :word_form => 'Side-person * ( stack( object ) /\ dot )', :abbrev_form => 'SP * ( S( O ) /\ D )', :alpha => "SPASO-O-O'UD");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '5', :iform => '10.1.a * ( 69.1 / 1.1.c / 69.1 )', :word_form => 'Side-person * ( square-encloses-nothing / dot / square-encloses-nothing )', :abbrev_form => 'SP * ( SEN / D / SEN )', :alpha => "SPASENODOSEN");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '6', :iform => '10.1.a * ( stack( 69.1 ) /\ 1.1.c )', :word_form => 'Side-person * ( stack( square-encloses-nothing ) /\ dot )', :abbrev_form => 'SP * ( S( SEN ) /\ D )', :alpha => "SPASOSENO'UD");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '7', :iform => '10.1.a * ( stack( 133.0.b->68.1.a ) /\ 1.1.c )', :word_form => 'Side-person * ( stack( Vertebra->object ) /\ dot )', :abbrev_form => 'SP * ( S( V-> O ) /\ D )', :alpha => "SPASOVYO-O'UD");
Formula.create( :base => '151', :offset => '002', :subindex => '0', :ord => '8', :iform => '10.1.a * ( stack( 133.0.b->69.1 ) /\ 1.1.c )', :word_form => 'Side-person * ( stack( Vertebra->square-encloses-nothing ) /\ dot )', :abbrev_form => 'SP * ( S( V->SEN ) /\ D )', :alpha => "SPASOVYSENO'UD");
Formula.create( :base => '151', :offset => '002', :subindex => 's', :ord => '1', :iform => '10.1.a * ( stack( 133.0.b ))', :word_form => 'Side-person * ( stack( Vertebra ))', :abbrev_form => 'SP * ( S( V ))', :alpha => "SPASOV");
Formula.create( :base => '151', :offset => '002', :subindex => 's', :ord => '2', :iform => '10.1.a * ( stack( 68.1.a ))', :word_form => 'Side-person * ( stack( object ))', :abbrev_form => 'SP * ( S( O ))', :alpha => "SPASO-O");
Formula.create( :base => '151', :offset => '002', :subindex => 's', :ord => '3', :iform => '10.1.a * ( stack( 69.1 ))', :word_form => 'Side-person * ( stack( square-encloses-nothing ))', :abbrev_form => 'SP * ( S( SEN ))', :alpha => "SPASOSEN");
Formula.create( :base => '151', :offset => '002', :subindex => 's', :ord => '4', :iform => '10.1.a * ( stack( 133.0.b->68.1.a ))', :word_form => 'Side-person * ( stack( Vertebra->object ))', :abbrev_form => 'SP * ( S( V-> O ))', :alpha => "SPASOVYO");
Formula.create( :base => '151', :offset => '002', :subindex => 's', :ord => '5', :iform => '10.1.a * ( stack( 133.0.b->69.1 ))', :word_form => 'Side-person * ( stack( Vertebra->square-encloses-nothing ))', :abbrev_form => 'SP * ( S( V->SEN ))', :alpha => "SPASOVYSEN");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '1', :iform => '44.3 * ( 133.0.b / 1.1.c / 133.0.b )', :word_form => 'gold * ( Vertebra / dot / vertebra )', :abbrev_form => 'G * ( V / D / V )', :alpha => "GAVODOV");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '2', :iform => '44.3 * ( stack( 133.0.b ) /\ 1.1.c )', :word_form => 'gold * ( stack( Vertebra ) /\ dot )', :abbrev_form => 'G * ( S( V ) /\ D )', :alpha => "GASOVO-UD");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '3', :iform => '44.3 * ( 68.1.a / 1.1.c / 68.1.a )', :word_form => 'gold * ( object / dot / object )', :abbrev_form => 'G * ( O / D / O )', :alpha => "GAO-ODO-O");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '4', :iform => '44.3 * ( stack( 68.1.a ) /\ 1.1.c )', :word_form => 'gold * ( stack( object ) /\ dot )', :abbrev_form => 'G * ( S( O ) /\ D )', :alpha => "GASO-O-O'UD");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '5', :iform => '44.3 * ( 69.1 / 1.1.c / 69.1 )', :word_form => 'gold * ( square-encloses-nothing / dot / square-encloses-nothing )', :abbrev_form => 'G * ( SEN / D / SEN )', :alpha => "GASENODOSEN");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '6', :iform => '44.3 * ( stack( 69.1 ) /\ 1.1.c )', :word_form => 'gold * ( stack( square-encloses-nothing ) /\ dot )', :abbrev_form => 'G * ( S( SEN ) /\ D )', :alpha => "GASOSENO'UD");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '7', :iform => '44.3 * ( stack( 133.0.b->68.1.a ) /\ 1.1.c )', :word_form => 'gold * ( stack( Vertebra->object ) /\ dot )', :abbrev_form => 'G * ( S( V-> O ) /\ D )', :alpha => "GASOVYO-O'UD");
Formula.create( :base => '151', :offset => '003', :subindex => '0', :ord => '8', :iform => '44.3 * ( stack( 133.0.b->69.1 ) /\ 1.1.c )', :word_form => 'gold * ( stack( Vertebra->square-encloses-nothing ) /\ dot )', :abbrev_form => 'G * ( S( V->SEN ) /\ D )', :alpha => "GASOVYSENO'UD");
Formula.create( :base => '151', :offset => '003', :subindex => 's', :ord => '1', :iform => '44.3 * ( stack( 133.0.b ))', :word_form => 'gold * ( stack( Vertebra ))', :abbrev_form => 'G * ( S( V ))', :alpha => "GASOV");
Formula.create( :base => '151', :offset => '003', :subindex => 's', :ord => '2', :iform => '44.3 * ( stack( 68.1.a ))', :word_form => 'gold * ( stack( object ))', :abbrev_form => 'G * ( S( O ))', :alpha => "GASO-O");
Formula.create( :base => '151', :offset => '003', :subindex => 's', :ord => '3', :iform => '44.3 * ( stack( 69.1 ))', :word_form => 'gold * ( stack( square-encloses-nothing ))', :abbrev_form => 'G * ( S( SEN ))', :alpha => "GASOSEN");
Formula.create( :base => '151', :offset => '003', :subindex => 's', :ord => '4', :iform => '44.3 * ( stack( 133.0.b->68.1.a ))', :word_form => 'gold * ( stack( Vertebra->object ))', :abbrev_form => 'G * ( S( V-> O ))', :alpha => "GASOVYO");
Formula.create( :base => '151', :offset => '003', :subindex => 's', :ord => '5', :iform => '44.3 * ( stack( 133.0.b->69.1 ))', :word_form => 'gold * ( stack( Vertebra->square-encloses-nothing ))', :abbrev_form => 'G * ( S( V->SEN ))', :alpha => "GASOVYSEN");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '1', :iform => '78.18 {}/ ( 133.0.b / 1.1.c / 133.0.b )', :word_form => 'door {}/ ( Vertebra / dot / vertebra )', :abbrev_form => 'D {}/ ( V / D / V )', :alpha => "DE-OVODOV");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '2', :iform => '78.18 {}/ ( stack( 133.0.b ) /\ 1.1.c )', :word_form => 'door {}/ ( stack( Vertebra ) /\ dot )', :abbrev_form => 'D {}/ ( S( V ) /\ D )', :alpha => "DE-OSOVO-UD");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '3', :iform => '78.18 {}/ ( 68.1.a / 1.1.c / 68.1.a )', :word_form => 'door {}/ ( object / dot / object )', :abbrev_form => 'D {}/ ( O / D / O )', :alpha => "DE-O'O-ODO-O");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '4', :iform => '78.18 {}/ ( stack( 68.1.a ) /\ 1.1.c )', :word_form => 'door {}/ ( stack( object ) /\ dot )', :abbrev_form => 'D {}/ ( S( O ) /\ D )', :alpha => "DE-OSO-O-O'UD");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '5', :iform => '78.18 {}/ ( 69.1 / 1.1.c / 69.1 )', :word_form => 'door {}/ ( square-encloses-nothing / dot / square-encloses-nothing )', :abbrev_form => 'D {}/ ( SEN / D / SEN )', :alpha => "DE-OSENODOSEN");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '6', :iform => '78.18 {}/ ( stack( 69.1 ) /\ 1.1.c )', :word_form => 'door {}/ ( stack( square-encloses-nothing ) /\ dot )', :abbrev_form => 'D {}/ ( S( SEN ) /\ D )', :alpha => "DE-OSOSENO'UD");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '7', :iform => '78.18 {}/ ( stack( 133.0.b->68.1.a ) /\ 1.1.c )', :word_form => 'door {}/ ( stack( Vertebra->object ) /\ dot )', :abbrev_form => 'D {}/ ( S( V-> O ) /\ D )', :alpha => "DE-OSOVYO-O'UD");
Formula.create( :base => '151', :offset => '004', :subindex => '0', :ord => '8', :iform => '78.18 {}/ ( stack( 133.0.b->69.1 ) /\ 1.1.c )', :word_form => 'door {}/ ( stack( Vertebra->square-encloses-nothing ) /\ dot )', :abbrev_form => 'D {}/ ( S( V->SEN ) /\ D )', :alpha => "DE-OSOVYSENO'UD");
Formula.create( :base => '151', :offset => '004', :subindex => 's', :ord => '1', :iform => '78.18 {}/ ( stack( 133.0.b ))', :word_form => 'door {}/ ( stack( Vertebra ))', :abbrev_form => 'D {}/ ( S( V ))', :alpha => "DE-OSOV");
Formula.create( :base => '151', :offset => '004', :subindex => 's', :ord => '2', :iform => '78.18 {}/ ( stack( 68.1.a ))', :word_form => 'door {}/ ( stack( object ))', :abbrev_form => 'D {}/ ( S( O ))', :alpha => "DE-OSO-O");
Formula.create( :base => '151', :offset => '004', :subindex => 's', :ord => '3', :iform => '78.18 {}/ ( stack( 69.1 ))', :word_form => 'door {}/ ( stack( square-encloses-nothing ))', :abbrev_form => 'D {}/ ( S( SEN ))', :alpha => "DE-OSOSEN");
Formula.create( :base => '151', :offset => '004', :subindex => 's', :ord => '4', :iform => '78.18 {}/ ( stack( 133.0.b->68.1.a ))', :word_form => 'door {}/ ( stack( Vertebra->object ))', :abbrev_form => 'D {}/ ( S( V-> O ))', :alpha => "DE-OSOVYO");
Formula.create( :base => '151', :offset => '004', :subindex => 's', :ord => '5', :iform => '78.18 {}/ ( stack( 133.0.b->69.1 ))', :word_form => 'door {}/ ( stack( Vertebra->square-encloses-nothing ))', :abbrev_form => 'D {}/ ( S( V->SEN ))', :alpha => "DE-OSOVYSEN");
Formula.create( :base => '151', :offset => '006', :subindex => '0', :ord => '1', :iform => '63.1 / ( 69.1 / 1.1.c / 69.1 )', :word_form => 'roof / ( square-encloses-nothing / dot / square-encloses-nothing )', :abbrev_form => 'R / ( SEN / D / SEN )', :alpha => "ROSENODOSEN");
Formula.create( :base => '151', :offset => '006', :subindex => '0', :ord => '2', :iform => '63.1 / ( stack( 69.1 ) /\ 1.1.c )', :word_form => 'roof / ( stack( square-encloses-nothing ) /\ dot )', :abbrev_form => 'R / ( S( SEN ) /\ D )', :alpha => "ROSOSENO'UD");
Formula.create( :base => '151', :offset => '006', :subindex => 's', :ord => '1', :iform => '63.1 / ( stack( 69.1 ))', :word_form => 'roof / ( stack( square-encloses-nothing ))', :abbrev_form => 'R / ( S( SEN ))', :alpha => "ROSOSEN");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '8', :iform => '(( 4.1 / 63.0 )->( 63.0 / 68.1 )->( 31.1 / 68.1 )) /  (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))', :word_form => '(( Post / roof )->( roof / mouth )->( Ten / mouth )) / (( ::bend:>leg )^2:->( person:->legs ))', :abbrev_form => '(( P / R )->( R / M )->( T / M )) / (( ::B:>L )^2:->(( P:->L )))', :alpha => "PORYROMYTOMOBOLUTYPYL");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 4.1->63.0->31.1 ) / ( 63.0->68.1 ) / (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))', :word_form => '( Post->roof->ten ) / ( roof->mouth ) / (( ::bend:>leg )^2:->( person:->legs ))', :abbrev_form => '( P->R->T ) / ( R->M ) / (( ::B:>L)^2:->( P:->L ))', :alpha => "PYRYTORYMOBOLYPYL");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '1', :iform => '152.1', :word_form => '{ "roof on supports" }', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '5', :iform => '31.1 / 68.1 / ( 10.0:->11.0 )', :word_form => 'Ten / mouth / ( person:->legs )', :abbrev_form => 'T / M / ( P:->L )', :alpha => "TOMOPYL");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '6', :iform => '31.1 / 68.1 / ( 10.0:->11.0 )', :word_form => 'Ten / opening / ( person:->legs )', :abbrev_form => 'T / O / ( P:->L )', :alpha => "TO-O-OPYL");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '2', :iform => '4.1 / 63.0 / ( ::( 135.0.a ):>( 11.0.a ))^2', :word_form => 'Post / roof / ( ::bend:>leg )^2', :abbrev_form => 'P / R / ( ::B:>L)^2', :alpha => "POROBOLUT");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '3', :iform => '63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))', :word_form => 'roof / mouth / ( ::bend:>leg )', :abbrev_form => 'R / M / ( ::B:>L)', :alpha => "ROMOBOL");
Formula.create( :base => '152', :offset => '001', :subindex => '0', :ord => '4', :iform => '63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))', :word_form => 'roof / opening / ( ::bend:>leg )', :abbrev_form => 'R / O / ( ::B:>L)', :alpha => "RO-O-OBOL");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '5', :iform => '( 31.1 / 68.1 / ( 10.0:->11.0 )) * 34.1', :word_form => '( Ten / mouth / ( person:->legs )) * strength', :abbrev_form => '( T / M / ( P:->L )) * S', :alpha => "TOMOPYLAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '6', :iform => '( 31.1 / 68.1 / ( 10.0:->11.0 )) * 34.1', :word_form => '( Ten / opening / ( person:->legs )) * strength', :abbrev_form => '( T / O / ( P:->L )) * S', :alpha => "TO-O-OPYLAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '13', :iform => '( 31.1 / 68.1 / ( 10.0:->11.0 )) * 35.1.a', :word_form => '( Ten / mouth / ( person:->legs )) * knife-at-right', :abbrev_form => '( T / M / ( P:->L )) * KAR', :alpha => "TOMOPYLAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '14', :iform => '( 31.1 / 68.1 / ( 10.0:->11.0 )) * 35.1.a', :word_form => '( Ten / opening / ( person:->legs )) * knife-at-right', :abbrev_form => '( T / O / ( P:->L )) * KAR', :alpha => "TO-O-OPYLAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '21', :iform => '( 31.1 / 68.1 / ( 10.0:->11.0 )) * ( 34.1->35.1.a )', :word_form => '( Ten / mouth / ( person:->legs )) * ( strength->knife-at-right )', :abbrev_form => '( T / M / ( P:->L )) * ( S->KAR )', :alpha => "TOMOPYLASYKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '22', :iform => '( 31.1 / 68.1 / ( 10.0:->11.0 )) * ( 34.1->35.1.a )', :word_form => '( Ten / opening / ( person:->legs )) * ( strength->knife-at-right )', :abbrev_form => '( T / O / ( P:->L )) * ( S->KAR )', :alpha => "TO-O-OPYLASYKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 4.1 / 63.0 / ( ::( 135.0.a ):>( 11.0.a ))^2 ) * 34.1', :word_form => '( Post / roof / ( ::bend:>leg )^2 ) * strength', :abbrev_form => '( P / R / ( ::B:>L)^2 ) * S', :alpha => "POROBOLUTAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '8', :iform => '((( 4.1 / 63.0 )->( 63.0 / 68.1 )->( 31.1 / 68.1 )) /  (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))) * 34.1', :word_form => '((( Post / roof )->( roof / mouth )->( Ten / mouth )) / (( ::bend:>leg )^2:->( person:->legs ))) * strength', :abbrev_form => '((( P / R )->( R / M )->( T / M )) / (( ::B:>L )^2:->(( P:->L )))) * S', :alpha => "PORYROMYTOMOBOLUTYPYLAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '10', :iform => '( 4.1 / 63.0 / ( ::( 135.0.a ):>( 11.0.a ))^2 ) * 35.1.a', :word_form => '( Post / roof / ( ::bend:>leg )^2 ) * knife-at-right', :abbrev_form => '( P / R / ( ::B:>L)^2 ) * KAR', :alpha => "POROBOLUTAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '16', :iform => '((( 4.1 / 63.0 )->( 63.0 / 68.1 )->( 31.1 / 68.1 )) /  (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))) * 35.1.a', :word_form => '((( Post / roof )->( roof / mouth )->( Ten / mouth )) / (( ::bend:>leg )^2:->( person:->legs ))) * knife-at-right', :abbrev_form => '((( P / R )->( R / M )->( T / M )) / (( ::B:>L )^2:->(( P:->L )))) * KAR', :alpha => "PORYROMYTOMOBOLUTYPYLAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '18', :iform => '( 4.1 / 63.0 / ( ::( 135.0.a ):>( 11.0.a ))^2 ) * ( 34.1->35.1.a )', :word_form => '( Post / roof / ( ::bend:>leg )^2 ) * ( strength->knife-at-right )', :abbrev_form => '( P / R / ( ::B:>L)^2 ) * ( S->KAR )', :alpha => "POROBOLUTASYKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '24', :iform => '((( 4.1 / 63.0 )->( 63.0 / 68.1 )->( 31.1 / 68.1 )) /  (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))) * ( 34.1->35.1.a )', :word_form => '((( Post / roof )->( roof / mouth )->( Ten / mouth )) / (( ::bend:>leg )^2:->( person:->legs ))) * ( strength->knife-at-right )', :abbrev_form => '((( P / R )->( R / M )->( T / M )) / (( ::B:>L )^2:->(( P:->L )))) * ( S->KAR )', :alpha => "PORYROMYTOMOBOLUTYPYLASYKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '7', :iform => '(( 4.1->63.0->31.1 ) / ( 63.0->68.1 ) / (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))) * 34.1', :word_form => '(( Post->roof->ten ) / ( roof->mouth ) / (( ::bend:>leg )^2:->( person:->legs ))) * strength', :abbrev_form => '(( P->R->T ) / ( R->M ) / (( ::B:>L)^2:->( P:->L ))) * S', :alpha => "PYRYTORYMOBOLYPYLAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '15', :iform => '(( 4.1->63.0->31.1 ) / ( 63.0->68.1 ) / (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))) * 35.1.a', :word_form => '(( Post->roof->ten ) / ( roof->mouth ) / (( ::bend:>leg )^2:->( person:->legs ))) * knife-at-right', :abbrev_form => '(( P->R->T ) / ( R->M ) / (( ::B:>L)^2:->( P:->L ))) * KAR', :alpha => "PYRYTORYMOBOLYPYLAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '23', :iform => '(( 4.1->63.0->31.1 ) / ( 63.0->68.1 ) / (( ::( 135.0.a ):>( 11.0.a ))^2:->( 10.0:->11.0 ))) * ( 34.1->35.1.a )', :word_form => '(( Post->roof->ten ) / ( roof->mouth ) / (( ::bend:>leg )^2:->( person:->legs ))) * ( strength->knife-at-right )', :abbrev_form => '(( P->R->T ) / ( R->M ) / (( ::B:>L)^2:->( P:->L ))) * ( S->KAR )', :alpha => "PYRYTORYMOBOLYPYLASYKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))) * 34.1', :word_form => '( roof / mouth / ( ::bend:>leg )) * strength', :abbrev_form => '( R / M / ( ::B:>L)) * S', :alpha => "ROMOBOLAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '4', :iform => '( 63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))) * 34.1', :word_form => '( roof / opening / ( ::bend:>leg )) * strength', :abbrev_form => '( R / O / ( ::B:>L)) * S', :alpha => "RO-O-OBOLAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '11', :iform => '( 63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))) * 35.1.a', :word_form => '( roof / mouth / ( ::bend:>leg )) * knife-at-right', :abbrev_form => '( R / M / ( ::B:>L)) * KAR', :alpha => "ROMOBOLAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '12', :iform => '( 63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))) * 35.1.a', :word_form => '( roof / opening / ( ::bend:>leg )) * knife-at-right', :abbrev_form => '( R / O / ( ::B:>L)) * KAR', :alpha => "RO-O-OBOLAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '19', :iform => '( 63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))) * ( 34.1->35.1.a )', :word_form => '( roof / mouth / ( ::bend:>leg )) * ( strength->knife-at-right )', :abbrev_form => '( R / M / ( ::B:>L)) * ( S->SYKAR )', :alpha => "ROMOBOLASYKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '20', :iform => '( 63.0 / 68.1 / ( ::( 135.0.a ):>( 11.0.a ))) * ( 34.1->35.1.a )', :word_form => '( roof / opening / ( ::bend:>leg )) * ( strength->knife-at-right )', :abbrev_form => '( R / O / ( ::B:>L)) * ( S->KAR )', :alpha => "RO-O-OBOLASYKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '1', :iform => '152.1 * 34.1', :word_form => 'Bear * strength', :abbrev_form => 'B * S', :alpha => "BAS");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '9', :iform => '152.1 * 35.1.a', :word_form => 'Bear * knife-at-right', :abbrev_form => 'B * KAR', :alpha => "BAKAR");
Formula.create( :base => '152', :offset => '002', :subindex => '0', :ord => '17', :iform => '152.1 * ( 34.1->35.1.a )', :word_form => 'Bear * ( strength->knife-at-right )', :abbrev_form => 'B * ( S->KAR )', :alpha => "BASYKAR");
Formula.create( :base => '152', :offset => '003', :subindex => '0', :ord => '1', :iform => '( 79.1 / 11.2 )^2', :word_form => '( Notches-in-bamboo / elder-brother )^2', :abbrev_form => '( NIB / EB )^2', :alpha => "NIBOEBUT");
Formula.create( :base => '152', :offset => '003', :subindex => '0', :ord => '2', :iform => '( 79.1 / 68.1 / ( 10.0:->11.0 ))^2', :word_form => '( Notches-in-bamboo / mouth / ( person:->legs))^2', :abbrev_form => '( NIB / M / ( P:->L ))^2', :alpha => "NIBOMOPYLUT");
Formula.create( :base => '153', :offset => '000', :subindex => 'a', :ord => '1', :iform => '153.0.a', :word_form => 'abstract( "thread" )', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '153', :offset => '000', :subindex => 'b', :ord => '1', :iform => '153.0.b', :word_form => 'abstract( "silk" )', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '153', :offset => '000', :subindex => 'c', :ord => '1', :iform => '153.0.c', :word_form => 'abstract( "make" )', :abbrev_form => 'A( M )', :alpha => "AM");
Formula.create( :base => '153', :offset => '000', :subindex => 'd', :ord => '1', :iform => '153.0.d', :word_form => 'Abstract( "tie" )', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '2', :iform => '153.0.a:->153.0.b', :word_form => 'thread:->silk', :abbrev_form => 'T:->S', :alpha => "TYS");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '4', :iform => '153.0.a:<-153.0.b', :word_form => 'thread:<-silk', :abbrev_form => 'T:<-S', :alpha => "TIOS");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '3', :iform => '153.0.b:->153.0.a', :word_form => 'silk:->thread', :abbrev_form => 'S:->T', :alpha => "SYT");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '1', :iform => '153.1', :word_form => '{ "threads twisted together" }', :abbrev_form => 'FT', :alpha => "FT");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '5', :iform => 'Column( 19.1 )', :word_form => 'Column( Silkworm-in-cocoon )', :abbrev_form => 'C( SWIC )', :alpha => "COSWIC");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '7', :iform => 'stack( 19.1 ) / :row( 153.0.a )', :word_form => 'stack( Silkworm-in-cocoon ) / :row( thread )', :abbrev_form => 'S( SWIC ) / :R( T )', :alpha => "SOSWICOROT");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '10', :iform => 'stack( 19.1 ) / row( 1.1.c )', :word_form => 'stack( Silkworm-in-cocoon ) / row( dot )', :abbrev_form => 'S( SWIC ) / R( D )', :alpha => "SOSWICOROD");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '6', :iform => 'Stack( 19.1 ) / ( 153.0.a ) :^3', :word_form => 'stack( Silkworm-in-cocoon ) / thread :^3', :abbrev_form => 'S( SWIC ) / T:^3', :alpha => "SOSWICOTUT");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '8', :iform => 'Stack( 19.1 ) / ( 29.1 {} 4.1.f )', :word_form => 'stack( Silkworm-in-cocoon ) / ( divide {} post-hook )', :abbrev_form => 'S( SWIC ) / ( D {} PH )', :alpha => "SOSWICODEPH");
Formula.create( :base => '153', :offset => '001', :subindex => '0', :ord => '9', :iform => 'Stack( 19.1 ) / 29.8', :word_form => 'stack( Silkworm-in-cocoon ) / small', :abbrev_form => 'S( SWIC ) / S', :alpha => "SOSWICOS");
Formula.create( :base => '153', :offset => '001', :subindex => 'a', :ord => '1', :iform => '::inv:>153.1', :word_form => '::inv:>(thread:<-silk )', :abbrev_form => '::I:>(T:<-S )', :alpha => "IOTIOS");
Formula.create( :base => '153', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 153.0.a:->153.0.b )^2', :word_form => '( thread:->silk )^2', :abbrev_form => '( T:->S )^2', :alpha => "TYSUT");
Formula.create( :base => '153', :offset => '002', :subindex => '0', :ord => '4', :iform => '( stack( 19.1 ) / row( 1.1.c ))^2', :word_form => '( stack( Silkworm-in-cocoon ) / row( dot ))^2', :abbrev_form => '( S( SWIC ) / R( D ))^2', :alpha => "SOSWICORODUT");
Formula.create( :base => '153', :offset => '002', :subindex => '0', :ord => '3', :iform => '( Stack( 19.1 ) / 29.8 )^2', :word_form => '( stack( Silkworm-in-cocoon ) / small )^2', :abbrev_form => '( S( SWIC ) / S )^2', :alpha => "SOSWICOSUT");
Formula.create( :base => '153', :offset => '002', :subindex => '0', :ord => '1', :iform => '153.1^2', :word_form => 'Silk-thread^2', :abbrev_form => 'ST^2', :alpha => "STUT");
Formula.create( :base => '153', :offset => '012', :subindex => '0', :ord => '1', :iform => '7.1 / 153.1', :word_form => 'Drag / silk-thread', :abbrev_form => 'D / ST', :alpha => "DOST");
Formula.create( :base => '153', :offset => '012', :subindex => '0', :ord => '4', :iform => '7.1 / ( 153.0.a:->153.0.b )', :word_form => 'Drag / ( thread:->silk )', :abbrev_form => 'D / ( T:->S )', :alpha => "DOTYS");
Formula.create( :base => '153', :offset => '012', :subindex => '0', :ord => '7', :iform => '7.1 / ( Stack( 19.1 ) / 29.8 )', :word_form => 'Drag / ( stack( Silkworm-in-cocoon ) / small )', :abbrev_form => 'D / ( S( SWIC ) / S )', :alpha => "DOSOSWICOS");
Formula.create( :base => '153', :offset => '012', :subindex => '0', :ord => '10', :iform => '7.1 / ( stack( 19.1 ) / row( 1.1.c ))', :word_form => 'Drag / ( stack( Silkworm-in-cocoon ) / row( dot ))', :abbrev_form => 'D / ( S( SWIC ) / R( D ))', :alpha => "DOSOSWICOROD");
Formula.create( :base => '153', :offset => '012', :subindex => 'a', :ord => '1', :iform => '7.1 / ( ::inv:>153.1 0', :word_form => 'Drag / (::inv:>( thread:<-silk ))', :abbrev_form => 'D / ( ::I:>( T:<-S ))', :alpha => "DO-IOTIOS");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '3', :iform => '( 153.0.a:->153.0.b ) / ( 66.0:<.( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( thread:->silk ) / ( Plant:<.( leaves | fruit )::droop ))', :abbrev_form => '( T:->S ) / ( P:<.(( L|F )::D ))', :alpha => "TYSOPILOFAD");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '17', :iform => '( 66.0:173.0.b ) / 153.1', :word_form => '( Plant:droopy ) / Silk-thread', :abbrev_form => '( P:D ) / ST', :alpha => "PIDOST");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '19', :iform => '( 66.0:173.0.b ) / ( 153.0.a:->153.0.b )', :word_form => '( Plant:droopy ) / ( thread:->silk )', :abbrev_form => '( P:D ) / ( T:->S )', :alpha => "PIDOTYS");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '21', :iform => '( 66.0:173.0.b ) / ( Stack( 19.1 ) / 29.8 )', :word_form => '( Plant:droopy ) / ( stack( Silkworm-in-cocoon ) / small )', :abbrev_form => '( P:D ) / ( S( SWIC ) / S )', :alpha => "PIDOSOSWICOS");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '23', :iform => '( 66.0:173.0.b ) /( stack( 19.1 ) / row( 1.1.c ))', :word_form => '( Plant:droopy ) / ( stack( Silkworm-in-cocoon )', :abbrev_form => '( P:D ) / ( S( SWIC ) / R( D ))', :alpha => "PIDOSOSWICOROD");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '7', :iform => '( stack( 19.1 ) / row( 1.1.c ) / ( 66.0:<.( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( stack( Silkworm-in-cocoon ) / ( Plant:<.( leaves | fruit )::droop ))', :abbrev_form => '( S( SWIC ) / R( D )) / ( P:<.(( L|F )::D ))', :alpha => "SOSWICORODOPILOFAD");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '5', :iform => '( Stack( 19.1 ) / 29.8 ) / ( 66.0:<.( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( stack( Silkworm-in-cocoon ) / small ) / ( Plant:<.( leaves | fruit )::droop ))', :abbrev_form => '( S( SWIC ) / S ) / ( P:<.(( L|F )::D ))', :alpha => "SOSWICOSOPILOFAD");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '1', :iform => '153.1 / ( 66.0:<.( 176.0.b | 170.0 )::173.0.a ))', :word_form => 'Silk-thread / ( Plant:<.( leaves | fruit )::droop ))', :abbrev_form => 'ST / ( P:<.(( L|F )::D ))', :alpha => "STOPILOFAD");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '9', :iform => '173.1 / 153.1', :word_form => 'Plant-is-droopy / Silk-thread', :abbrev_form => 'PID / ST', :alpha => "PIDOST");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '11', :iform => '173.1 / ( 153.0.a:->153.0.b )', :word_form => 'Plant-is-droopy / ( thread:->silk )', :abbrev_form => 'PID / ( T:->S )', :alpha => "PIDOTYS");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '13', :iform => '173.1 / ( Stack( 19.1 ) / 29.8 )', :word_form => 'Plant-is-droopy / ( stack( Silkworm-in-cocoon ) / small )', :abbrev_form => 'PID / ( S( SWIC ) / S )', :alpha => "PIDOSOSWICOS");
Formula.create( :base => '153', :offset => '014', :subindex => '0', :ord => '15', :iform => '173.1 / ( stack( 19.1 ) / row( 1.1.c ))', :word_form => 'Plant-is-droopy / ( stack( Silkworm-in-cocoon )', :abbrev_form => 'PID / ( S( SWIC ) / R( D ))', :alpha => "PIDOSOSWICOROD");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '5', :iform => '( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c )) / 4.1', :word_form => '( stack( dot ) * stack( cocoon ) * stack( dot )) / Post', :abbrev_form => '( S( D ) * S( C ) * S( D )) / P', :alpha => "SODASOCASODOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '6', :iform => '( S( 1.1.c )^2 {} S( 19.1 )) / 4.1', :word_form => '( stack( dot )^2 {} stack( cocoon )) / Post', :abbrev_form => '( S( D )^2 {} S( C )) / P', :alpha => "SODUTESOCOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '7', :iform => '( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c )) / 4.1', :word_form => '( stack( dot ) * stack( Silkworm-in-cocoon ) * stack( dot )) / Post', :abbrev_form => '( S( D ) * S( SWIC ) * S( D )) / P', :alpha => "SODASOSWICASODOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '8', :iform => '( S( 1.1.c )^2 {} S( 19.1 )) / 4.1', :word_form => '( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / Post', :abbrev_form => '( S( D )^2 {} S( SWIC )) / P', :alpha => "SODUTESOSWICOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '19', :iform => '( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c )) / 4.1', :word_form => '( stack( dot ) * stack( cocoon ) * stack( dot )) / Post', :abbrev_form => '( S( D ) * S( C ) * S( D )) / P', :alpha => "SODASOCASODOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '20', :iform => '( S( 1.1.c )^2 {} S( 19.1 )) / 4.1', :word_form => '( stack( dot )^2 {} stack( cocoon )) / Post', :abbrev_form => '( S( D )^2 {} S( C )) / P', :alpha => "SODUTESOCOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '21', :iform => '( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c )) / 4.1', :word_form => '( stack( dot ) * stack( Silkworm-in-cocoon ) * stack( dot )) / Post', :abbrev_form => '( S( D ) * S( SWIC ) * S( D )) / P', :alpha => "SODASOSWICASODOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '22', :iform => '( S( 1.1.c )^2 {} S( 19.1 )) / 4.1', :word_form => '( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / Post', :abbrev_form => '( S( D )^2 {} S( SWIC )) / P', :alpha => "SODUTESOSWICOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '33', :iform => '( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c )) / 4.1', :word_form => '( stack( dot ) * stack( cocoon ) * stack( dot )) / Post', :abbrev_form => '( S( D ) * S( C ) * S( D )) / P', :alpha => "SODASOCASODOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '34', :iform => '( S( 1.1.c )^2 {} S( 19.1 )) / 4.1', :word_form => '( stack( dot )^2 {} stack( cocoon )) / Post', :abbrev_form => '( S( D )^2 {} S( C )) / P', :alpha => "SODUTESOCOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '35', :iform => '( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c )) / 4.1', :word_form => '( stack( dot ) * stack( Silkworm-in-cocoon ) * stack( dot )) / Post', :abbrev_form => '( S( D ) * S( SWIC ) * S( D )) / P', :alpha => "SODASOSWICASODOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '36', :iform => '( S( 1.1.c )^2 {} S( 19.1 )) / 4.1', :word_form => '( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / Post', :abbrev_form => '( S( D )^2 {} S( SWIC )) / P', :alpha => "SODUTESOSWICOP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '13', :iform => '153.15.0 [] S( 19.1 )', :word_form => 'Frame [] stack( cocoon )', :abbrev_form => 'F [] S( C )', :alpha => "FESOC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '14', :iform => '153.15.0 [] S( 19.1 )', :word_form => 'Frame [] stack( Silkworm-in-cocoon )', :abbrev_form => 'F [] S( SWIC )', :alpha => "FESOSWIC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '27', :iform => '153.15.0 [] S( 19.1 )', :word_form => 'Frame [] stack( cocoon )', :abbrev_form => 'F [] S( C )', :alpha => "FESOC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '28', :iform => '153.15.0 [] S( 19.1 )', :word_form => 'Frame [] stack( Silkworm-in-cocoon )', :abbrev_form => 'F [] S( SWIC )', :alpha => "FESOSWIC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '41', :iform => '153.15.0 [] S( 19.1 )', :word_form => 'Frame [] stack( cocoon )', :abbrev_form => 'F [] S( C )', :alpha => "FESOC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '42', :iform => '153.15.0 [] S( 19.1 )', :word_form => 'Frame [] stack( Silkworm-in-cocoon )', :abbrev_form => 'F [] S( SWIC )', :alpha => "FESOSWIC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '9', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / ( 1.1.a + 4.1 )', :word_form => 'Lid / ( stack( dot )^2 {} stack( cocoon )) / ( bar + post )', :abbrev_form => 'L / ( S( D )^2 {} S( C )) / ( B + P )', :alpha => "LOSODUTESOCOBIP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '10', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / ( 1.1.a + 4.1 )', :word_form => 'Lid / ( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / ( bar + post )', :abbrev_form => 'L / ( S( D )^2 {} S( SWIC )) / ( B + P )', :alpha => "LOSODUTESOSWICOBIP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '11', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / 31.1', :word_form => 'Lid / ( stack( dot )^2 {} stack( cocoon )) / ten', :abbrev_form => 'L / ( S( D )^2 {} S( C )) / T', :alpha => "LOSODUTESOCOT");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '12', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / 31.1', :word_form => 'Lid / ( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / ten', :abbrev_form => 'L / ( S( D )^2 {} S( SWIC )) / T', :alpha => "LOSODUTESOSWICOT");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '23', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / ( 1.1.a + 4.1 )', :word_form => 'Lid / ( stack( dot )^2 {} stack( cocoon )) / ( bar + post )', :abbrev_form => 'L / ( S( D )^2 {} S( C )) / ( B + P )', :alpha => "LOSODUTESOCOBIP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '24', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / ( 1.1.a + 4.1 )', :word_form => 'Lid / ( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / ( bar + post )', :abbrev_form => 'L / ( S( D )^2 {} S( SWIC )) / ( B + P )', :alpha => "LOSODUTESOSWICOBIP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '25', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / 31.1', :word_form => 'Lid / ( stack( dot )^2 {} stack( cocoon )) / ten', :abbrev_form => 'L / ( S( D )^2 {} S( C )) / T', :alpha => "LOSODUTESOCOT");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '26', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / 31.1', :word_form => 'Lid / ( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / ten', :abbrev_form => 'L / ( S( D )^2 {} S( SWIC )) / T', :alpha => "LOSODUTESOSWICOT");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '37', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / ( 1.1.a + 4.1 )', :word_form => 'Lid / ( stack( dot )^2 {} stack( cocoon )) / ( bar + post )', :abbrev_form => 'L / ( S( D )^2 {} S( C )) / ( B + P )', :alpha => "LOSODUTESOCOBIP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '38', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / ( 1.1.a + 4.1 )', :word_form => 'Lid / ( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / ( bar + post )', :abbrev_form => 'L / ( S( D )^2 {} S( SWIC )) / ( B + P )', :alpha => "LOSODUTESOSWICOBIP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '39', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / 31.1', :word_form => 'Lid / ( stack( dot )^2 {} stack( cocoon )) / ten', :abbrev_form => 'L / ( S( D )^2 {} S( C )) / T', :alpha => "LOSODUTESOCOT");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '40', :iform => '24.0.a / ( S( 1.1.c )^2 {} S( 19.1 )) / 31.1', :word_form => 'Lid / ( stack( dot )^2 {} stack( Silkworm-in-cocoon )) / ten', :abbrev_form => 'L / ( S( D )^2 {} S( SWIC )) / T', :alpha => "LOSODUTESOSWICOT");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '1', :iform => '4.1 / ( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c ))', :word_form => 'Post / ( stack( dot ) * stack( cocoon ) * stack( dot ))', :abbrev_form => 'P / ( S( D ) * S( C ) * S( D ))', :alpha => "POSODASOCASOD");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '2', :iform => '4.1 / ( S( 1.1.c )^2 {} S( 19.1 ))', :word_form => 'Post / ( stack( dot )^2 {} stack( cocoon ))', :abbrev_form => 'P / ( S( D )^2 {} S( C ))', :alpha => "POSODUTESOC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '3', :iform => '4.1 / ( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c ))', :word_form => 'Post / ( stack( dot ) * stack( Silkworm-in-cocoon ) * stack( dot ))', :abbrev_form => 'P / ( S( D ) * S( SWIC ) * S( D ))', :alpha => "POSODASOSWICASOD");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '4', :iform => '4.1 / ( S( 1.1.c )^2 {} S( 19.1 ))', :word_form => 'Post / ( stack( dot )^2 {} stack( Silkworm-in-cocoon ))', :abbrev_form => 'P / ( S( D )^2 {} S( SWIC ))', :alpha => "POSODUTESOSWIC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '15', :iform => '4.1 / ( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c ))', :word_form => 'Post / ( stack( dot ) * stack( cocoon ) * stack( dot ))', :abbrev_form => 'P / ( S( D ) * S( C ) * S( D ))', :alpha => "POSODASOCASOD");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '16', :iform => '4.1 / ( S( 1.1.c )^2 {} S( 19.1 ))', :word_form => 'Post / ( stack( dot )^2 {} stack( cocoon ))', :abbrev_form => 'P / ( S( D )^2 {} S( C ))', :alpha => "POSODUTESOC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '17', :iform => '4.1 / ( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c ))', :word_form => 'Post / ( stack( dot ) * stack( Silkworm-in-cocoon ) * stack( dot ))', :abbrev_form => 'P / ( S( D ) * S( SWIC ) * S( D ))', :alpha => "POSODASOSWICASOD");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '18', :iform => '4.1 / ( S( 1.1.c )^2 {} S( 19.1 ))', :word_form => 'Post / ( stack( dot )^2 {} stack( Silkworm-in-cocoon ))', :abbrev_form => 'P / ( S( D )^2 {} S( SWIC ))', :alpha => "POSODUTESOSWIC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '29', :iform => '4.1 / ( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c ))', :word_form => 'Post / ( stack( dot ) * stack( cocoon ) * stack( dot ))', :abbrev_form => 'P / ( S( D ) * S( C ) * S( D ))', :alpha => "POSODASOCASOD");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '30', :iform => '4.1 / ( S( 1.1.c )^2 {} S( 19.1 ))', :word_form => 'Post / ( stack( dot )^2 {} stack( cocoon ))', :abbrev_form => 'P / ( S( D )^2 {} S( C ))', :alpha => "POSODUTESOC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '31', :iform => '4.1 / ( S( 1.1.c ) * S( 19.1 ) * S( 1.1.c ))', :word_form => 'Post / ( stack( dot ) * stack( Silkworm-in-cocoon ) * stack( dot ))', :abbrev_form => 'P / ( S( D ) * S( SWIC ) * S( D ))', :alpha => "POSODASOSWICASOD");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '32', :iform => '4.1 / ( S( 1.1.c )^2 {} S( 19.1 ))', :word_form => 'Post / ( stack( dot )^2 {} stack( Silkworm-in-cocoon ))', :abbrev_form => 'P / ( S( D )^2 {} S( SWIC ))', :alpha => "POSODUTESOSWIC");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '1', :iform => '24.0.a / ( S( 1.1.c )^2 ) / ( 1.1.a + 4.1 )', :word_form => 'Lid / ( stack( dot )^2 ) / ( bar + post )', :abbrev_form => 'L / ( S( D )^2 ) / ( B + P )', :alpha => "LOSODUTOBIP");
Formula.create( :base => '153', :offset => '015', :subindex => '0', :ord => '2', :iform => '24.0.a / ( S( 1.1.c )^2 ) / 31.1', :word_form => 'Lid / ( stack( dot )^2 ) / ten', :abbrev_form => 'L / ( S( D )^2 ) / T', :alpha => "LOSODUTOT");
Formula.create( :base => '154', :offset => '000', :subindex => '0', :ord => '1', :iform => '154.0', :word_form => 'abstract( "antler" )', :abbrev_form => 'A( A )', :alpha => "AA");
Formula.create( :base => '154', :offset => '001', :subindex => '0', :ord => '3', :iform => '(( 179.1 ):.(( 154.0 ):/ 143.0 ))^2', :word_form => '( Deer:.( Antler :/ head ))^2', :abbrev_form => '( D:.( A :/ H ))^2', :alpha => "DE-A-OHUT");
Formula.create( :base => '154', :offset => '001', :subindex => '0', :ord => '2', :iform => '', :word_form => '{ "antlers" }', :abbrev_form => '', :alpha => "");
Formula.create( :base => '154', :offset => '001', :subindex => '0', :ord => '1', :iform => '', :word_form => '{ "two objects" }', :abbrev_form => '', :alpha => "");
Formula.create( :base => '154', :offset => '002', :subindex => '0', :ord => '1', :iform => '154.1 / 179.1', :word_form => 'Antlers / deer', :abbrev_form => 'A / D', :alpha => "AOD");
Formula.create( :base => '154', :offset => '002', :subindex => 's', :ord => '1', :iform => '154.1', :word_form => 'antlers', :abbrev_form => 'A', :alpha => "A");
Formula.create( :base => '155', :offset => '000', :subindex => '0', :ord => '1', :iform => '155.0', :word_form => 'abstract( "pig" )', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '155', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 155.0 }', :word_form => '{ boar }', :abbrev_form => '{ B }', :alpha => "B");
Formula.create( :base => '155', :offset => '002', :subindex => '0', :ord => '1', :iform => '63.1 / 155.1', :word_form => 'Roof / boar', :abbrev_form => 'R / B', :alpha => "ROB");
Formula.create( :base => '155', :offset => '002', :subindex => '0', :ord => '2', :iform => '63.1 / 155.1', :word_form => 'Roof / pig', :abbrev_form => 'R / P', :alpha => "ROP");
Formula.create( :base => '155', :offset => '006', :subindex => '0', :ord => '3', :iform => '( 24.1 {}/ 1.1.e ) / 155.1', :word_form => '( cover {}/ object ) / boar', :abbrev_form => '( C {}/ O ) / B', :alpha => "CEO-O-OB");
Formula.create( :base => '155', :offset => '006', :subindex => '0', :ord => '6', :iform => '( 24.1 {}/ 1.1.e ) / 155.1', :word_form => '( cover {}/ object ) / pig', :abbrev_form => '( C {}/ O ) / P', :alpha => "CEO-O-OP");
Formula.create( :base => '155', :offset => '006', :subindex => '0', :ord => '1', :iform => '24.2 / 155.1', :word_form => 'Cover / boar', :abbrev_form => 'C / B', :alpha => "COB");
Formula.create( :base => '155', :offset => '006', :subindex => '0', :ord => '2', :iform => '24.2 / 155.1', :word_form => 'Covered-object / boar', :abbrev_form => 'CO / B', :alpha => "CO-OB");
Formula.create( :base => '155', :offset => '006', :subindex => '0', :ord => '4', :iform => '24.2 / 155.1', :word_form => 'Cover / pig', :abbrev_form => 'C / P', :alpha => "COP");
Formula.create( :base => '155', :offset => '006', :subindex => '0', :ord => '5', :iform => '24.2 / 155.1', :word_form => 'Covered-object / pig', :abbrev_form => 'CO / P', :alpha => "CO-OP");
Formula.create( :base => '155', :offset => '011', :subindex => '0', :ord => '5', :iform => '::( 153.0.d ):>(( 155.1 ).( 11.0.a )^2 ))', :word_form => '::tie:>( Boar.leg^2 ))', :abbrev_form => '::T:>( B.L^2 ))', :alpha => "ATOBELUT");
Formula.create( :base => '155', :offset => '011', :subindex => '0', :ord => '7', :iform => '::( 153.0.d ):>(( 155.1 ).( 11.0.a )^2 ))', :word_form => '::tie:>( Boar.leg^2 ))', :abbrev_form => '::T:>( B.L^2 ))', :alpha => "ATOLUTOB");
Formula.create( :base => '155', :offset => '011', :subindex => '0', :ord => '9', :iform => '::( 153.0.d ):>(( 155.1 ).( 11.0.a )^2 ))', :word_form => '::tie:>( pig.leg^2 ))', :abbrev_form => '::T:>( P.L^2 ))', :alpha => "ATOPELUT");
Formula.create( :base => '155', :offset => '011', :subindex => '0', :ord => '11', :iform => '::( 153.0.d ):>(( 155.1 ).( 11.0.a )^2 ))', :word_form => '::tie:>( pig.leg^2 ))', :abbrev_form => '::T:>( P.L^2 ))', :alpha => "ATOLUTOP");
Formula.create( :base => '155', :offset => '011', :subindex => '0', :ord => '1', :iform => '( 155.1 ):<.(::( 153.0.d ):>(( 11.0.a )^2 ))', :word_form => 'Boar:<.(::tie:>( leg^2 ))', :abbrev_form => 'B:<.(::T:>( L^2 ))', :alpha => "BITOLUT");
Formula.create( :base => '155', :offset => '011', :subindex => '0', :ord => '3', :iform => '( 155.1 ):<.(::( 153.0.d ):>(( 11.0.a )^2 ))', :word_form => 'pig:<.(::tie:>( leg^2 ))', :abbrev_form => 'P:<.(::T:>( L^2 ))', :alpha => "PITOLUT");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '3', :iform => '(( 122.0 ).( 143.0 )) */ 155.1', :word_form => 'Tiger.head */ boar', :abbrev_form => 'T.H */ B', :alpha => "TEHAOB");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '4', :iform => '(( 122.0 ).( 143.0 )) */ 155.1', :word_form => 'Tiger.head */ boar', :abbrev_form => 'T.H */ B', :alpha => "HOTAOB");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '5', :iform => '(( 122.0 ).(( 68.0 ):( 68.0.a ) :* ( 143.0 ))) */ 155.1', :word_form => 'Tiger.( mouth:open :* head ) */ boar', :abbrev_form => 'T.( M:O :* H ) */ B', :alpha => "TEMIO-AHAOB");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '6', :iform => '(( 122.0 ).(( 68.0 ):( 68.0.a ) :* ( 143.0 ))) */ 155.1', :word_form => 'Tiger.( mouth:open :* head ) */ boar', :abbrev_form => 'T.( M:O :* H ) */ B', :alpha => "MIO-AHOTAOB");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '9', :iform => '(( 122.0 ).( 143.0 )) */ 155.1', :word_form => 'Tiger.head */ pig', :abbrev_form => 'T.H */ P', :alpha => "TEHAOP");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '10', :iform => '(( 122.0 ).( 143.0 )) */ 155.1', :word_form => 'Tiger.head */ pig', :abbrev_form => 'T.H */ P', :alpha => "HOTAOP");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '11', :iform => '(( 122.0 ).(( 68.0 ):( 68.0.a ) :* ( 143.0 ))) */ 155.1', :word_form => 'Tiger.( mouth:open :* head ) */ pig', :abbrev_form => 'T.( M:O :* H ) */ P', :alpha => "TEMIO-AHAOP");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '12', :iform => '(( 122.0 ).(( 68.0 ):( 68.0.a ) :* ( 143.0 ))) */ 155.1', :word_form => 'Tiger.( mouth:open :* head ) */ pig', :abbrev_form => 'T.( M:O :* H ) */ P', :alpha => "MIO-AHOTAOP");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '1', :iform => '122.1 */ 155.1', :word_form => 'Top-of-tiger */ boar', :abbrev_form => 'TOT */ B', :alpha => "TOTAOB");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '7', :iform => '122.1 */ 155.1', :word_form => 'Top-of-tiger */ pig', :abbrev_form => 'TOT */ P', :alpha => "TOTAOP");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '2', :iform => 'Top( 122.0 ) */ 155.1', :word_form => 'top( Tiger ) */ boar', :abbrev_form => 'T( T ) */ B', :alpha => "TOTAOB");
Formula.create( :base => '155', :offset => '016', :subindex => '0', :ord => '8', :iform => 'Top( 122.0 ) */ 155.1', :word_form => 'top( Tiger ) */ pig', :abbrev_form => 'T( T ) */ P', :alpha => "TOTAOP");
Formula.create( :base => '155', :offset => '020', :subindex => '0', :ord => '1', :iform => '41.3 *\155.1', :word_form => 'Stop-and-go *\ boar', :abbrev_form => 'SAG *\ B', :alpha => "SAGAUB");
Formula.create( :base => '155', :offset => '020', :subindex => '0', :ord => '2', :iform => '41.3 *\155.1', :word_form => 'Stop-and-go *\ pig', :abbrev_form => 'SAG *\ P', :alpha => "SAGAUP");
Formula.create( :base => '155', :offset => '021', :subindex => '0', :ord => '1', :iform => '29.1 / 155.1', :word_form => 'Divide / boar', :abbrev_form => 'D / B', :alpha => "DOB");
Formula.create( :base => '155', :offset => '021', :subindex => '0', :ord => '2', :iform => '29.1 / 155.1', :word_form => 'Divide / pig', :abbrev_form => 'D / P', :alpha => "DOP");
Formula.create( :base => '155', :offset => '027', :subindex => '0', :ord => '1', :iform => '( 132.1->80.1 ) * 155.1', :word_form => '( meat->moon ) * boar', :abbrev_form => '( M->M ) * B', :alpha => "MYMAB");
Formula.create( :base => '155', :offset => '027', :subindex => '0', :ord => '2', :iform => '( 132.1->80.1 ) * 155.1', :word_form => '( meat->moon ) * pig', :abbrev_form => '( M->M ) * P', :alpha => "MYMAP");
Formula.create( :base => '156', :offset => '000', :subindex => 'a', :ord => '1', :iform => '156.0.a', :word_form => 'abstract( "mark" )', :abbrev_form => 'A( M )', :alpha => "AM");
Formula.create( :base => '156', :offset => '000', :subindex => 'b', :ord => '1', :iform => '( 156.0.a )^n', :word_form => 'mark^n', :abbrev_form => 'M^n', :alpha => "MUN");
Formula.create( :base => '156', :offset => '000', :subindex => 'c', :ord => '1', :iform => '156.0.c', :word_form => 'abstract( "print" )', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '156', :offset => '001', :subindex => '0', :ord => '1', :iform => '( 103.1 ):->( 156.0.b )', :word_form => 'claw:->marks', :abbrev_form => 'C:->M', :alpha => "CYM");
Formula.create( :base => '156', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 103.1 ):->( 156.0.b )->138.1', :word_form => 'claw:->marks->rice', :abbrev_form => 'C:->M->R', :alpha => "CYMYR");
Formula.create( :base => '156', :offset => '001', :subindex => '0', :ord => '4', :iform => '(( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )', :word_form => '( claw:->marks )->rice->( Drag / rice )', :abbrev_form => '( C:->M )->R->( D / R )', :alpha => "CYMYRYDOR");
Formula.create( :base => '156', :offset => '001', :subindex => '0', :ord => '3', :iform => '7.1 / 138.1', :word_form => 'Drag / rice', :abbrev_form => 'D / R', :alpha => "DOR");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '1', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( Heel:->print->field )', :abbrev_form => '( C:->M ) / ( H:->P->F )', :alpha => "CYMOHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '2', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( Heel:->print->field )', :abbrev_form => '( C:->M->R ) / ( H:->P->F )', :alpha => "CYMYROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '4', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( Heel:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( H:->P->F )', :alpha => "CYMYRYDOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '5', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( sole:->print->field )', :abbrev_form => '( C:->M ) / ( S:->P->F )', :alpha => "CYMOSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '6', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( sole:->print->field )', :abbrev_form => '( C:->M->R ) / ( S:->P->F )', :alpha => "CYMYROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '8', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( sole:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( S:->P->F )', :alpha => "CYMYRYDOROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '9', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( Heel:->print->field )', :abbrev_form => '( C:->M ) / ( H:->P->F )', :alpha => "CYMOHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '10', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( Heel:->print->field )', :abbrev_form => '( C:->M->R ) / ( H:->P->F )', :alpha => "CYMYROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '12', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( Heel:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( H:->P->F )', :alpha => "CYMYRYDOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '13', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( sole:->print->field )', :abbrev_form => '( C:->M ) / ( S:->P->F )', :alpha => "CYMOSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '14', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( sole:->print->field )', :abbrev_form => '( C:->M->R ) / ( S:->P->F )', :alpha => "CYMYROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '16', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( sole:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( S:->P->F )', :alpha => "CYMYRYDOROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '17', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( Heel:->print->field )', :abbrev_form => '( C:->M ) / ( H:->P->F )', :alpha => "CYMOHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '18', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( Heel:->print->field )', :abbrev_form => '( C:->M->R ) / ( H:->P->F )', :alpha => "CYMYROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '20', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( Heel:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( H:->P->F )', :alpha => "CYMYRYDOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '21', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( sole:->print->field )', :abbrev_form => '( C:->M ) / ( S:->P->F )', :alpha => "CYMOSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '22', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( sole:->print->field )', :abbrev_form => '( C:->M->R ) / ( S:->P->F )', :alpha => "CYMYROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '24', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( sole:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( S:->P->F )', :alpha => "CYMYRYDOROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '25', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( Heel:->print->field )', :abbrev_form => '( C:->M ) / ( H:->P->F )', :alpha => "CYMOHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '26', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( Heel:->print->field )', :abbrev_form => '( C:->M->R ) / ( H:->P->F )', :alpha => "CYMYROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '28', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( Heel:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( H:->P->F )', :alpha => "CYMYRYDOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '29', :iform => '(( 103.1 ):->( 156.0.b )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks ) / ( sole:->print->field )', :abbrev_form => '( C:->M ) / ( S:->P->F )', :alpha => "CYMOSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '30', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( claw:->marks->rice ) / ( sole:->print->field )', :abbrev_form => '( C:->M->R ) / ( S:->P->F )', :alpha => "CYMYROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '32', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / ( sole:->print->field )', :abbrev_form => '(( C:->M )->R->( D / R )) / ( S:->P->F )', :alpha => "CYMYRYDOROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 7.1 / 138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( Heel:->print->field )', :abbrev_form => '( D / R ) / ( H:->P->F )', :alpha => "DOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '7', :iform => '( 7.1 / 138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( sole:->print->field )', :abbrev_form => '( D / R ) / ( S:->P->F )', :alpha => "DOROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '11', :iform => '( 7.1 / 138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( Heel:->print->field )', :abbrev_form => '( D / R ) / ( H:->P->F )', :alpha => "DOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '15', :iform => '( 7.1 / 138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( sole:->print->field )', :abbrev_form => '( D / R ) / ( S:->P->F )', :alpha => "DOROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '19', :iform => '( 7.1 / 138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( Heel:->print->field )', :abbrev_form => '( D / R ) / ( H:->P->F )', :alpha => "DOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '23', :iform => '( 7.1 / 138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( sole:->print->field )', :abbrev_form => '( D / R ) / ( S:->P->F )', :alpha => "DOROSYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '27', :iform => '( 7.1 / 138.1 ) / (( 88.0.e ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( Heel:->print->field )', :abbrev_form => '( D / R ) / ( H:->P->F )', :alpha => "DOROHYPYF");
Formula.create( :base => '156', :offset => '002', :subindex => '0', :ord => '31', :iform => '( 7.1 / 138.1 ) / (( 88.0.f ):->( 156.0.c  )->( 111.1 ))', :word_form => '( Drag / rice ) / ( sole:->print->field )', :abbrev_form => '( D / R ) / ( S:->P->F )', :alpha => "DOROSYPYF");
Formula.create( :base => '156', :offset => '011', :subindex => '0', :ord => '1', :iform => '(( 103.1 ):->( 156.0.b )) / 83.1', :word_form => '( claw:->marks ) / heart-is-open', :abbrev_form => '( C:->M ) / HIO', :alpha => "CYMOHIO");
Formula.create( :base => '156', :offset => '011', :subindex => '0', :ord => '2', :iform => '(( 103.1 ):->( 156.0.b )->138.1 ) / 83.1', :word_form => '( claw:->marks->rice ) / heart-is-open', :abbrev_form => '( C:->M->R ) / HIO', :alpha => "CYMYROHIO");
Formula.create( :base => '156', :offset => '011', :subindex => '0', :ord => '4', :iform => '((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 )) / 83.1', :word_form => '(( claw:->marks )->rice->( Drag / rice )) / heart-is-open', :abbrev_form => '(( C:->M )->R->( D / R )) / HIO', :alpha => "CYMYRYDOROHIO");
Formula.create( :base => '156', :offset => '011', :subindex => '0', :ord => '3', :iform => '( 7.1 / 138.1 ) / 83.1', :word_form => '( Drag / rice ) / heart-is-open', :abbrev_form => '( D / R ) / HIO', :alpha => "DOROHIO");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '1', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b ))) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ ( claw:->marks )) / ( Left::join:> right )', :abbrev_form => '( R {}/ ( C:->M )) / ( L::J:>R )', :alpha => "REOCYMOLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '2', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b )->138.1 )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ ( claw:->marks->rice )) / ( Left::join:> right )', :abbrev_form => '( R {}/ ( C:->M->R )) / ( L::J:>R )', :alpha => "REOCYMYROLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '3', :iform => '( 63.1 {}/ ( 7.1 / 138.1 )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ ( Drag / rice )) / ( Left::join:> right )', :abbrev_form => '( R {}/ ( D / R )) / ( L::J:>R )', :alpha => "REODOROLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '4', :iform => '( 63.1 {}/ ((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 ))) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ (( claw:->marks )->rice->( Drag / rice ))) / ( Left::join:> right )', :abbrev_form => '( R {}/ (( C:->M )->R->( D / R ))) / ( L::J:>R )', :alpha => "REOCYMYRYDOROLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '5', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b ))) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ ( claw:->marks )) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ ( C:->M )) / (( L::J:>R )->( P::S:>A ))', :alpha => "REOCYMOLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '6', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b )->138.1 )) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ ( claw:->marks->rice )) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ ( C:->M->R )) / (( L::J:>R )->( P::S:>A ))', :alpha => "REOCYMYROLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '7', :iform => '( 63.1 {}/ ( 7.1 / 138.1 )) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ ( Drag / rice )) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ ( D / R )) / (( L::J:>R )->( P::S:>A ))', :alpha => "REODOROLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '8', :iform => '( 63.1 {}/ ((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 ))) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ (( claw:->marks )->rice->( Drag / rice ))) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ (( C:->M )->R->( D / R ))) / (( L::J:>R )->( P::S:>A ))', :alpha => "REOCYMYRYDOROLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '9', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b ))) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ ( claw:->marks )) / ( person::show:>arms )', :abbrev_form => '( R {}/ ( C:->M )) / ( P::S:>A )', :alpha => "REOCYMOPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '10', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b )->138.1 )) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ ( claw:->marks->rice )) / ( person::show:>arms )', :abbrev_form => '( R {}/ ( C:->M->R )) / ( P::S:>A )', :alpha => "REOCYMYROPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '11', :iform => '( 63.1 {}/ ( 7.1 / 138.1 )) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ ( Drag / rice )) / ( person::show:>arms )', :abbrev_form => '( R {}/ ( D / R )) / ( P::S:>A )', :alpha => "REODOROPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '12', :iform => '( 63.1 {}/ ((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 ))) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ (( claw:->marks )->rice->( Drag / rice ))) / ( person::show:>arms )', :abbrev_form => '( R {}/ (( C:->M )->R->( D / R ))) / ( P::S:>A )', :alpha => "REOCYMYRYDOROPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '13', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b ))) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ ( claw:->marks )) / ( Left::join:> right )', :abbrev_form => '( R {}/ ( C:->M )) / ( L::J:>R )', :alpha => "REOCYMOLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '14', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b )->138.1 )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ ( claw:->marks->rice )) / ( Left::join:> right )', :abbrev_form => '( R {}/ ( C:->M->R )) / ( L::J:>R )', :alpha => "REOCYMYROLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '15', :iform => '( 63.1 {}/ ( 7.1 / 138.1 )) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ ( Drag / rice )) / ( Left::join:> right )', :abbrev_form => '( R {}/ ( D / R )) / ( L::J:>R )', :alpha => "REODOROLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '16', :iform => '( 63.1 {}/ ((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 ))) / ( 15.1::15.0.c:>14.1 )', :word_form => '( Roof {}/ (( claw:->marks )->rice->( Drag / rice ))) / ( Left::join:> right )', :abbrev_form => '( R {}/ (( C:->M )->R->( D / R ))) / ( L::J:>R )', :alpha => "REOCYMYRYDOROLAJOR");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '17', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b ))) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ ( claw:->marks )) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ ( C:->M )) / (( L::J:>R )->( P::S:>A ))', :alpha => "REOCYMOLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '18', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b )->138.1 )) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ ( claw:->marks->rice )) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ ( C:->M->R )) / (( L::J:>R )->( P::S:>A ))', :alpha => "REOCYMYROLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '19', :iform => '( 63.1 {}/ ( 7.1 / 138.1 )) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ ( Drag / rice )) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ ( D / R )) / (( L::J:>R )->( P::S:>A ))', :alpha => "REODOROLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '20', :iform => '( 63.1 {}/ ((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 ))) / (( 15.1::15.0.c:>14.1 )->(( 10.0 )::( 75.0.b ):>( 39.0.d )))', :word_form => '( Roof {}/ (( claw:->marks )->rice->( Drag / rice ))) / (( Left::join:> right )->( person::show:>arms ))', :abbrev_form => '( R {}/ (( C:->M )->R->( D / R ))) / (( L::J:>R )->( P::S:>A ))', :alpha => "REOCYMYRYDOROLAJORYPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '21', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b ))) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ ( claw:->marks )) / ( person::show:>arms )', :abbrev_form => '( R {}/ ( C:->M )) / ( P::S:>A )', :alpha => "REOCYMOPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '22', :iform => '( 63.1 {}/ (( 103.1 ):->( 156.0.b )->138.1 )) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ ( claw:->marks->rice )) / ( person::show:>arms )', :abbrev_form => '( R {}/ ( C:->M->R )) / ( P::S:>A )', :alpha => "REOCYMYROPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '23', :iform => '( 63.1 {}/ ( 7.1 / 138.1 )) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ ( Drag / rice )) / ( person::show:>arms )', :abbrev_form => '( R {}/ ( D / R )) / ( P::S:>A )', :alpha => "REODOROPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => '0', :ord => '24', :iform => '( 63.1 {}/ ((( 103.1 ):->( 156.0.b ))->138.1->( 7.1 / 138.1 ))) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ (( claw:->marks )->rice->( Drag / rice ))) / ( person::show:>arms )', :abbrev_form => '( R {}/ (( C:->M )->R->( D / R ))) / ( P::S:>A )', :alpha => "REOCYMYRYDOROPASOA");
Formula.create( :base => '156', :offset => '013', :subindex => 's', :ord => '1', :iform => '( 63.1 {}/ 138.1 ) / (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Roof {}/ rice ) / ( person::show:>arms )', :abbrev_form => '( R {}/ R ) / ( P::S:>A )', :alpha => "REOROPASOA");
Formula.create( :base => '157', :offset => '001', :subindex => '0', :ord => '1', :iform => '157.1', :word_form => '{ "objects strung together" }', :abbrev_form => 'ST', :alpha => "ST");
Formula.create( :base => '157', :offset => '001', :subindex => '0', :ord => '3', :iform => 'Stack( 68.0.b->68.0 ) + ( 4.1.g )', :word_form => 'stack( object->mouth ) + string', :abbrev_form => 'S( O->M ) + S', :alpha => "SO-OYMIS");
Formula.create( :base => '157', :offset => '001', :subindex => '0', :ord => '5', :iform => 'Stack( 68.0.b->68.0 ) + ( 4.1 )', :word_form => 'stack( object->mouth ) + post', :abbrev_form => 'S( O->M ) + P', :alpha => "SO-OYMIP");
Formula.create( :base => '157', :offset => '001', :subindex => '0', :ord => '2', :iform => 'Stack( 68.1 ) + ( 4.1.g )', :word_form => 'stack( opening ) + string', :abbrev_form => 'S( O ) + S', :alpha => "SO-OIS");
Formula.create( :base => '157', :offset => '001', :subindex => '0', :ord => '4', :iform => 'Stack( 68.1 ) + ( 4.1 )', :word_form => 'stack( opening ) + post', :abbrev_form => 'S( O ) + P', :alpha => "SO-OIP");
Formula.create( :base => '157', :offset => '002', :subindex => '0', :ord => '2', :iform => '( Stack( 68.1 ) + ( 4.1.g )) / 83.1', :word_form => '( stack( opening ) + string ) / heart-is-open', :abbrev_form => '( S( O ) + S ) / HIO', :alpha => "SO-OISOHIO");
Formula.create( :base => '157', :offset => '002', :subindex => '0', :ord => '3', :iform => '( Stack( 68.0.b->68.0 ) + ( 4.1.g )) / 83.1', :word_form => '( stack( object->mouth ) + string ) / heart-is-open', :abbrev_form => '( S( O->M ) + S ) / HIO', :alpha => "SO-OYMISOHIO");
Formula.create( :base => '157', :offset => '002', :subindex => '0', :ord => '4', :iform => '( Stack( 68.1 ) + ( 4.1 )) / 83.1', :word_form => '( stack( opening ) + post ) / heart-is-open', :abbrev_form => '( S( O ) + P ) / HIO', :alpha => "SO-OIPOHIO");
Formula.create( :base => '157', :offset => '002', :subindex => '0', :ord => '5', :iform => '( Stack( 68.0.b->68.0 ) + ( 4.1 )) / 83.1', :word_form => '( stack( object->mouth ) + post ) / heart-is-open', :abbrev_form => '( S( O->M ) + P ) / HIO', :alpha => "SO-OYMIPOHIO");
Formula.create( :base => '157', :offset => '002', :subindex => '0', :ord => '1', :iform => '157.1 / 83.1', :word_form => 'String-together / heart-is-open', :abbrev_form => 'ST / HIO', :alpha => "STOHIO");
Formula.create( :base => '158', :offset => '000', :subindex => '0', :ord => '1', :iform => '158.0', :word_form => 'abstract( "cart" )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '158', :offset => '000', :subindex => 'a', :ord => '1', :iform => '158.0.a', :word_form => 'abstract( "wheel" )', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '158', :offset => '000', :subindex => 'b', :ord => '1', :iform => '158.0.b', :word_form => 'abstract( "axle" )', :abbrev_form => 'A( A )', :alpha => "AA");
Formula.create( :base => '158', :offset => '000', :subindex => 'c', :ord => '1', :iform => '158.0.c', :word_form => 'abstract( "four" )', :abbrev_form => 'A( A )', :alpha => "AA");
Formula.create( :base => '158', :offset => '001', :subindex => '0', :ord => '11', :iform => '( 1.1.a / 68.46 / 1.1.a ) + 4.1', :word_form => '( bar / say / bar ) + post', :abbrev_form => '( B / S / B ) + P', :alpha => "BOSOBIP");
Formula.create( :base => '158', :offset => '001', :subindex => '0', :ord => '13', :iform => '( 1.2 /\ 68.46 ) + 4.1', :word_form => '( two /\ say ) + post', :abbrev_form => '( T /\ S  ) + P', :alpha => "TOUSIP");
Formula.create( :base => '158', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 158.0.a ):^2 /\ 147.0 ) + 158.0.b', :word_form => '( Wheel:^2 /\ body ) + axle', :abbrev_form => '( W:^2 /\ B ) + A', :alpha => "WUTOUBIA");
Formula.create( :base => '158', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 158.0.a / 147.0 / 158.0.a ) + 158.0.b', :word_form => '( Wheel / body / wheel ) + axle', :abbrev_form => '( W / B / W ) + A', :alpha => "WOBOWIA");
Formula.create( :base => '158', :offset => '001', :subindex => '0', :ord => '3', :iform => '( stack( 158.0.a ) /\ 147.0 ) + 158.0.b', :word_form => '( stack( wheel ) /\ body ) + axle', :abbrev_form => '( S( W ) /\ B ) + A', :alpha => "SOWOUBIA");
Formula.create( :base => '158', :offset => '001', :subindex => '0', :ord => '9', :iform => '( stack( 1.1.a ) /\ 68.46 ) + 4.1', :word_form => '( stack( bar ) /\ say ) + post', :abbrev_form => '( S( B ) /\ S  ) + P', :alpha => "SOWOUBIA");
Formula.create( :base => '158', :offset => '001', :subindex => '0', :ord => '1', :iform => '158.1', :word_form => '{ "chariot viewed from above with wheels top and bottom" }', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '158', :offset => '001', :subindex => 's', :ord => '15', :iform => '1.2 + 158.0.c', :word_form => 'two + four', :abbrev_form => 'T + F', :alpha => "TIF");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 18.1->24.1 ) / 158.1', :word_form => '( Person-at-top->cover ) / cart', :abbrev_form => '( PAT->C ) / C', :alpha => "PATYCOC");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '6', :iform => '( 18.1->24.1 ) / 158.1', :word_form => '( Person-at-top->cover ) / vehicle', :abbrev_form => '( PAT->C ) / V', :alpha => "PATYCOV");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '9', :iform => '( 18.1->24.1 ) / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => '( Person-at-top->cover ) / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => '( PAT->C ) / (( S( W ) /\ B ) + A )', :alpha => "PATYCOSOWOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '12', :iform => '( 18.1->24.1 ) / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => '( Person-at-top->cover ) / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => '( PAT->C ) / (( W:^2 /\ B ) + A )', :alpha => "PATYCOWUTOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '15', :iform => '( 18.1->24.1 ) / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => '( Person-at-top->cover ) / (( Wheel / body / wheel ) + axle )', :abbrev_form => '( PAT->C ) / (( W / B / W ) + A )', :alpha => "PATYCOWOBOWIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '18', :iform => '( 18.1->24.1 ) / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => '( Person-at-top->cover ) / (( stack( bar ) /\ say ) + post )', :abbrev_form => '( PAT->C ) / (( S( B ) /\ S  ) + P)', :alpha => "PATYCOSOWOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '21', :iform => '( 18.1->24.1 ) / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => '( Person-at-top->cover ) / (( bar / say / bar ) + post )', :abbrev_form => '( PAT->C ) / (( B / S / B ) + P )', :alpha => "PATYCOBOSOBIP");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '24', :iform => '( 18.1->24.1 ) / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => '( Person-at-top->cover ) / (( two /\ say ) + post )', :abbrev_form => '( PAT->C ) / (( T /\ S  ) + P )', :alpha => "PATYCOTOUSIP");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '1', :iform => '18.1 / 158.1', :word_form => 'Person-at-top / cart', :abbrev_form => 'PAT / C', :alpha => "PATOC");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '4', :iform => '18.1 / 158.1', :word_form => 'Person-at-top / vehicle', :abbrev_form => 'PAT / V', :alpha => "PATOV");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '7', :iform => '18.1 / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => 'Person-at-top / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'PAT / (( S( W ) /\ B ) + A )', :alpha => "PATOSOWOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '10', :iform => '18.1 / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'Person-at-top / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'PAT / (( W:^2 /\ B ) + A )', :alpha => "PATOWUTOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '13', :iform => '18.1 / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'Person-at-top / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'PAT / (( W / B / W ) + A )', :alpha => "PATOWOBOWIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '16', :iform => '18.1 / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'Person-at-top / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'PAT / (( S( B ) /\ S  ) + P)', :alpha => "PATOSOWOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '19', :iform => '18.1 / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'Person-at-top / (( bar / say / bar ) + post )', :abbrev_form => 'PAT / (( B / S / B ) + P )', :alpha => "PATOBOSOBIP");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '22', :iform => '18.1 / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'Person-at-top / (( two /\ say ) + post )', :abbrev_form => 'PAT / (( T /\ S  ) + P )', :alpha => "PATOTOUSIP");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '2', :iform => '24.1 / 158.1', :word_form => 'cover / cart', :abbrev_form => 'C / C', :alpha => "COC");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '5', :iform => '24.1 / 158.1', :word_form => 'cover / vehicle', :abbrev_form => 'C / V', :alpha => "COV");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '8', :iform => '24.1 / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => 'cover / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'C / (( S( W ) /\ B ) + A )', :alpha => "COSOWOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '11', :iform => '24.1 / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'cover / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'C / (( W:^2 /\ B ) + A )', :alpha => "COWUTOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '14', :iform => '24.1 / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'Cover / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'C / (( W / B / W ) + A )', :alpha => "COWOBOWIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '17', :iform => '24.1 / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'cover / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'C / (( S( B ) /\ S  ) + P)', :alpha => "COSOWOUBIA");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '20', :iform => '24.1 / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'cover / (( bar / say / bar ) + post )', :abbrev_form => 'C / (( B / S / B ) + P )', :alpha => "COBOSOBIP");
Formula.create( :base => '158', :offset => '002', :subindex => '0', :ord => '23', :iform => '24.1 / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'cover / (( two /\ say ) + post )', :abbrev_form => 'C / (( T /\ S  ) + P )', :alpha => "COTOUSIP");
Formula.create( :base => '158', :offset => '002', :subindex => 's', :ord => '27', :iform => '( 18.1->24.1 ) / ( 1.2 + 158.0.c )', :word_form => '( Person-at-top->cover ) / ( two + four )', :abbrev_form => '( PAT->C ) / ( T + F )', :alpha => "PATYCOTIF");
Formula.create( :base => '158', :offset => '002', :subindex => 's', :ord => '25', :iform => '18.1 / ( 1.2 + 158.0.c )', :word_form => 'Person-at-top / ( two + four )', :abbrev_form => 'PAT / ( T + F )', :alpha => "PATOTIF");
Formula.create( :base => '158', :offset => '002', :subindex => 's', :ord => '26', :iform => '24.1 / ( 1.2 + 158.0.c )', :word_form => 'cover / ( two + four )', :abbrev_form => 'C / ( T + F )', :alpha => "COTIF");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '15', :iform => 'pile(( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'pile(( bar / say / bar ) + post )', :abbrev_form => 'P(( B / S / B ) + P )', :alpha => "POBOSOBIP");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '16', :iform => 'pile(( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'pile(( two /\ say ) + post )', :abbrev_form => 'P(( T /\ S  ) + P )', :alpha => "POTOUSIP");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '12', :iform => 'pile(( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'pile(( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'P(( W:^2 /\ B ) + A )', :alpha => "POWUTOUBIA");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '13', :iform => 'pile(( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'pile(( Wheel / body / wheel ) + axle )', :abbrev_form => 'P(( W / B / W ) + A )', :alpha => "POWOBOWIA");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '9', :iform => 'pile( 158.1 )', :word_form => 'pile( cart )', :abbrev_form => 'P( C )', :alpha => "POC");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '10', :iform => 'pile( 158.1 )', :word_form => 'pile( vehicle )', :abbrev_form => 'P( V )', :alpha => "POV");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '11', :iform => 'pile(( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => 'pile(( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'P(( S( W ) /\ B ) + A )', :alpha => "POSOWOUBIA");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '14', :iform => 'pile(( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'pile(( stack( bar ) /\ say ) + post )', :abbrev_form => 'P(( S( B ) /\ S  ) + P)', :alpha => "POSOWOUBIA");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '7', :iform => 'Tripod(( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'Tripod(( bar / say / bar ) + post )', :abbrev_form => 'T(( B / S / B ) + P )', :alpha => "TOBOSOBIP");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '8', :iform => 'Tripod(( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'Tripod(( two /\ say ) + post )', :abbrev_form => 'T(( T /\ S  ) + P )', :alpha => "TOTOUSIP");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '4', :iform => 'Tripod(( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'Tripod(( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'T(( W:^2 /\ B ) + A )', :alpha => "TOWUTOUBIA");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '5', :iform => 'Tripod(( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'Tripod(( Wheel / body / wheel ) + axle )', :abbrev_form => 'T(( W / B / W ) + A )', :alpha => "TOWOBOWIA");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '1', :iform => 'Tripod( 158.1 )', :word_form => 'Tripod( cart )', :abbrev_form => 'T( C )', :alpha => "TOC");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '2', :iform => 'Tripod( 158.1 )', :word_form => 'Tripod( vehicle )', :abbrev_form => 'T( V )', :alpha => "TOV");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '3', :iform => 'Tripod(( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => 'Tripod(( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'T(( S( W ) /\ B ) + A )', :alpha => "TOSOWOUBIA");
Formula.create( :base => '158', :offset => '009', :subindex => '0', :ord => '6', :iform => 'Tripod(( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'Tripod(( stack( bar ) /\ say ) + post )', :abbrev_form => 'T(( S( B ) /\ S  ) + P)', :alpha => "TOSOWOUBIA");
Formula.create( :base => '158', :offset => '009', :subindex => 's', :ord => '17', :iform => '( 1.2 + 158.0.c ) / ( 14.1^2 )', :word_form => '( two + four ) / (( hand->again )^2 )', :abbrev_form => '( T + F ) / ( ( H->A)^2 )', :alpha => "TIFOHYA-UT");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '1', :iform => '( 167.1->33.18.a ) * 158.1', :word_form => '( hill->beta ) * cart', :abbrev_form => '( H->B ) * C', :alpha => "HYBAC");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '2', :iform => '( 167.1->33.18.a ) * 158.1', :word_form => '( hill->beta ) * vehicle', :abbrev_form => '( H->B ) * V', :alpha => "HYBAV");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '3', :iform => '( 167.1->33.18.a ) * (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => '( hill->beta ) * (( stack( wheel ) /\ body ) + axle )', :abbrev_form => '( H->B ) * (( S( W ) /\ B ) + A )', :alpha => "HYBASOWOUBIA");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '4', :iform => '( 167.1->33.18.a ) * (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => '( hill->beta ) * (( Wheel:^2 /\ body ) + axle )', :abbrev_form => '( H->B ) * (( W:^2 /\ B ) + A )', :alpha => "HYBAWUTOUBIA");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '5', :iform => '( 167.1->33.18.a ) * (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => '( hill->beta ) * (( Wheel / body / wheel ) + axle )', :abbrev_form => '( H->B ) * (( W / B / W ) + A )', :alpha => "HYBAWOBOWIA");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '6', :iform => '( 167.1->33.18.a ) * (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => '( hill->beta ) * (( stack( bar ) /\ say ) + post )', :abbrev_form => '( H->B ) * (( S( B ) /\ S  ) + P)', :alpha => "HYBASOWOUBIA");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '7', :iform => '( 167.1->33.18.a ) * (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => '( hill->beta ) * (( bar / say / bar ) + post )', :abbrev_form => '( H->B ) * (( B / S / B ) + P )', :alpha => "HYBABOSOBIP");
Formula.create( :base => '158', :offset => '010', :subindex => '0', :ord => '8', :iform => '( 167.1->33.18.a ) * (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => '( hill->beta ) * (( two /\ say ) + post )', :abbrev_form => '( H->B ) * (( T /\ S  ) + P )', :alpha => "HYBATOUSIP");
Formula.create( :base => '158', :offset => '010', :subindex => 's', :ord => '9', :iform => '( 167.1->33.18.a ) * ( 1.2 + 158.0.c )', :word_form => '( hill->beta ) * ( two + four )', :abbrev_form => '( H->B ) * ( T + F )', :alpha => "HYBATIF");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '1', :iform => '41.3.a *\ 158.1', :word_form => 'Stop-and-go *\ cart', :abbrev_form => 'SAG *\ C', :alpha => "SAGAUC");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '2', :iform => '41.3.a *\ 158.1', :word_form => 'Stop-and-go *\ vehicle', :abbrev_form => 'SAG *\ V', :alpha => "SAGAUV");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '3', :iform => '41.3.a *\ (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => 'Stop-and-go *\ (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'SAG *\ (( S( W ) /\ B ) + A )', :alpha => "SAGAUSOWOUBIA");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '4', :iform => '41.3.a *\ (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'Stop-and-go *\ (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'SAG *\ (( W:^2 /\ B ) + A )', :alpha => "SAGAUWUTOUBIA");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '5', :iform => '41.3.a *\ (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'Stop-and-go *\ (( Wheel / body / wheel ) + axle )', :abbrev_form => 'SAG *\ (( W / B / W ) + A )', :alpha => "SAGAUWOBOWIA");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '6', :iform => '41.3.a *\ (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'Stop-and-go *\ (( stack( bar ) /\ say ) + post )', :abbrev_form => 'SAG *\ (( S( B ) /\ S  ) + P)', :alpha => "SAGAUSOWOUBIA");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '7', :iform => '41.3.a *\ (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'Stop-and-go *\ (( bar / say / bar ) + post )', :abbrev_form => 'SAG *\ (( B / S / B ) + P )', :alpha => "SAGAUBOSOBIP");
Formula.create( :base => '158', :offset => '011', :subindex => '0', :ord => '8', :iform => '41.3.a *\ (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'Stop-and-go *\ (( two /\ say ) + post )', :abbrev_form => 'SAG *\ (( T /\ S  ) + P )', :alpha => "SAGAUTOUSIP");
Formula.create( :base => '158', :offset => '011', :subindex => 's', :ord => '9', :iform => '41.3.a *\ ( 1.2 + 158.0.c )', :word_form => 'Stop-and-go *\ ( two + four )', :abbrev_form => 'SAG *\ ( T + F )', :alpha => "SAGAUTIF");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '1', :iform => '60.1 */ 158.1', :word_form => 'Shelter */ cart', :abbrev_form => 'S */ C', :alpha => "SAOC");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '2', :iform => '60.1 */ 158.1', :word_form => 'Shelter */ vehicle', :abbrev_form => 'S */ V', :alpha => "SAOV");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '3', :iform => '60.1 */ (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b )', :word_form => 'Shelter */ (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'S */ (( S( W ) /\ B ) + A )', :alpha => "SAOSOWOUBIA");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '4', :iform => '60.1 */ (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'Shelter */ (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'S */ (( W:^2 /\ B ) + A )', :alpha => "SAOWUTOUBIA");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '5', :iform => '60.1 */ (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'Shelter */ (( Wheel / body / wheel ) + axle )', :abbrev_form => 'S */ (( W / B / W ) + A )', :alpha => "SAOWOBOWIA");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '6', :iform => '60.1 */ (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'Shelter */ (( stack( bar ) /\ say ) + post )', :abbrev_form => 'S */ (( S( B ) /\ S  ) + P)', :alpha => "SAOSOWOUBIA");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '7', :iform => '60.1 */ (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'Shelter */ (( bar / say / bar ) + post )', :abbrev_form => 'S */ (( B / S / B ) + P )', :alpha => "SAOBOSOBIP");
Formula.create( :base => '158', :offset => '014', :subindex => '0', :ord => '8', :iform => '60.1 */ (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'Shelter */ (( two /\ say ) + post )', :abbrev_form => 'S */ (( T /\ S  ) + P )', :alpha => "SAOTOUSIP");
Formula.create( :base => '158', :offset => '014', :subindex => 's', :ord => '1', :iform => '60.1 */ ( 1.2 + 158.0.c )', :word_form => 'Shelter */ ( two + four )', :abbrev_form => 'S */ ( T + F )', :alpha => "SAOTIF");
Formula.create( :base => '159', :offset => '000', :subindex => '0', :ord => '1', :iform => '159.0', :word_form => 'abstract( "jug" )', :abbrev_form => 'A( J )', :alpha => "AJ");
Formula.create( :base => '159', :offset => '000', :subindex => 'a', :ord => '1', :iform => '159.0.a', :word_form => 'abstract( "jug" )', :abbrev_form => 'A( V )', :alpha => "AV");
Formula.create( :base => '159', :offset => '000', :subindex => 'b', :ord => '1', :iform => '159.0.b', :word_form => 'abstract( "wine" )', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '159', :offset => '001', :subindex => '0', :ord => '2', :iform => '159.0 :[] 159.0.b', :word_form => 'Jug :[] wine', :abbrev_form => 'J:[]W', :alpha => "JEW");
Formula.create( :base => '159', :offset => '001', :subindex => '0', :ord => '3', :iform => '159.0.a :[] 159.0.b', :word_form => 'Vase :[] wine', :abbrev_form => 'V:[]W', :alpha => "VEW");
Formula.create( :base => '159', :offset => '001', :subindex => '0', :ord => '4', :iform => '159.0.b :][ 159.0', :word_form => 'Wine :][ Jug', :abbrev_form => 'W :][ J', :alpha => "WIJ");
Formula.create( :base => '159', :offset => '001', :subindex => '0', :ord => '5', :iform => '159.0.b :][ 159.0.a', :word_form => 'Wine :][ Vase', :abbrev_form => 'W "][ V', :alpha => "WIV");
Formula.create( :base => '159', :offset => '001', :subindex => '0', :ord => '9', :iform => '159.0.b :][ 159.0', :word_form => 'Wine :][ Jug', :abbrev_form => 'W :][ J', :alpha => "WIJ");
Formula.create( :base => '159', :offset => '001', :subindex => '0', :ord => '10', :iform => '159.0.b :][ 159.0.a', :word_form => 'Wine :][ Vase', :abbrev_form => 'W "][ V', :alpha => "WIV");
Formula.create( :base => '159', :offset => '001', :subindex => '0', :ord => '1', :iform => '159.1', :word_form => '{ "wine vase" }', :abbrev_form => 'L', :alpha => "L");
Formula.create( :base => '159', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * 159.1', :word_form => 'Side-water * jug-of-wine', :abbrev_form => 'SW * JOW', :alpha => "SWAJOW");
Formula.create( :base => '159', :offset => '002', :subindex => '0', :ord => '2', :iform => '2.21.a * ( 159.0 :[] 159.0.b )', :word_form => 'Side-water * ( Jug :[] wine )', :abbrev_form => 'SW * ( J :[] W )', :alpha => "SWAJEW");
Formula.create( :base => '159', :offset => '002', :subindex => '0', :ord => '3', :iform => '2.21.a * ( 159.0.a :[] 159.0.b )', :word_form => 'Side-water * ( Vase :[] wine )', :abbrev_form => 'SW * ( V :[] W )', :alpha => "SWAVEW");
Formula.create( :base => '159', :offset => '002', :subindex => '0', :ord => '4', :iform => '2.21.a * ( 159.0.b :][ 159.0 )', :word_form => 'Side-water * ( Wine :][ Jug )', :abbrev_form => 'SW * ( W :][ J )', :alpha => "SWAWIJ");
Formula.create( :base => '159', :offset => '002', :subindex => '0', :ord => '5', :iform => '2.21.a * ( 159.0.b :][ 159.0.a )', :word_form => 'Side-water * ( Wine :][ Vase )', :abbrev_form => 'SW * ( W :][ V )', :alpha => "SWAWIV");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '2', :iform => '( 159.0 :[] 159.0.b ) * 140.6', :word_form => '( Jug :[] wine ) * ghost', :abbrev_form => '( J :[] W ) * G', :alpha => "JEWAG");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '7', :iform => '( 159.0 :[] 159.0.b ) * ( 140.1 / ( 11.1 *\ 19.1.d ))', :word_form => '( Jug :[] wine ) * ( Spirit-head / (( person:->legs ) *\ ( vapor->cocoon )))', :abbrev_form => '( J :[] W ) * ( SH / (( P:->L ) *\ ( V->C )))', :alpha => "JEWASHOPYLA-UVYC");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 159.0.a :[] 159.0.b ) * 140.6', :word_form => '( Vase :[] wine ) * ghost', :abbrev_form => '( V :[] W ) * G', :alpha => "VEWAG");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '8', :iform => '( 159.0.a :[] 159.0.b ) * ( 140.1 / ( 11.1 *\ 19.1.d ))', :word_form => '( Vase :[] wine ) * ( Spirit-head / (( person:->legs ) *\ ( vapor->cocoon )))', :abbrev_form => '( V :[] W ) * ( SH / (( P:->L ) *\ ( V->C )))', :alpha => "VEWASHOPYLA-UVYC");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '4', :iform => '( 159.0.b :][ 159.0 ) * 140.6', :word_form => '( Wine :][ Jug ) * ghost', :abbrev_form => '( W :][ J ) * G', :alpha => "WIJAG");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '5', :iform => '( 159.0.b :][ 159.0.a ) * 140.6', :word_form => '( Wine :][ Vase ) * ghost', :abbrev_form => '( W :][ V ) * G', :alpha => "WIVAG");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '9', :iform => '( 159.0.b :][ 159.0 ) * ( 140.1 / ( 11.1 *\ 19.1.d ))', :word_form => '( Wine :][ Jug ) * ( Spirit-head / (( person:->legs ) *\ ( vapor->cocoon )))', :abbrev_form => '( W :][ J ) * ( SH / (( P:->L ) *\ ( V->C )))', :alpha => "WIJASHOPYLA-UVYC");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '10', :iform => '( 159.0.b :][ 159.0.a ) * ( 140.1 / ( 11.1 *\ 19.1.d ))', :word_form => '( Wine :][ Vase ) * ( Spirit-head / (( person:->legs ) *\ ( vapor->cocoon )))', :abbrev_form => '( W :][ V ) * ( SH / (( P:->L ) *\ ( V->C )))', :alpha => "WIVASHOPYLA-UVYC");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '1', :iform => '159.1 * 140.6', :word_form => 'jug-of-wine * ghost', :abbrev_form => 'JOW * G', :alpha => "JOWAG");
Formula.create( :base => '159', :offset => '003', :subindex => '0', :ord => '6', :iform => '159.1 * ( 140.1 / ( 11.1 *\ 19.1.d ))', :word_form => 'jug-of-wine * ( Spirit-head / (( person:->legs ) *\ ( vapor->cocoon )))', :abbrev_form => 'JOW * ( SH / (( P:->L ) *\ ( V->C )))', :alpha => "JOWASHOPYLA-UVYC");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '1', :iform => '( 1.1.c^2 ) / 159.1', :word_form => '( Drop^2 ) / jug-of-wine', :abbrev_form => '( D^2 ) / JOW', :alpha => "DUTOJOW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 1.1.c^2 ) / ( 159.0 :[] 159.0.b )', :word_form => '( Drop^2 ) / ( Jug :[] wine )', :abbrev_form => '( D^2 ) / ( J :[] W )', :alpha => "DUTOJEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 1.1.c^2 ) / ( 159.0.a :[] 159.0.b )', :word_form => '( Drop^2 ) / ( Vase :[] wine )', :abbrev_form => '( D^2 ) / ( V :[] W )', :alpha => "DUTOVEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 1.1.c^2 ) / ( 159.0.b :][ 159.0 )', :word_form => '( Drop^2 ) / ( Wine :][ Jug )', :abbrev_form => '( D^2 ) / ( W :][ J )', :alpha => "DUTOWIJ");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '5', :iform => '( 1.1.c^2 ) / ( 159.0.b :][ 159.0.a )', :word_form => '( Drop^2 ) / ( Wine :][ Vase )', :abbrev_form => '( D^2 ) / ( W :][ V )', :alpha => "DUTOWIV");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '11', :iform => '( 1.1.c^2 ) / 159.1', :word_form => '( Drop^2 ) / jug-of-wine', :abbrev_form => '( D^2 ) / JOW', :alpha => "DUTOJOW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '12', :iform => '( 1.1.c^2 ) / ( 159.0 :[] 159.0.b )', :word_form => '( Drop^2 ) / ( Jug :[] wine )', :abbrev_form => '( D^2 ) / ( J :[] W )', :alpha => "DUTOJEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '13', :iform => '( 1.1.c^2 ) / ( 159.0.a :[] 159.0.b )', :word_form => '( Drop^2 ) / ( Vase :[] wine )', :abbrev_form => '( D^2 ) / ( V :[] W )', :alpha => "DUTOVEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '14', :iform => '( 1.1.c^2 ) / ( 159.0.b :][ 159.0 )', :word_form => '( Drop^2 ) / ( Wine :][ Jug )', :abbrev_form => '( D^2 ) / ( W :][ J )', :alpha => "DUTOWIJ");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '15', :iform => '( 1.1.c^2 ) / ( 159.0.b :][ 159.0.a )', :word_form => '( Drop^2 ) / ( Wine :][ Vase )', :abbrev_form => '( D^2 ) / ( W :][ V )', :alpha => "DUTOWIV");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '6', :iform => '29.1 / 159.1', :word_form => 'divide / jug-of-wine', :abbrev_form => 'D / JOW', :alpha => "DOJOW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '7', :iform => '29.1 / ( 159.0 :[] 159.0.b )', :word_form => 'divide / ( Jug :[] wine )', :abbrev_form => 'D / ( J :[] W )', :alpha => "DOJEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '8', :iform => '29.1 / ( 159.0.a :[] 159.0.b )', :word_form => 'divide / ( Vase :[] wine )', :abbrev_form => 'D / ( V :[] W )', :alpha => "DOVEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '9', :iform => '29.1 / ( 159.0.b :][ 159.0 )', :word_form => 'divide / ( Wine :][ Jug )', :abbrev_form => 'D / ( W :][ J )', :alpha => "DOWIJ");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '10', :iform => '29.1 / ( 159.0.b :][ 159.0.a )', :word_form => 'divide / ( Wine :][ Vase )', :abbrev_form => 'D / ( W :][ V )', :alpha => "DOWIV");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '16', :iform => '29.1 / 159.1', :word_form => 'divide / jug-of-wine', :abbrev_form => 'D / JOW', :alpha => "DOJOW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '17', :iform => '29.1 / ( 159.0 :[] 159.0.b )', :word_form => 'divide / ( Jug :[] wine )', :abbrev_form => 'D / ( J :[] W )', :alpha => "DOJEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '18', :iform => '29.1 / ( 159.0.a :[] 159.0.b )', :word_form => 'divide / ( Vase :[] wine )', :abbrev_form => 'D / ( V :[] W )', :alpha => "DOVEW");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '19', :iform => '29.1 / ( 159.0.b :][ 159.0 )', :word_form => 'divide / ( Wine :][ Jug )', :abbrev_form => 'D / ( W :][ J )', :alpha => "DOWIJ");
Formula.create( :base => '159', :offset => '004', :subindex => '0', :ord => '20', :iform => '29.1 / ( 159.0.b :][ 159.0.a )', :word_form => 'divide / ( Wine :][ Vase )', :abbrev_form => 'D / ( W :][ V )', :alpha => "DOWIV");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '2', :iform => '( 159.0 :[] 159.0.b ) * 108.1', :word_form => '( Jug :[] wine ) * grain', :abbrev_form => '( J :[] W ) * G', :alpha => "JEWAG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '7', :iform => '( 159.0 :[] 159.0.b ) * ( 66.0:->108.0 )', :word_form => '( Jug :[] wine ) * ( plant:->grain )', :abbrev_form => '( J :[] W ) * ( P:->G )', :alpha => "JEWAPYG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '3', :iform => '( 159.0.a :[] 159.0.b ) * 108.1', :word_form => '( Vase :[] wine ) * grain', :abbrev_form => '( V :[] W ) * G', :alpha => "VEWAG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '8', :iform => '( 159.0.a :[] 159.0.b ) * ( 66.0:->108.0 )', :word_form => '( Vase :[] wine ) * ( plant:->grain )', :abbrev_form => '( V :[] W ) * ( P:->G )', :alpha => "VEWAPYG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '4', :iform => '( 159.0.b :][ 159.0 ) * 108.1', :word_form => '( Wine :][ Jug ) * grain', :abbrev_form => '( W :][ J ) * G', :alpha => "WIJAG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '5', :iform => '( 159.0.b :][ 159.0.a ) * 108.1', :word_form => '( Wine :][ Vase ) * grain', :abbrev_form => '( W :][ V ) * G', :alpha => "WIVAG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '9', :iform => '( 159.0.b :][ 159.0 ) * ( 66.0:->108.0 )', :word_form => '( Wine :][ Jug ) * ( plant:->grain )', :abbrev_form => '( W :][ J ) * ( P:->G )', :alpha => "WIJAPYG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '10', :iform => '( 159.0.b :][ 159.0.a ) * ( 66.0:->108.0 )', :word_form => '( Wine :][ Vase ) * ( plant:->grain )', :abbrev_form => '( W :][ V ) * ( P:->G )', :alpha => "WIVAPYG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '1', :iform => '159.1 * 108.1', :word_form => 'jug-of-wine * grain', :abbrev_form => 'JOW * G', :alpha => "JOWAG");
Formula.create( :base => '159', :offset => '013', :subindex => '0', :ord => '6', :iform => '159.1 * ( 66.0:->108.0 )', :word_form => 'Jug-of-wine * ( plant:->grain )', :abbrev_form => 'JOW * ( P:->G )', :alpha => "JOWAPYG");
Formula.create( :base => '160', :offset => '000', :subindex => '0', :ord => '1', :iform => '160.0', :word_form => 'abstract( "wheat" )', :abbrev_form => 'A( W )', :alpha => "AW");
Formula.create( :base => '160', :offset => '000', :subindex => 'a', :ord => '1', :iform => '160.0.a', :word_form => 'abstract( "come" )', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '160', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 10.1^2 ) *]|[* 77.1', :word_form => '( person^2 ) *]|[* ( tree:->wood )', :abbrev_form => '( P^2 ) *]|[* ( T:->W )', :alpha => "PUTILATYW");
Formula.create( :base => '160', :offset => '001', :subindex => '0', :ord => '9', :iform => '10.7 *]|[* 77.1', :word_form => 'follow *]|[* ( tree:->wood )', :abbrev_form => 'F *]|[* ( T:->W )', :alpha => "FILATYW");
Formula.create( :base => '160', :offset => '001', :subindex => '0', :ord => '5', :iform => '160.0->160.0.a', :word_form => 'wheat->come', :abbrev_form => 'W->C', :alpha => "WYC");
Formula.create( :base => '160', :offset => '001', :subindex => '0', :ord => '1', :iform => '160.1', :word_form => '{ "ears of wheat hanging from wheat plant" }', :abbrev_form => 'W', :alpha => "W");
Formula.create( :base => '160', :offset => '001', :subindex => '0', :ord => '3', :iform => '66.0:->160.0', :word_form => 'plant:->wheat', :abbrev_form => 'P:->W', :alpha => "PYW");
Formula.create( :base => '160', :offset => '001', :subindex => 's', :ord => '1', :iform => '( 1.1.c^2 ) *]|[* 77.31', :word_form => '( dot^2 ) *]|[* ( not-yet )', :abbrev_form => '( D^2 ) *]|[* ( NY )', :alpha => "DUTILANY");
Formula.create( :base => '160', :offset => '001', :subindex => 's', :ord => '2', :iform => '29.1 *]|[* 77.31', :word_form => 'divide *]|[* ( not-yet )', :abbrev_form => 'D *]|[* ( NY )', :alpha => "DILANY");
Formula.create( :base => '160', :offset => '002', :subindex => '0', :ord => '1', :iform => '66.2.a / 160.1', :word_form => 'Grass-at-top / wheat', :abbrev_form => 'GAT / W', :alpha => "GATOW");
Formula.create( :base => '160', :offset => '002', :subindex => '0', :ord => '3', :iform => '66.2.a / ( 66.0:->160.0)', :word_form => 'Grass-at-top / ( plant:->wheat )', :abbrev_form => 'GAT / ( P:->W )', :alpha => "GATOPYW");
Formula.create( :base => '160', :offset => '002', :subindex => '0', :ord => '5', :iform => '66.2.a / ( 160.0->160.0.a )', :word_form => 'Grass-at-top / ( wheat->come )', :abbrev_form => 'GAT / ( W->C )', :alpha => "GATOWYC");
Formula.create( :base => '160', :offset => '002', :subindex => '0', :ord => '7', :iform => '66.2.a / ( 10.1^2 ) *]|[* 77.1 )', :word_form => 'Grass-at-top / (( person^2 ) *]|[* ( tree:->wood ))', :abbrev_form => 'GAT / (( P^2 ) *]|[* ( T:->W ))', :alpha => "GATOPUTILATYW");
Formula.create( :base => '160', :offset => '002', :subindex => '0', :ord => '9', :iform => '66.2.a / ( 10.7 *]|[* 77.1 )', :word_form => 'Grass-at-top / ( follow *]|[* ( tree:->wood ))', :abbrev_form => 'GAT / ( F *]|[* ( T:->W ))', :alpha => "GATOFILATYW");
Formula.create( :base => '160', :offset => '002', :subindex => 's', :ord => '1', :iform => '66.2.a / ( 1.1.c^2 ) *]|[* 77.31 )', :word_form => 'Grass-at-top / (( dot^2 ) *]|[* ( not-yet ))', :abbrev_form => 'GAT / (( D^2 ) *]|[* ( NY ))', :alpha => "GATODUTILANY");
Formula.create( :base => '160', :offset => '002', :subindex => 's', :ord => '3', :iform => '66.2.a / ( 29.1 *]|[* 77.31 )', :word_form => 'Grass-at-top / ( divide *]|[* ( not-yet ))', :abbrev_form => 'GAT / ( D *]|[* ( NY ))', :alpha => "GATODILANY");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 10.1.a::41.1.a ) * 160.1', :word_form => '( person::step ) * wheat', :abbrev_form => '( P::S ) * W', :alpha => "PASAW");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '7', :iform => '( 10.1.a::41.1.a ) * ( 66.0:->160.0)', :word_form => '( person::step ) * ( plant:->wheat )', :abbrev_form => '( P::S ) * ( P:->W )', :alpha => "PASAPYW");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '11', :iform => '( 10.1.a::41.1.a ) * ( 160.0->160.0.a )', :word_form => '( person::step ) * ( wheat->come )', :abbrev_form => '( P::S ) * ( W->C )', :alpha => "PASAWYC");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '15', :iform => '( 10.1.a::41.1.a ) * ( 10.1^2 ) *]|[* 77.1 )', :word_form => '( person::step ) * (( person^2 ) *]|[* ( tree:->wood ))', :abbrev_form => '( P::S ) * (( P^2 ) *]|[* ( T:->W ))', :alpha => "PASAPUTILATYW");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '19', :iform => '( 10.1.a::41.1.a ) * ( 10.7 *]|[* 77.1 )', :word_form => '( person::step ) * ( follow *]|[* ( tree:->wood ))', :abbrev_form => '( P::S ) * ( F *]|[* ( T:->W ))', :alpha => "PASAFILATYW");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '1', :iform => '41.1 * 160.1', :word_form => 'Person-and-step * wheat', :abbrev_form => 'PAS * W', :alpha => "PASAW");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '5', :iform => '41.1 * ( 66.0:->160.0)', :word_form => 'Person-and-step * ( plant:->wheat )', :abbrev_form => 'PAS * ( P:->W )', :alpha => "PASAPYW");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '9', :iform => '41.1 * ( 160.0->160.0.a )', :word_form => 'Person-and-step * ( wheat->come )', :abbrev_form => 'PAS * ( W->C )', :alpha => "PASAWYC");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '13', :iform => '41.1 * ( 10.1^2 ) *]|[* 77.1 )', :word_form => 'Person-and-step * (( person^2 ) *]|[* ( tree:->wood ))', :abbrev_form => 'PAS * (( P^2 ) *]|[* ( T:->W ))', :alpha => "PASAPUTILATYW");
Formula.create( :base => '160', :offset => '003', :subindex => '0', :ord => '17', :iform => '41.1 * ( 10.7 *]|[* 77.1 )', :word_form => 'Person-and-step * ( follow *]|[* ( tree:->wood ))', :abbrev_form => 'PAS * ( F *]|[* ( T:->W ))', :alpha => "PASAFILATYW");
Formula.create( :base => '160', :offset => '003', :subindex => 's', :ord => '3', :iform => '( 10.1.a::41.1.a ) * ( 1.1.c^2 ) *]|[* 77.31 )', :word_form => '( person::step ) * (( dot^2 ) *]|[* ( not-yet ))', :abbrev_form => '( P::S ) * (( D^2 ) *]|[* ( NY ))', :alpha => "PASADUTILANY");
Formula.create( :base => '160', :offset => '003', :subindex => 's', :ord => '7', :iform => '( 10.1.a::41.1.a ) * ( 29.1 *]|[* 77.31 )', :word_form => '( person::step ) * ( divide *]|[* ( not-yet ))', :abbrev_form => '( P::S ) * ( D *]|[* ( NY ))', :alpha => "PASADILANY");
Formula.create( :base => '160', :offset => '003', :subindex => 's', :ord => '1', :iform => '41.1 * ( 1.1.c^2 ) *]|[* 77.31 )', :word_form => 'Person-and-step * (( dot^2 ) *]|[* ( not-yet ))', :abbrev_form => 'PAS * (( D^2 ) *]|[* ( NY ))', :alpha => "PASADUTILANY");
Formula.create( :base => '160', :offset => '003', :subindex => 's', :ord => '5', :iform => '41.1 * ( 29.1 *]|[* 77.31 )', :word_form => 'Person-and-step * ( divide *]|[* ( not-yet ))', :abbrev_form => 'PAS * ( D *]|[* ( NY ))', :alpha => "PASADILANY");
Formula.create( :base => '160', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Rot( 114.1.0 ) * 160.1', :word_form => 'rot( eye ) * wheat', :abbrev_form => 'R( E ) * W', :alpha => "RO-E-AW");
Formula.create( :base => '160', :offset => '004', :subindex => '0', :ord => '2', :iform => 'Rot( 114.1.0 ) * ( 66.0:->160.0)', :word_form => 'rot( eye ) * ( plant:->wheat )', :abbrev_form => 'R( E ) * ( P:->W )', :alpha => "RO-E-APYW");
Formula.create( :base => '160', :offset => '004', :subindex => '0', :ord => '3', :iform => 'Rot( 114.1.0 ) * ( 160.0->160.0.a )', :word_form => 'rot( eye ) * ( wheat->come )', :abbrev_form => 'R( E ) * ( W->C )', :alpha => "RO-E-AWYC");
Formula.create( :base => '160', :offset => '004', :subindex => '0', :ord => '4', :iform => 'Rot( 114.1.0 ) * ( 10.1^2 ) *]|[* 77.1 )', :word_form => 'rot( eye ) * (( person^2 ) *]|[* ( tree:->wood ))', :abbrev_form => 'R( E ) * (( P^2 ) *]|[* ( T:->W ))', :alpha => "RO-E-APUTILATYW");
Formula.create( :base => '160', :offset => '004', :subindex => '0', :ord => '5', :iform => 'Rot( 114.1.0 ) * ( 10.7 *]|[* 77.1 )', :word_form => 'rot( eye ) * ( follow *]|[* ( tree:->wood ))', :abbrev_form => 'R( E ) * ( F *]|[* ( T:->W ))', :alpha => "RO-E-AFILATYW");
Formula.create( :base => '160', :offset => '004', :subindex => 's', :ord => '1', :iform => 'Rot( 114.1.0 ) * ( 1.1.c^2 ) *]|[* 77.31 )', :word_form => 'rot( eye ) * (( dot^2 ) *]|[* ( not-yet ))', :abbrev_form => 'R( E ) * (( D^2 ) *]|[* ( NY ))', :alpha => "RO-E-ADUTILANY");
Formula.create( :base => '160', :offset => '004', :subindex => 's', :ord => '2', :iform => 'Rot( 114.1.0 ) * ( 29.1 *]|[* 77.31 )', :word_form => 'rot( eye ) * ( divide *]|[* ( not-yet ))', :abbrev_form => 'R( E ) * ( D *]|[* ( NY ))', :alpha => "RO-E-ADILANY");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '7', :iform => '( 10.1^2 ) *]|[* 77.1 ) {}/ 10.105', :word_form => '(( person^2 ) *]|[* ( tree:->wood )) {}/ hobble', :abbrev_form => '(( P^2 ) *]|[* ( T:->W )) {}/ H', :alpha => "PUTILATYWEOH");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '8', :iform => '( 10.1^2 ) *]|[* 77.1 ) {}/ ( 10.1 + 7.1.a )', :word_form => '(( person^2 ) *]|[* ( tree:->wood )) {}/ ( person + right-drag )', :abbrev_form => '(( P^2 ) *]|[* ( T:->W )) {}/ ( P + RD )', :alpha => "PUTILATYWEOPIRD");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '9', :iform => '( 10.7 *]|[* 77.1 ) {}/ 10.105', :word_form => '( follow *]|[* ( tree:->wood )) {}/ hobble', :abbrev_form => '( F *]|[* ( T:->W )) {}/ H', :alpha => "FILATYWEOH");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '10', :iform => '( 10.7 *]|[* 77.1 ) {}/ ( 10.1 + 7.1.a )', :word_form => '( follow *]|[* ( tree:->wood )) {}/ ( person + right-drag )', :abbrev_form => '( F *]|[* ( T:->W )) {}/ ( P + RD )', :alpha => "FILATYWEOPIRD");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '5', :iform => '( 160.0->160.0.a ) {}/ 10.105', :word_form => '( wheat->come ) {}/ hobble', :abbrev_form => '( W->C ) {}/ H', :alpha => "WYCEOH");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '6', :iform => '( 160.0->160.0.a ) {}/ ( 10.1 + 7.1.a )', :word_form => '( wheat->come ) {}/ ( person + right-drag )', :abbrev_form => '( W->C ) {}/ ( P + RD )', :alpha => "WYCEOPIRD");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '3', :iform => '( 66.0:->160.0) {}/ 10.105', :word_form => '( plant:->wheat ) {}/ hobble', :abbrev_form => '( P:->W ) {}/ H', :alpha => "PYWEOH");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '4', :iform => '( 66.0:->160.0) {}/ ( 10.1 + 7.1.a )', :word_form => '( plant:->wheat ) {}/ ( person + right-drag )', :abbrev_form => '( P:->W ) {}/ ( P + RD )', :alpha => "PYWEOPIRD");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '11', :iform => '10.105 \}{ 160.1', :word_form => 'Hobble \}{ wheat', :abbrev_form => 'H \}{ W', :alpha => "HUIW");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '12', :iform => '10.105 \}{ ( 66.0:->160.0)', :word_form => 'Hobble \}{ ( plant:->wheat )', :abbrev_form => 'H \}{ ( P:->W )', :alpha => "HUIPYW");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '13', :iform => '10.105 \}{ ( 160.0->160.0.a )', :word_form => 'Hobble \}{ ( wheat->come )', :abbrev_form => 'H \}{ ( W->C )', :alpha => "HUIWYC");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '14', :iform => '10.105 \}{ ( 10.1^2 ) *]|[* 77.1 )', :word_form => 'Hobble \}{ (( person^2 ) *]|[* ( tree:->wood ))', :abbrev_form => 'H \}{ (( P^2 ) *]|[* ( T:->W ))', :alpha => "HUIPUTILATYW");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '15', :iform => '10.105 \}{ ( 10.7 *]|[* 77.1 )', :word_form => 'Hobble \}{ ( follow *]|[* ( tree:->wood ))', :abbrev_form => 'H \}{ ( F *]|[* ( T:->W ))', :alpha => "HUIFILATYW");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '1', :iform => '160.1 {}/ 10.105', :word_form => 'wheat {}/ hobble', :abbrev_form => 'W {}/ H', :alpha => "WEOH");
Formula.create( :base => '160', :offset => '005', :subindex => '0', :ord => '2', :iform => '160.1 {}/ ( 10.1 + 7.1.a )', :word_form => 'wheat {}/ ( person + right-drag )', :abbrev_form => 'W {}/ ( P + RD )', :alpha => "WEOPIRD");
Formula.create( :base => '160', :offset => '005', :subindex => 's', :ord => '1', :iform => '( 66.1.a / 70.1 ) {}/ 10.105', :word_form => '( Alt-sprout / earth ) {}/ hobble', :abbrev_form => '( AS / E ) {}/ H', :alpha => "ASO-E-EOH");
Formula.create( :base => '160', :offset => '005', :subindex => 's', :ord => '2', :iform => '( 66.1.a / 70.1 ) {}/ ( 10.1 + 7.1.a )', :word_form => '( Alt-sprout / earth ) {}/ ( person + right-drag )', :abbrev_form => '( AS / E ) {}/ ( P + RD )', :alpha => "ASO-E-EOPIRD");
Formula.create( :base => '160', :offset => '005', :subindex => 's', :ord => '3', :iform => '10.105 \}{ ( 66.1.a / 70.1 )', :word_form => 'Hobble \}{ ( Alt-sprout / earth )', :abbrev_form => 'H \}{ ( AS / E )', :alpha => "HUI-ASO-E");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '4', :iform => '( 10.1^2 ) *]|[* 77.1 ) / 69.6', :word_form => '(( person^2 ) *]|[* ( tree:->wood )) / granary', :abbrev_form => '(( P^2 ) *]|[* ( T:->W )) / G', :alpha => "PUTILATYWOG");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '9', :iform => '( 10.1^2 ) *]|[* 77.1 ) / ( 32.1 / 69.2 )', :word_form => '(( person^2 ) *]|[* ( tree:->wood )) / (( roots:->go-in ) / ( square [] ( square [] nothing )))', :abbrev_form => '(( P^2 ) *]|[* ( T:->W )) / (( R:->GI ) / ( S [] ( S [] N )))', :alpha => "PUTILATYWORYGI-OSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '11', :iform => '( 10.1^2 ) *]|[* 70.1 ) / 69.2', :word_form => '(( person^2 ) *]|[* earth ) / (( square [] ( square [] nothing )))', :abbrev_form => '(( P^2 ) *]|[* E ) / (( S [] ( S [] N )))', :alpha => "PUTILA-EOSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '5', :iform => '( 10.7 *]|[* 77.1 ) / 69.6', :word_form => '( follow *]|[* ( tree:->wood )) / granary', :abbrev_form => '( F *]|[* ( T:->W )) / G', :alpha => "FILATYWOG");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '10', :iform => '( 10.7 *]|[* 77.1 ) / ( 32.1 / 69.2 )', :word_form => '( follow *]|[* ( tree:->wood )) / (( roots:->go-in ) / ( square [] ( square [] nothing )))', :abbrev_form => '( F *]|[* ( T:->W )) / (( R:->GI ) / ( S [] ( S [] N )))', :alpha => "FILATYWORYGI-OSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '12', :iform => '( 10.7 *]|[* 70.1 ) / 69.2', :word_form => '( follow *]|[* earth) / (( square [] ( square [] nothing )))', :abbrev_form => '( F *]|[* E ) / (( S [] ( S [] N )))', :alpha => "FILA-EOSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '3', :iform => '( 160.0->160.0.a ) / 69.6', :word_form => '( wheat->come ) / granary', :abbrev_form => '( W->C ) / G', :alpha => "WYCOG");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '8', :iform => '( 160.0->160.0.a ) / ( 32.1 / 69.2 )', :word_form => '( wheat->come ) / (( roots:->go-in ) / ( square [] ( square [] nothing )))', :abbrev_form => '( W->C ) / (( R:->GI ) / ( S [] ( S [] N )))', :alpha => "WYCORYGI-OSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '2', :iform => '( 66.0:->160.0) / 69.6', :word_form => '( plant:->wheat ) / granary', :abbrev_form => '( P:->W ) / G', :alpha => "PYWOG");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '7', :iform => '( 66.0:->160.0) / ( 32.1 / 69.2 )', :word_form => '( plant:->wheat ) / (( roots:->go-in ) / ( square [] ( square [] nothing )))', :abbrev_form => '( P:->W ) / (( R:->GI ) / ( S [] ( S [] N )))', :alpha => "PYWORYGI-OSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '1', :iform => '160.1 / 69.6', :word_form => 'wheat / granary', :abbrev_form => 'W / G', :alpha => "WOG");
Formula.create( :base => '160', :offset => '006', :subindex => '0', :ord => '6', :iform => '160.1 / ( 32.1 / 69.2 )', :word_form => 'wheat / (( roots:->go-in ) / ( square [] ( square [] nothing )))', :abbrev_form => 'W / (( R:->GI ) / ( S [] ( S [] N )))', :alpha => "WORYGI-OSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => 's', :ord => '1', :iform => '( 1.1.c^2  *]|[* 70.1 ) / 69.2', :word_form => '(( dot^2 ) *]|[* earth ) / (( square [] ( square [] nothing )))', :abbrev_form => '(( D^2 ) *]|[* E ) / (( S [] ( S [] N )))', :alpha => "DUTILA-EOSESEN");
Formula.create( :base => '160', :offset => '006', :subindex => 's', :ord => '2', :iform => '( 29.1 *]|[* 70.1 ) / 69.2', :word_form => '( divide *]|[* earth) / (( square [] ( square [] nothing )))', :abbrev_form => '( D *]|[* E ) / (( S [] ( S [] N )))', :alpha => "DILA-EOSESEN");
Formula.create( :base => '161', :offset => '000', :subindex => '0', :ord => '1', :iform => '161.0', :word_form => 'abstract( "rain" )', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '161', :offset => '000', :subindex => 'a', :ord => '1', :iform => '161.0.a', :word_form => 'abstract( "drop" )', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '161', :offset => '000', :subindex => 'b', :ord => '1', :iform => '( 161.0.a ):^2', :word_form => 'Drop:^n', :abbrev_form => 'D:^n', :alpha => "DUN");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 161.0 ).( 161.0.a ) :][ ( 81.0.a )', :word_form => 'rain.drops :][ cloud', :abbrev_form => 'R.D :][ C', :alpha => "REDIC");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 161.0 ).( 161.0.a ) :][ ( 81.0.a )', :word_form => 'rain.drops :][ cloud', :abbrev_form => 'R.D :][ C', :alpha => "DORIC");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '6', :iform => '( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )', :word_form => 'rain.drops::fall:-[]>:cloud', :abbrev_form => 'R.D::F:-[]>:C', :alpha => "REDAFITIC");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )', :word_form => 'rain.drops::fall:-[]>:cloud', :abbrev_form => 'R.D::F:-[]>:C', :alpha => "DORAFITIC");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 81.0.a ) :[] ( 161.0 ).( 161.0.a )', :word_form => 'Cloud :[] rain.drops', :abbrev_form => 'C :[] R.D', :alpha => "CERED");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 81.0.a ) :[] ( 161.0 ).( 161.0.a )', :word_form => 'Cloud :[] rain.drops', :abbrev_form => 'C :[] R.D', :alpha => "CEDOR");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '8', :iform => '1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))', :word_form => 'Bar / ( cover /+ ( stack( dot )^2 {} post ))', :abbrev_form => 'B / ( C /+ ( S( D )^2 {} P ))', :alpha => "BOCOISODUTEP");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '9', :iform => '1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))', :word_form => 'Bar / ( cover /+ ( stack( drop )^2 {} post ))', :abbrev_form => 'B / ( C /+ ( S( D )^2 {} P ))', :alpha => "BOCOISODUTEP");
Formula.create( :base => '161', :offset => '001', :subindex => '0', :ord => '1', :iform => '161.1', :word_form => '( "raindrops falling through cloud" }', :abbrev_form => 'R', :alpha => "R");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '8', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / 134.1', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post ))) / beard', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / B', :alpha => "BOCOISODUTEPOB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '9', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / 134.1', :word_form => '( Bar / ( cover /+ ( stack( drop )^2 {} post  ))) / beard', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / B', :alpha => "BOCOISODUTEPOB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '17', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post ))) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / ( B / D / ( C {}/ P^2 ))', :alpha => "BOCOISODUTEPOBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '18', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( Bar / ( cover /+ ( stack( drop )^2 {} post  ))) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / ( B / D / ( C {}/ P^2 ))', :alpha => "BOCOISODUTEPOBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '2', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / 134.1', :word_form => '( rain.drops :][ cloud ) / beard', :abbrev_form => '( R.D :][ C ) / B', :alpha => "REDICOB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '3', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / 134.1', :word_form => '( rain.drops :][ cloud ) / beard', :abbrev_form => '( R.D :][ C ) / B', :alpha => "DORICOB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '6', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / 134.1', :word_form => '( rain.drops::fall:-[]>:cloud ) / beard', :abbrev_form => '( R.D::F:-[]>:C ) / B', :alpha => "REDAFITICOB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '7', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / 134.1', :word_form => '( rain.drops::fall:-[]>:cloud ) / beard', :abbrev_form => '( R.D::F:-[]>:C ) / B', :alpha => "DORAFITICOB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '11', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( rain.drops :][ cloud ) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( R.D :][ C ) / ( B / D / ( C {}/ P^2 ))', :alpha => "REDICOBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '12', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( rain.drops :][ cloud ) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( R.D :][ C ) / ( B / D / ( C {}/ P^2 ))', :alpha => "DORICOBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '15', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( B / D / ( C {}/ P^2 ))', :alpha => "REDAFITICOBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '16', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( B / D / ( C {}/ P^2 ))', :alpha => "DORAFITICOBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '4', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / 134.1', :word_form => '( Cloud :[] rain.drops ) / beard', :abbrev_form => '( C :[] R.D ) / B', :alpha => "CEREDOB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '5', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / 134.1', :word_form => '( Cloud :[] rain.drops ) / beard', :abbrev_form => '( C :[] R.D ) / B', :alpha => "CEDOROB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '13', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( Cloud :[] rain.drops ) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( C :[] R.D ) / ( B / D / ( C {}/ P^2 ))', :alpha => "CEREDOBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '14', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => '( Cloud :[] rain.drops ) / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => '( C :[] R.D ) / ( B / D / ( C {}/ P^2 ))', :alpha => "CEDOROBODOCEOPUT");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '1', :iform => '161.1 / 134.1', :word_form => 'rain / beard', :abbrev_form => 'R / B', :alpha => "ROB");
Formula.create( :base => '161', :offset => '002', :subindex => '0', :ord => '10', :iform => '161.1 / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 ))', :word_form => 'rain / ( Bar / dot / ( cover {}/ post^2 ))', :abbrev_form => 'R / ( B / D / ( C {}/ P^2 ))', :alpha => "ROBODOCEOPUT");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '8', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 )))', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post ))) / Row( 161.0.a->68.0 )', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / R( D->M )', :alpha => "BOCOISODUTEPORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '9', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 )))', :word_form => '( Bar / ( cover /+ ( stack( drop )^2 {} post  ))) / Row( 161.0.a->68.0 )', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / R( D->M )', :alpha => "BOCOISODUTEPORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '2', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / Row( 161.0.a->68.0 )', :word_form => '( rain.drops :][ cloud ) / Row( drop->mouth )', :abbrev_form => '( R.D :][ C ) / R( D->M )', :alpha => "REDICORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '3', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / Row( 161.0.a->68.0 )', :word_form => '( rain.drops :][ cloud ) / Row( drop->mouth )', :abbrev_form => '( R.D :][ C ) / R( D->M )', :alpha => "DORICORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '6', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / Row( 161.0.a->68.0 )', :word_form => '( rain.drops::fall:-[]>:cloud ) / Row( drop->mouth )', :abbrev_form => '( R.D::F:-[]>:C ) / R( D->M )', :alpha => "REDAFITICORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '7', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / Row( 161.0.a->68.0 )', :word_form => '( rain.drops::fall:-[]>:cloud ) / Row( drop->mouth )', :abbrev_form => '( R.D::F:-[]>:C ) / R( D->M )', :alpha => "DORAFITICORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '4', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / Row( 161.0.a->68.0 )', :word_form => '( Cloud :[] rain.drops ) / Row( drop->mouth )', :abbrev_form => '( C :[] R.D ) / R( D->M )', :alpha => "CEREDORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '5', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / Row( 161.0.a->68.0 )', :word_form => '( Cloud :[] rain.drops ) / Row( drop->mouth )', :abbrev_form => '( C :[] R.D ) / R( D->M )', :alpha => "CEDORORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '1', :iform => '161.1 / Row( 161.0.a->68.0 )', :word_form => 'rain / Row( drop->mouth )', :abbrev_form => 'R / R( D->M )', :alpha => "RORODYM");
Formula.create( :base => '161', :offset => '007', :subindex => '0', :ord => '1', :iform => 'Row( 161.0.a->68.0 )', :word_form => 'Row( drop->mouth )', :abbrev_form => 'R( D->M )', :alpha => "RODYM");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '8', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / 74.2', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post ))) / leather', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / L', :alpha => "BOCOISODUTEPOL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '9', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / 74.2', :word_form => '( Bar / ( cover /+ ( stack( drop )^2 {} post  ))) / leather', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / L', :alpha => "BOCOISODUTEPOL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '17', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / ( 74.1.a + dis(15.65))', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post ))) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / ( S.H + D( HAS ))', :alpha => "BOCOISODUTEPOHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '18', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / ( 74.1.a + dis(15.65))', :word_form => '( Bar / ( cover /+ ( stack( drop )^2 {} post  ))) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / ( S.H + D( HAS ))', :alpha => "BOCOISODUTEPOHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '2', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / 74.2', :word_form => '( rain.drops :][ cloud ) / leather', :abbrev_form => '( R.D :][ C ) / L', :alpha => "REDICOL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '3', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / 74.2', :word_form => '( rain.drops :][ cloud ) / leather', :abbrev_form => '( R.D :][ C ) / L', :alpha => "DORICOL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '6', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / 74.2', :word_form => '( rain.drops::fall:-[]>:cloud ) / leather', :abbrev_form => '( R.D::F:-[]>:C ) / L', :alpha => "REDAFITICOL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '7', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / 74.2', :word_form => '( rain.drops::fall:-[]>:cloud ) / leather', :abbrev_form => '( R.D::F:-[]>:C ) / L', :alpha => "DORAFITICOL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '11', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 74.1.a + dis(15.65))', :word_form => '( rain.drops :][ cloud ) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( R.D :][ C ) / ( S.H + D( HAS ))', :alpha => "REDICOHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '12', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 74.1.a + dis(15.65))', :word_form => '( rain.drops :][ cloud ) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( R.D :][ C ) / ( S.H + D( HAS ))', :alpha => "DORICOHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '15', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 74.1.a + dis(15.65))', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( S.H + D( HAS ))', :alpha => "REDAFITICOHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '16', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 74.1.a + dis(15.65))', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( S.H + D( HAS ))', :alpha => "DORAFITICOHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '4', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / 74.2', :word_form => '( Cloud :[] rain.drops ) / leather', :abbrev_form => '( C :[] R.D ) / L', :alpha => "CEREDOL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '5', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / 74.2', :word_form => '( Cloud :[] rain.drops ) / leather', :abbrev_form => '( C :[] R.D ) / L', :alpha => "CEDOROL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '13', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 74.1.a + dis(15.65))', :word_form => '( Cloud :[] rain.drops ) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( C :[] R.D ) / ( S.H + D( HAS ))', :alpha => "CEREDOHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '14', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 74.1.a + dis(15.65))', :word_form => '( Cloud :[] rain.drops ) / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => '( C :[] R.D ) / ( S.H + D( HAS ))', :alpha => "CEDOROHOSIDOHAS");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '1', :iform => '161.1 / 74.2', :word_form => 'rain / leather', :abbrev_form => 'R / L', :alpha => "ROL");
Formula.create( :base => '161', :offset => '009', :subindex => '0', :ord => '10', :iform => '161.1 / ( 74.1.a + dis(15.65))', :word_form => 'rain / ( sheep_horns + dis( hands-at-side ))', :abbrev_form => 'R / ( S.H + D( HAS ))', :alpha => "ROHOSIDOHAS");
Formula.create( :base => '162', :offset => '001', :subindex => '0', :ord => '1', :iform => '162.1', :word_form => '{ "bird with short tail" }', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '162', :offset => '001', :subindex => '0', :ord => '2', :iform => '(178.0 ):<.(( 178.0.b ):( 178.0.c ))', :word_form => 'Bird:<.( tail:short )', :abbrev_form => '( B:<.( T:S ))', :alpha => "BITIS");
Formula.create( :base => '162', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 77.0->77.0.a ) * 162.1', :word_form => '( tree->wood ) * ( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) * ( B:<.( T:S ))', :alpha => "TYWABITIS");
Formula.create( :base => '162', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 77.0->77.0.a ) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( tree->wood ) * ( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) * ( B:<.( T:S ))', :alpha => "TYWABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * 162.1', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * ( B:<.( T:S ))', :alpha => "GO-ABODUTILA-E-ABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '4', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * ( B:<.( T:S ))', :alpha => "GO-ABODUTILA-E-ABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '5', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * 162.1', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * ( B:<.( T:S ))', :alpha => "GO-ABODUTILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '6', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * ( B:<.( T:S ))', :alpha => "GO-ABODUTILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '7', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * 162.1', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * ( B:<.( T:S ))', :alpha => "GOCODUTILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '8', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * ( B:<.( T:S ))', :alpha => "GOCODUTILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '9', :iform => '( 44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )) * 162.1', :word_form => '( Gather / angle-bar / ( divide *]|[* earth )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D *]|[* E )) * ( B:<.( T:S ))', :alpha => "GO-ABODILA-EABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '10', :iform => '( 44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Gather / angle-bar / ( divide *]|[* earth )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D *]|[* E )) * ( B:<.( T:S ))', :alpha => "GO-ABODILA-EABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '11', :iform => '( 44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )) * 162.1', :word_form => '( Gather / angle-bar / ( divide *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D *]|[* G )) * ( B:<.( T:S ))', :alpha => "GO-ABODILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '12', :iform => '( 44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Gather / angle-bar / ( divide *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / AB / ( D *]|[* G )) * ( B:<.( T:S ))', :alpha => "GO-ABODILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '13', :iform => '( 44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )) * 162.1', :word_form => '( Gather / contact / ( divide *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / C / ( D *]|[* G )) * ( B:<.( T:S ))', :alpha => "GOCODILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '14', :iform => '( 44.1 / 1.1.i / ( 129.1 *]|[* 70.1 )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Gather / contact / ( divide *]|[* ground )) * ( Bird:<.( tail:short ))', :abbrev_form => '( G / C / ( D *]|[* G )) * ( B:<.( T:S ))', :alpha => "GOCODILAGABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '1', :iform => '44.3 * 162.1', :word_form => 'gold * ( Bird:<.( tail:short ))', :abbrev_form => 'G * ( B:<.( T:S ))', :alpha => "GABITIS");
Formula.create( :base => '162', :offset => '003', :subindex => '0', :ord => '2', :iform => '44.3 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'gold * ( Bird:<.( tail:short ))', :abbrev_form => 'G * ( B:<.( T:S ))', :alpha => "GABITIS");
Formula.create( :base => '162', :offset => '004', :subindex => '0', :ord => '1', :iform => '67.1 / 162.1', :word_form => 'Mountain / ( Bird:<.( tail:short ))', :abbrev_form => 'M /  ( B:<.( T:S ))', :alpha => "MO-ABITIS");
Formula.create( :base => '162', :offset => '004', :subindex => '0', :ord => '2', :iform => '67.1 / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Mountain / ( Bird:<.( tail:short ))', :abbrev_form => 'M /  ( B:<.( T:S ))', :alpha => "MO-ABITIS");
Formula.create( :base => '162', :offset => '010', :subindex => '0', :ord => '1', :iform => '70.1 * 162.1', :word_form => 'earth * ( Bird:<.( tail:short ))', :abbrev_form => 'E * ( B:<.( T:S ))', :alpha => "E-ABITIS");
Formula.create( :base => '162', :offset => '010', :subindex => '0', :ord => '2', :iform => '70.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'earth * ( Bird:<.( tail:short ))', :abbrev_form => 'E * ( B:<.( T:S ))', :alpha => "E-ABITIS");
Formula.create( :base => '162', :offset => '010', :subindex => '0', :ord => '3', :iform => '70.1 * 162.1', :word_form => 'ground * ( Bird:<.( tail:short ))', :abbrev_form => 'G * ( B:<.( T:S ))', :alpha => "GABITIS");
Formula.create( :base => '162', :offset => '010', :subindex => '0', :ord => '4', :iform => '70.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'ground * ( Bird:<.( tail:short ))', :abbrev_form => 'G * ( B:<.( T:S ))', :alpha => "GABITIS");
Formula.create( :base => '162', :offset => '011', :subindex => '0', :ord => '1', :iform => '68.78 * 162.1', :word_form => 'Speak-a-word * ( Bird:<.( tail:short ))', :abbrev_form => 'SAW * ( B:<.( T:S ))', :alpha => "SAWABITIS");
Formula.create( :base => '162', :offset => '011', :subindex => '0', :ord => '2', :iform => '68.78 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Speak-a-word * ( Bird:<.( tail:short ))', :abbrev_form => 'SAW * ( B:<.( T:S ))', :alpha => "SAWABITIS");
Formula.create( :base => '162', :offset => '012', :subindex => '0', :ord => '1', :iform => '89.1.a * 162.1', :word_form => 'Side-hand * ( Bird:<.( tail:short ))', :abbrev_form => 'SH * ( B:<.( T:S ))', :alpha => "SHABITIS");
Formula.create( :base => '162', :offset => '012', :subindex => '0', :ord => '2', :iform => '89.1.a * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Side-hand * ( Bird:<.( tail:short ))', :abbrev_form => 'SH * ( B:<.( T:S ))', :alpha => "SHABITIS");
Formula.create( :base => '162', :offset => '013', :subindex => '0', :ord => '1', :iform => '( 153.0.a:->153.0.b ) * 162.1', :word_form => '( thread:->silk ) * ( Bird:<.( tail:short ))', :abbrev_form => '( T:->S ) * ( B:<.( T:S ))', :alpha => "TYSABITIS");
Formula.create( :base => '162', :offset => '013', :subindex => '0', :ord => '2', :iform => '( 153.0.a:->153.0.b ) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( thread:->silk ) * ( Bird:<.( tail:short ))', :abbrev_form => '( T:->S ) * ( B:<.( T:S ))', :alpha => "TYSABITIS");
Formula.create( :base => '162', :offset => '020', :subindex => '0', :ord => '1', :iform => '68.1 * 162.1', :word_form => 'mouth * ( Bird:<.( tail:short ))', :abbrev_form => 'M * ( B:<.( T:S ))', :alpha => "MABITIS");
Formula.create( :base => '162', :offset => '020', :subindex => '0', :ord => '2', :iform => '68.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'mouth * ( Bird:<.( tail:short ))', :abbrev_form => 'M * ( B:<.( T:S ))', :alpha => "MABITIS");
Formula.create( :base => '162', :offset => '020', :subindex => '0', :ord => '3', :iform => '68.1 * 162.1', :word_form => 'mouth * ( Bird:<.( tail:short ))', :abbrev_form => 'M * ( B:<.( T:S ))', :alpha => "MABITIS");
Formula.create( :base => '162', :offset => '020', :subindex => '0', :ord => '4', :iform => '68.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'mouth * ( Bird:<.( tail:short ))', :abbrev_form => 'M * ( B:<.( T:S ))', :alpha => "MABITIS");
Formula.create( :base => '162', :offset => '021', :subindex => '0', :ord => '1', :iform => '83.1 * 162.1', :word_form => 'Side-heart-is-open * ( Bird:<.( tail:short ))', :abbrev_form => 'SHIO * ( B:<.( T:S ))', :alpha => "SHIO-A'BITIS");
Formula.create( :base => '162', :offset => '021', :subindex => '0', :ord => '2', :iform => '83.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Side-heart-is-open * ( Bird:<.( tail:short ))', :abbrev_form => 'SHIO * ( B:<.( T:S ))', :alpha => "SHIO-A'BITIS");
Formula.create( :base => '162', :offset => '023', :subindex => '0', :ord => '1', :iform => '53.1 * 162.1', :word_form => 'cloth * ( Bird:<.( tail:short ))', :abbrev_form => 'C * ( B:<.( T:S ))', :alpha => "CABITIS");
Formula.create( :base => '162', :offset => '023', :subindex => '0', :ord => '2', :iform => '53.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'cloth * ( Bird:<.( tail:short ))', :abbrev_form => 'C * ( B:<.( T:S ))', :alpha => "CABITIS");
Formula.create( :base => '162', :offset => '023', :subindex => '0', :ord => '3', :iform => '53.1 * 162.1', :word_form => 'towel * ( Bird:<.( tail:short ))', :abbrev_form => 'T * ( B:<.( T:S ))', :alpha => "TABITIS");
Formula.create( :base => '162', :offset => '023', :subindex => '0', :ord => '4', :iform => '53.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'towel * ( Bird:<.( tail:short ))', :abbrev_form => 'T * ( B:<.( T:S ))', :alpha => "TABITIS");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '3', :iform => '( 77.0->77.0.a ) \ 162.1', :word_form => '( tree->wood ) \ ( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) \ ( B:<.( T:S ))', :alpha => "TYWU'BITIS");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '4', :iform => '( 77.0->77.0.a ) \ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( tree->wood ) \ ( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) \ ( B:<.( T:S ))', :alpha => "TYWU'BITIS");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '7', :iform => '( 77.0->77.0.a ) #\ Tri( 162.1 )', :word_form => '( tree->wood ) #\ tri( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) #\ T( B:<.( T:S ))', :alpha => "TYWOLUTOBITIS");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '8', :iform => '( 77.0->77.0.a ) #\ tri(( 178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( tree->wood ) #\ tri( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) #\ T( B:<.( T:S ))', :alpha => "TYWOLUTOBITIS");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '11', :iform => '( 77.0->77.0.a ) #\ pile( 162.1 )', :word_form => '( tree->wood ) #\ pile( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) #\ P( B:<.( T:S ))', :alpha => "TYWOLUPOBITIS");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '12', :iform => '( 77.0->77.0.a ) #\ pile(( 178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( tree->wood ) #\ pile( Bird:<.( tail:short ))', :abbrev_form => '( T->W ) #\ P( B:<.( T:S ))', :alpha => "TYWOLUPOBITIS");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '1', :iform => '162.1 / ( 77.0->77.0.a )', :word_form => '( Bird:<.( tail:short )) / ( tree->wood )', :abbrev_form => '( B:<.( T:S )) / ( T->W )', :alpha => "BITISOTYW");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '2', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / ( 77.0->77.0.a )', :word_form => '( Bird:<.( tail:short )) / ( tree->wood )', :abbrev_form => '( B:<.( T:S )) / ( T->W )', :alpha => "BITISOTYW");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '9', :iform => 'pile( 162.1 ) #/ ( 77.0->77.0.a )', :word_form => 'pile( Bird:<.( tail:short )) #/ ( tree->wood )', :abbrev_form => 'P( B:<.( T:S )) #/ ( T->W )', :alpha => "POBITISOLOTYW");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '10', :iform => 'pile(( 178.0 ):<.(( 178.0.b ):( 178.0.c ))) #/ ( 77.0->77.0.a )', :word_form => 'pile( Bird:<.( tail:short )) #/ ( tree->wood )', :abbrev_form => 'P( B:<.( T:S )) #/ ( T->W )', :alpha => "POBITISOLOTYW");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '5', :iform => 'Tri( 162.1 ) #/ ( 77.0->77.0.a )', :word_form => 'tri( Bird:<.( tail:short )) #/ ( tree->wood )', :abbrev_form => 'T( B:<.( T:S )) #/ ( T->W )', :alpha => "TOBITISOLOTYW");
Formula.create( :base => '162', :offset => '024', :subindex => '0', :ord => '6', :iform => 'Tri(( 178.0 ):<.(( 178.0.b ):( 178.0.c ))) #/ ( 77.0->77.0.a )', :word_form => 'tri( Bird:<.( tail:short )) #/ ( tree->wood )', :abbrev_form => 'T( B:<.( T:S )) #/ ( T->W )', :alpha => "TOBITISOLOTYW");
Formula.create( :base => '162', :offset => '026', :subindex => '0', :ord => '1', :iform => '162.1 / 82.1', :word_form => '( Bird:<.( tail:short )) / fire', :abbrev_form => '( B:<.( T:S )) / F', :alpha => "BITISOF");
Formula.create( :base => '162', :offset => '026', :subindex => '0', :ord => '3', :iform => '162.1 / At-bottom( 82.1 )', :word_form => '( Bird:<.( tail:short )) / At-bottom( fire )', :abbrev_form => '( B:<.( T:S )) / AB( F )', :alpha => "BITISOFAB");
Formula.create( :base => '162', :offset => '026', :subindex => '0', :ord => '5', :iform => '162.1 / Train( 1.1.c )', :word_form => '( Bird:<.( tail:short )) / Train( dot )', :abbrev_form => '( B:<.( T:S )) / T( D )', :alpha => "BITISOTOD");
Formula.create( :base => '162', :offset => '026', :subindex => '0', :ord => '2', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 82.1', :word_form => '( Bird:<.( tail:short )) / fire', :abbrev_form => '( B:<.( T:S )) / F', :alpha => "BITISOF");
Formula.create( :base => '162', :offset => '026', :subindex => '0', :ord => '4', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / At-bottom( 82.1 )', :word_form => '( Bird:<.( tail:short )) / At-bottom( fire )', :abbrev_form => '( B:<.( T:S )) / AB( F )', :alpha => "BITISOFAB");
Formula.create( :base => '162', :offset => '026', :subindex => '0', :ord => '6', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / Train( 1.1.c )', :word_form => '( Bird:<.( tail:short )) / Train( dot )', :abbrev_form => '( B:<.( T:S )) / T( D )', :alpha => "BITISOTOD");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '10', :iform => '(( Stack( 1.1.a ) + ( 3.1 * 4.1 )) [] 1.1.c ) ></ 41.3.a', :word_form => '(( stack( dash ) + ( fall-left * post )) [] dot ) ></ Stop-and-go', :abbrev_form => '(( S( D ) + (  FL * P  )) [] D ) ></ SAG', :alpha => "SODIFLAPEDEXOSAG");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '3', :iform => '162.1 ></ 41.3.a', :word_form => '( Bird:<.( tail:short )) ></ Stop-and-go', :abbrev_form => '( B:<.( T:S )) ></ SAG', :alpha => "BITISEXOSAG");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '4', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) ></ 41.3.a', :word_form => '( Bird:<.( tail:short )) ></ Stop-and-go', :abbrev_form => '( B:<.( T:S )) ></ SAG', :alpha => "BITISEXOSAG");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '1', :iform => '41.3.a *\ 162.1', :word_form => 'Stop-and-go *\ ( Bird:<.( tail:short ))', :abbrev_form => 'SAG *\ ( B:<.( T:S ))', :alpha => "SAGA-UBITIS");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '2', :iform => '41.3.a *\ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Stop-and-go *\ ( Bird:<.( tail:short ))', :abbrev_form => 'SAG *\ ( B:<.( T:S ))', :alpha => "SAGA-UBITIS");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '5', :iform => '41.3.a *\ 97.1', :word_form => 'Stop-and-go *\ well', :abbrev_form => 'SAG *\ W', :alpha => "SAGA-UW");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '6', :iform => '41.3.a *\ 97.1', :word_form => 'Stop-and-go *\ crucible', :abbrev_form => 'SAG *\ C', :alpha => "SAGA-UC");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '7', :iform => '41.3.a *\ (( Stack( 1.1.a ) + ( 3.1 * 4.1 )) [] 1.1.c )', :word_form => 'Stop-and-go *\ (( stack( dash ) + ( fall-left * post )) [] dot )', :abbrev_form => 'SAG *\ (( S( D ) + (  FL * P  )) [] D )', :alpha => "SAGA-USODIFLAPED");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '11', :iform => '41.3.a *\ 97.1', :word_form => 'Stop-and-go *\ well', :abbrev_form => 'SAG *\ W', :alpha => "SAGA-UW");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '12', :iform => '41.3.a *\ 97.1', :word_form => 'Stop-and-go *\ crucible', :abbrev_form => 'SAG *\ C', :alpha => "SAGA-UC");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '13', :iform => '41.3.a *\ (( Stack( 1.1.a ) + ( 3.1 * 4.1 )) [] 1.1.c )', :word_form => 'Stop-and-go *\ (( stack( dash ) + ( fall-left * post )) [] dot )', :abbrev_form => 'SAG *\ (( S( D ) + (  FL * P  )) [] D )', :alpha => "SAGA-USODIFLAPED");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '8', :iform => '97.1 ></ 41.3.a', :word_form => 'well ></ Stop-and-go', :abbrev_form => 'W ></ SAG', :alpha => "WEXOSAG");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '9', :iform => '97.1 ></ 41.3.a', :word_form => 'crucible ></ Stop-and-go', :abbrev_form => 'C ></ SAG', :alpha => "CEXOSAG");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '14', :iform => '97.1 ></ 41.3.a', :word_form => 'well ></ Stop-and-go', :abbrev_form => 'W ></ SAG', :alpha => "WEXOSAG");
Formula.create( :base => '162', :offset => '031', :subindex => '0', :ord => '15', :iform => '97.1 ></ 41.3.a', :word_form => 'crucible ></ Stop-and-go', :abbrev_form => 'C ></ SAG', :alpha => "CEXOSAG");
Formula.create( :base => '162', :offset => '032', :subindex => '0', :ord => '1', :iform => '78.17 {}/ 162.1', :word_form => 'door {}/ ( Bird:<.( tail:short ))', :abbrev_form => 'D {}/ ( B:<.( T:S ))', :alpha => "DEOBITIS");
Formula.create( :base => '162', :offset => '032', :subindex => '0', :ord => '2', :iform => '78.17 {}/ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'door {}/ ( Bird:<.( tail:short ))', :abbrev_form => 'D {}/ ( B:<.( T:S ))', :alpha => "DEOBITIS");
Formula.create( :base => '162', :offset => '032', :subindex => '0', :ord => '3', :iform => '78.17 {}/ 162.1', :word_form => 'gate {}/ ( Bird:<.( tail:short ))', :abbrev_form => 'G {}/ ( B:<.( T:S ))', :alpha => "GEOBITIS");
Formula.create( :base => '162', :offset => '032', :subindex => '0', :ord => '4', :iform => '78.17 {}/ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'gate {}/ ( Bird:<.( tail:short ))', :abbrev_form => 'G {}/ ( B:<.( T:S ))', :alpha => "GEOBITIS");
Formula.create( :base => '162', :offset => '035', :subindex => '0', :ord => '1', :iform => '23.1 +/ 162.1', :word_form => 'Border +/ ( Bird:<.( tail:short ))', :abbrev_form => 'B +/ ( B:<.( T:S ))', :alpha => "BIOBITIS");
Formula.create( :base => '162', :offset => '035', :subindex => '0', :ord => '2', :iform => '23.1 +/ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Border +/ ( Bird:<.( tail:short ))', :abbrev_form => 'B +/ ( B:<.( T:S ))', :alpha => "BIOBITIS");
Formula.create( :base => '162', :offset => '035', :subindex => '0', :ord => '3', :iform => '23.1 +/ 162.1', :word_form => 'space +/ ( Bird:<.( tail:short ))', :abbrev_form => 'S +/ ( B:<.( T:S ))', :alpha => "SIOBITIS");
Formula.create( :base => '162', :offset => '035', :subindex => '0', :ord => '4', :iform => '23.1 +/ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'space +/ ( Bird:<.( tail:short ))', :abbrev_form => 'S +/ ( B:<.( T:S ))', :alpha => "SIOBITIS");
Formula.create( :base => '162', :offset => '039', :subindex => '0', :ord => '1', :iform => '162.1 / ( 89.0->14.0.b )', :word_form => '( Bird:<.( tail:short )) / ( hand->again )', :abbrev_form => '( B:<.( T:S )) / ( H->A )', :alpha => "BITISOHYA");
Formula.create( :base => '162', :offset => '039', :subindex => '0', :ord => '2', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / ( 89.0->14.0.b )', :word_form => '( Bird:<.( tail:short )) / ( hand->again )', :abbrev_form => '( B:<.( T:S )) / ( H->A )', :alpha => "BITISOHYA");
Formula.create( :base => '162', :offset => '039', :subindex => 's', :ord => '2', :iform => '68.1 / 29.1.a', :word_form => 'Mouth / breath', :abbrev_form => 'M / B', :alpha => "MOB");
Formula.create( :base => '162', :offset => '039', :subindex => 's', :ord => '3', :iform => '68.1 / 29.1', :word_form => 'Mouth / divide', :abbrev_form => 'M / D', :alpha => "MOD");
Formula.create( :base => '162', :offset => '039', :subindex => 's', :ord => '4', :iform => '68.1 / (29.1.a->29.1)', :word_form => 'Mouth / ( breath->divide)', :abbrev_form => 'M / ( B->D)', :alpha => "MOBYD");
Formula.create( :base => '162', :offset => '039', :subindex => 's', :ord => '1', :iform => '68.68', :word_form => 'only', :abbrev_form => 'O', :alpha => "O");
Formula.create( :base => '162', :offset => '040', :subindex => '0', :ord => '1', :iform => '( 162.1 )^2', :word_form => '( Bird:<.( tail:short ))^2', :abbrev_form => '( B:<.( T:S ))^2', :alpha => "BITISUT");
Formula.create( :base => '162', :offset => '040', :subindex => '0', :ord => '2', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => '( Bird:<.( tail:short ))^2', :abbrev_form => '( B:<.( T:S ))^2', :alpha => "BITISUT");
Formula.create( :base => '162', :offset => '040', :subindex => '0', :ord => '3', :iform => 'pair( 162.1 )', :word_form => 'pair( Bird:<.( tail:short ))', :abbrev_form => 'P( B:<.( T:S ))', :alpha => "POBITIS");
Formula.create( :base => '162', :offset => '040', :subindex => '0', :ord => '4', :iform => 'pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'pair( Bird:<.( tail:short ))', :abbrev_form => 'P( B:<.( T:S ))', :alpha => "POBITIS");
Formula.create( :base => '162', :offset => '042', :subindex => '0', :ord => '1', :iform => '( 162.1 )^2 / 68.1', :word_form => '( Bird:<.( tail:short ))^2 / Mouth', :abbrev_form => '( B:<.( T:S ))^2 / M', :alpha => "BITISUTOM");
Formula.create( :base => '162', :offset => '042', :subindex => '0', :ord => '5', :iform => '162.1 / 68.1', :word_form => '( Bird:<.( tail:short )) / Mouth', :abbrev_form => '( B:<.( T:S )) / M', :alpha => "BITISOM");
Formula.create( :base => '162', :offset => '042', :subindex => '0', :ord => '2', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2 / 68.1', :word_form => '( Bird:<.( tail:short ))^2 / Mouth', :abbrev_form => '( B:<.( T:S ))^2 / M', :alpha => "BITISUTOM");
Formula.create( :base => '162', :offset => '042', :subindex => '0', :ord => '6', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 68.1', :word_form => '( Bird:<.( tail:short )) / Mouth', :abbrev_form => '( B:<.( T:S )) / M', :alpha => "BITISOM");
Formula.create( :base => '162', :offset => '042', :subindex => '0', :ord => '3', :iform => 'Pair( 162.1 ) / 68.1', :word_form => 'pair( Bird:<.( tail:short )) / Mouth', :abbrev_form => 'P( B:<.( T:S )) / M', :alpha => "POBITISOM");
Formula.create( :base => '162', :offset => '042', :subindex => '0', :ord => '4', :iform => 'pair((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 68.1', :word_form => 'pair( Bird:<.( tail:short )) / Mouth', :abbrev_form => 'P( B:<.( T:S )) / M', :alpha => "POBITISOM");
Formula.create( :base => '162', :offset => '043', :subindex => '0', :ord => '3', :iform => '( 66.0:->108.0 ) * 162.1', :word_form => '( plant:->grain ) * ( Bird:<.( tail:short ))', :abbrev_form => '( P:->G ) * ( B:<.( T:S ))', :alpha => "PYGABITIS");
Formula.create( :base => '162', :offset => '043', :subindex => '0', :ord => '4', :iform => '( 66.0:->108.0 ) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( plant:->grain ) * ( Bird:<.( tail:short ))', :abbrev_form => '( P:->G ) * ( B:<.( T:S ))', :alpha => "PYGABITIS");
Formula.create( :base => '162', :offset => '043', :subindex => '0', :ord => '1', :iform => '108.1 * 162.1', :word_form => 'grain * ( Bird:<.( tail:short ))', :abbrev_form => 'G * ( B:<.( T:S ))', :alpha => "GABITIS");
Formula.create( :base => '162', :offset => '043', :subindex => '0', :ord => '2', :iform => '108.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'grain * ( Bird:<.( tail:short ))', :abbrev_form => 'G * ( B:<.( T:S ))', :alpha => "GABITIS");
Formula.create( :base => '162', :offset => '044', :subindex => '0', :ord => '1', :iform => '2.21.a * 162.1', :word_form => 'Side-water * ( Bird:<.( tail:short ))', :abbrev_form => 'SW * ( B:<.( T:S ))', :alpha => "SWABITIS");
Formula.create( :base => '162', :offset => '044', :subindex => '0', :ord => '2', :iform => '2.21.a * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Side-water * ( Bird:<.( tail:short ))', :abbrev_form => 'SW * ( B:<.( T:S ))', :alpha => "SWABITIS");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '1', :iform => '162.1 / 1.1.c', :word_form => '( Bird:<.( tail:short )) / bar', :abbrev_form => '( B:<.( T:S )) / B', :alpha => "BITISOB");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '3', :iform => '162.1 / 31.1', :word_form => '( Bird:<.( tail:short )) / ten', :abbrev_form => '( B:<.( T:S )) / T', :alpha => "BITISOT");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '5', :iform => '162.1 / ( 1.1.c->31.1 )', :word_form => '( Bird:<.( tail:short )) / ( bar->ten )', :abbrev_form => '( B:<.( T:S )) / ( B->T )', :alpha => "BITISOBYT");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '7', :iform => '162.1 / 1.1.c', :word_form => '( Bird:<.( tail:short )) / bar', :abbrev_form => '( B:<.( T:S )) / B', :alpha => "BITISOB");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '9', :iform => '162.1 / 31.1', :word_form => '( Bird:<.( tail:short )) / ten', :abbrev_form => '( B:<.( T:S )) / T', :alpha => "BITISOT");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '11', :iform => '162.1 / ( 1.1.c->31.1 )', :word_form => '( Bird:<.( tail:short )) / ( bar->ten )', :abbrev_form => '( B:<.( T:S )) / ( B->T )', :alpha => "BITISOBYT");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '2', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 1.1.c', :word_form => '( Bird:<.( tail:short )) / bar', :abbrev_form => '( B:<.( T:S )) / B', :alpha => "BITISOB");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '4', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 31.1', :word_form => '( Bird:<.( tail:short )) / ten', :abbrev_form => '( B:<.( T:S )) / T', :alpha => "BITISOT");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '6', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / ( 1.1.c->31.1 )', :word_form => '( Bird:<.( tail:short )) / ( bar->ten )', :abbrev_form => '( B:<.( T:S )) / ( B->T )', :alpha => "BITISOBYT");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '8', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 1.1.c', :word_form => '( Bird:<.( tail:short )) / bar', :abbrev_form => '( B:<.( T:S )) / B', :alpha => "BITISOB");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '10', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / 31.1', :word_form => '( Bird:<.( tail:short )) / ten', :abbrev_form => '( B:<.( T:S )) / T', :alpha => "BITISOT");
Formula.create( :base => '162', :offset => '046', :subindex => '0', :ord => '12', :iform => '((178.0 ):<.(( 178.0.b ):( 178.0.c ))) / ( 1.1.c->31.1 )', :word_form => '( Bird:<.( tail:short )) / ( bar->ten )', :abbrev_form => '( B:<.( T:S )) / ( B->T )', :alpha => "BITISOBYT");
Formula.create( :base => '162', :offset => '049', :subindex => '0', :ord => '1', :iform => '122.1 */ 162.1', :word_form => 'Skin-of-tiger */ ( Bird:<.( tail:short ))', :abbrev_form => 'SOT */ ( B:<.( T:S ))', :alpha => "SOTA-OBITIS");
Formula.create( :base => '162', :offset => '049', :subindex => '0', :ord => '2', :iform => '122.1 */ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'Skin-of-tiger */ ( Bird:<.( tail:short ))', :abbrev_form => 'SOT */ ( B:<.( T:S ))', :alpha => "SOTA-OBITIS");
Formula.create( :base => '162', :offset => '049', :subindex => '0', :ord => '3', :iform => 'Top( 122.0 ) */ 162.1', :word_form => 'top( Tiger ) */ ( Bird:<.( tail:short ))', :abbrev_form => 'TOT */ ( B:<.( T:S ))', :alpha => "TOTA-OBITIS");
Formula.create( :base => '162', :offset => '049', :subindex => '0', :ord => '4', :iform => 'Top( 122.0 ) */ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'top( Tiger ) */ ( Bird:<.( tail:short ))', :abbrev_form => 'TOT */ ( B:<.( T:S ))', :alpha => "TOTA-OBITIS");
Formula.create( :base => '162', :offset => '051', :subindex => '0', :ord => '1', :iform => '21.1 */ ( 10.1.a * 162.1 )', :word_form => 'Cliff */ ( side-person * ( Bird:<.( tail:short ))', :abbrev_form => 'C */ ( SP * ( B:<.( T:S )))', :alpha => "CA-OSPABITIS");
Formula.create( :base => '162', :offset => '051', :subindex => '0', :ord => '2', :iform => '21.1 */ ( 10.1.a * ((178.0 ):<.(( 178.0.b ):( 178.0.c ))))', :word_form => 'Cliff */ ( side-person * ( Bird:<.( tail:short ))', :abbrev_form => 'C */ ( SP * ( B:<.( T:S )))', :alpha => "CA-OSPABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '3', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * 162.1', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "I-EHYMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '4', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "I-EHYMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '5', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * 162.1', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "HOI-YMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '6', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "HOI-YMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '9', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * 162.1', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "I-EHYMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '10', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "I-EHYMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '11', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * 162.1', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "HOI-YMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '12', :iform => '(((( 125.0.a ).( 143.0 )->68.1 ) / ( 125.0.a | 125.0.b )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '(( insect.head->mouth ) / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '(( I.H->M ) / ( I | S )) * ( B:<.( T:S ))', :alpha => "HOI-YMOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '13', :iform => '(( 68.1 ) / ( 125.0.a | 125.0.b )) * 162.1', :word_form => '( mouth / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '( M / ( I | S )) * ( B:<.( T:S ))', :alpha => "MOI-OABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '14', :iform => '(( 68.1 ) / ( 125.0.a | 125.0.b )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( mouth / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '( M / ( I | S )) * ( B:<.( T:S ))', :alpha => "MOI-OABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '1', :iform => '( 68.1.d / ( 125.0.a | 125.0.b )) * 162.1', :word_form => '( Insect-head / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '( IH / ( I | S )) * ( B:<.( T:S ))', :alpha => "IHOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '2', :iform => '( 68.1.d / ( 125.0.a | 125.0.b )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Insect-head / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '( IH / ( I | S )) * ( B:<.( T:S ))', :alpha => "IHOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '7', :iform => '( 68.1.d / ( 125.0.a | 125.0.b )) * 162.1', :word_form => '( Insect-head / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '( IH / ( I | S )) * ( B:<.( T:S ))', :alpha => "IHOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => '0', :ord => '8', :iform => '( 68.1.d / ( 125.0.a | 125.0.b )) * ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Insect-head / ( Insect | Snake )) * ( Bird:<.( tail:short ))', :abbrev_form => '( IH / ( I | S )) * ( B:<.( T:S ))', :alpha => "IHOI-OSABITIS");
Formula.create( :base => '162', :offset => '057', :subindex => 's', :ord => '1', :iform => '125.1.a', :word_form => 'insect', :abbrev_form => 'I', :alpha => "I");
Formula.create( :base => '162', :offset => '058', :subindex => '0', :ord => '3', :iform => '(( 10.0 )::( 75.0.b ):>( 39.0.d )) {}/ 162.1', :word_form => '( person::show:>arms ) {}/ ( Bird:<.( tail:short ))', :abbrev_form => '( P::S:>A ) {}/ ( B:<.( T:S ))', :alpha => "PASOA-EOBITIS");
Formula.create( :base => '162', :offset => '058', :subindex => '0', :ord => '4', :iform => '(( 10.0 )::( 75.0.b ):>( 39.0.d ))  {}/ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( person::show:>arms ) {}/ ( Bird:<.( tail:short ))', :abbrev_form => '( P::S:>A ) {}/ ( B:<.( T:S ))', :alpha => "PASOA-EOBITIS");
Formula.create( :base => '162', :offset => '058', :subindex => '0', :ord => '1', :iform => '39.1 {}/ 162.1', :word_form => 'big {}/ ( Bird:<.( tail:short ))', :abbrev_form => 'B {}/ ( B:<.( T:S ))', :alpha => "BEOBITIS");
Formula.create( :base => '162', :offset => '058', :subindex => '0', :ord => '2', :iform => '39.1  {}/ ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'big {}/ ( Bird:<.( tail:short ))', :abbrev_form => 'B {}/ ( B:<.( T:S ))', :alpha => "BEOBITIS");
Formula.create( :base => '162', :offset => '061', :subindex => '0', :ord => '4', :iform => '( 74.1->66.2.a ) / ((178.0 ):<.(( 178.0.b ):( 178.0.c ))', :word_form => '( horns-of-ram->grass ) / ( Bird:<.( tail:short ))', :abbrev_form => '( HOR->G ) / ( B:<.( T:S ))', :alpha => "HORYGOBITIS");
Formula.create( :base => '162', :offset => '061', :subindex => '0', :ord => '5', :iform => '( 74.1->66.2.a ) / ((178.0 ):<.(( 178.0.b ):( 178.0.c ))', :word_form => '( horns-of-ram->Grass-at-top ) / ( Bird:<.( tail:short ))', :abbrev_form => '( HOR->GAT ) / ( B:<.( T:S ))', :alpha => "HORYGATOBITIS");
Formula.create( :base => '162', :offset => '061', :subindex => '0', :ord => '2', :iform => '66.2.a / ((178.0 ):<.(( 178.0.b ):( 178.0.c ))', :word_form => 'grass / ( Bird:<.( tail:short ))', :abbrev_form => 'G / ( B:<.( T:S ))', :alpha => "GOBITIS");
Formula.create( :base => '162', :offset => '061', :subindex => '0', :ord => '3', :iform => '66.2.a / ((178.0 ):<.(( 178.0.b ):( 178.0.c ))', :word_form => 'Grass-at-top / ( Bird:<.( tail:short ))', :abbrev_form => 'GAT / ( B:<.( T:S ))', :alpha => "GATOBITIS");
Formula.create( :base => '162', :offset => '061', :subindex => '0', :ord => '1', :iform => '74.1 / ((178.0 ):<.(( 178.0.b ):( 178.0.c ))', :word_form => 'horns-of-ram / ( Bird:<.( tail:short ))', :abbrev_form => 'HOR / ( B:<.( T:S ))', :alpha => "HOROBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '2', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ( 162.1 )^2', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))^2', :alpha => "REDICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '3', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ( 162.1 )^2', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))^2', :alpha => "DORICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '6', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ( 162.1 )^2', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))^2', :alpha => "REDAFITICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '7', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ( 162.1 )^2', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))^2', :alpha => "DORAFITICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '9', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))^2', :alpha => "REDICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '10', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))^2', :alpha => "DORICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '13', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))^2', :alpha => "REDAFITICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '14', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))^2', :alpha => "DORAFITICOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '16', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair( 162.1 )', :word_form => '( rain.drops :][ cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / P( B:<.( T:S ))', :alpha => "REDICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '17', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair( 162.1 )', :word_form => '( rain.drops :][ cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / P( B:<.( T:S ))', :alpha => "DORICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '20', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair( 162.1 )', :word_form => '( rain.drops::fall:-[]>:cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / P( B:<.( T:S ))', :alpha => "REDAFITICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '21', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair( 162.1 )', :word_form => '( rain.drops::fall:-[]>:cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / P( B:<.( T:S ))', :alpha => "DORAFITICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '23', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops :][ cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / P( B:<.( T:S ))', :alpha => "REDICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '24', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops :][ cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / P( B:<.( T:S ))', :alpha => "DORICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '27', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops::fall:-[]>:cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / P( B:<.( T:S ))', :alpha => "REDAFITICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '28', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops::fall:-[]>:cloud ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / P( B:<.( T:S ))', :alpha => "DORAFITICOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '30', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1 )) / 162.1', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))', :alpha => "REDICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '31', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / 162.1', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))', :alpha => "DORICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '34', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / 162.1', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))', :alpha => "REDAFITICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '35', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / 162.1', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))', :alpha => "DORAFITICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '37', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))', :alpha => "REDICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '38', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops :][ cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D :][ C ) / ( B:<.( T:S ))', :alpha => "DORICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '41', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))', :alpha => "REDAFITICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '42', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( rain.drops::fall:-[]>:cloud ) / ( Bird:<.( tail:short ))', :abbrev_form => '( R.D::F:-[]>:C ) / ( B:<.( T:S ))', :alpha => "DORAFITICOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '4', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ( 162.1 )^2', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))^2', :alpha => "CEREDOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '5', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ( 162.1 )^2', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))^2', :alpha => "CEDOROBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '11', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))^2', :alpha => "CEREDOBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '12', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))^2', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))^2', :alpha => "CEDOROBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '18', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair( 162.1 )', :word_form => '( Cloud :[] rain.drops ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / P( B:<.( T:S ))', :alpha => "CEREDOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '19', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair( 162.1 )', :word_form => '( Cloud :[] rain.drops ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / P( B:<.( T:S ))', :alpha => "CEDOROPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '25', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Cloud :[] rain.drops ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / P( B:<.( T:S ))', :alpha => "CEREDOPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '26', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Cloud :[] rain.drops ) / pair( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / P( B:<.( T:S ))', :alpha => "CEDOROPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '32', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / 162.1', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))', :alpha => "CEREDOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '33', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1^2 )) / 162.1', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))', :alpha => "CEDOROBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '39', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))', :alpha => "CEREDOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '40', :iform => '(( 81.0.a ) :[] ( 161.0 ).( 161.0.a )) / ( 1.1.a / 1.1.c / ( 24.1 {}/ 4.1 )) / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => '( Cloud :[] rain.drops ) / ( Bird:<.( tail:short ))', :abbrev_form => '( C :[] R.D ) / ( B:<.( T:S ))', :alpha => "CEDOROBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '1', :iform => '161.1 / ( 162.1 )^2', :word_form => 'rain / ( Bird:<.( tail:short ))^2', :abbrev_form => 'R / ( B:<.( T:S ))^2', :alpha => "ROBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '8', :iform => '161.1 / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))^2', :word_form => 'rain / ( Bird:<.( tail:short ))^2', :abbrev_form => 'R / ( B:<.( T:S ))^2', :alpha => "ROBITISUT");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '15', :iform => '161.1 / pair( 162.1 )', :word_form => 'rain / pair( Bird:<.( tail:short ))', :abbrev_form => 'R / P( B:<.( T:S ))', :alpha => "ROPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '22', :iform => '161.1 / pair((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'rain / pair( Bird:<.( tail:short ))', :abbrev_form => 'R / P( B:<.( T:S ))', :alpha => "ROPOBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '29', :iform => '161.1 / 162.1', :word_form => 'rain / ( Bird:<.( tail:short ))', :abbrev_form => 'R / ( B:<.( T:S ))', :alpha => "ROBITIS");
Formula.create( :base => '162', :offset => '074', :subindex => '0', :ord => '36', :iform => '161.1 / ((178.0 ):<.(( 178.0.b ):( 178.0.c )))', :word_form => 'rain / ( Bird:<.( tail:short ))', :abbrev_form => 'R / ( B:<.( T:S ))', :alpha => "ROBITIS");
Formula.create( :base => '163', :offset => '000', :subindex => '0', :ord => '1', :iform => '163.0', :word_form => 'abstract( "lizard" )', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '163', :offset => '000', :subindex => 'a', :ord => '1', :iform => '163.0.a', :word_form => 'abstract( "dragon" )', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '8', :iform => '( 143.0 / 11.0 )->( 76.1 / 86.1 )', :word_form => '( head / legs )->( Sun / banner::hangs )', :abbrev_form => '( H / L )->( S / B::H )', :alpha => "HOLYSOBAH");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 163.0 }', :word_form => '{ lizard }', :abbrev_form => '{ L }', :alpha => "L");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 163.0 ).( 143.0 / 11.0 )', :word_form => 'Lizard.( head / legs )', :abbrev_form => 'L.( H / L )', :alpha => "LEHOL");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 163.0 ).( 143.0 / 11.0 )', :word_form => 'Lizard.( head / legs )', :abbrev_form => 'L.( H / L )', :alpha => "HOLOL");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '9', :iform => '( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )', :word_form => 'Lizard.( head / legs )->( Sun / banner::hangs )', :abbrev_form => 'L.( H / L )->( S / B::H )', :alpha => "LEHOLYSOBAH");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '10', :iform => '( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )', :word_form => 'Lizard.( head / legs )->( Sun / banner::hangs )', :abbrev_form => 'L.( H / L )->( S / B::H )', :alpha => "HOLOLYSOBAH");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '11', :iform => '( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )', :word_form => '( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs )', :abbrev_form => '( L.H->S ) / ( L.L->B::H )', :alpha => "LEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '12', :iform => '( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )', :word_form => '( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs )', :abbrev_form => '( L.H->S ) / ( L.L->B::H )', :alpha => "HOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '7', :iform => '163.0->( 76.1 / 86.1 )', :word_form => 'lizard->( Sun / banner::hangs )', :abbrev_form => 'L->( S / B::H )', :alpha => "LYSOBAH");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '1', :iform => '163.1', :word_form => '{ "lizard" }', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '5', :iform => '76.1 / 86.1', :word_form => 'Sun / banner::hangs', :abbrev_form => 'S / B::H', :alpha => "SOBAH");
Formula.create( :base => '163', :offset => '001', :subindex => '0', :ord => '6', :iform => '86.1 \ 76.1', :word_form => 'banner::hangs \ Sun', :abbrev_form => 'B::H \ S', :alpha => "BAHUS");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 125.0.a | 125.0.b ) * 163.1', :word_form => '( Insect | Snake ) * lizard', :abbrev_form => '( I | S ) * L', :alpha => "IOSAL");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 125.0.a | 125.0.b ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Insect | Snake ) * Lizard.( head / legs )', :abbrev_form => '( I | S ) * L.( H / L )', :alpha => "IOSALEHOL");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '4', :iform => '( 125.0.a | 125.0.b ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Insect | Snake ) * Lizard.( head / legs )', :abbrev_form => '( I | S ) * L.( H / L )', :alpha => "IOSAHOLOL");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '5', :iform => '( 125.0.a | 125.0.b ) * ( 76.1 / 86.1 )', :word_form => '( Insect | Snake ) * ( Sun / banner::hangs )', :abbrev_form => '( I | S ) * ( S / B::H )', :alpha => "IOSASOBAH");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '6', :iform => '( 125.0.a | 125.0.b ) * ( 86.1 \ 76.1 )', :word_form => '( Insect | Snake ) * ( banner::hangs \ Sun )', :abbrev_form => '( I | S ) * ( B::H \ S )', :alpha => "IOSABAHUS");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '7', :iform => '( 125.0.a | 125.0.b ) * ( 163.0->( 76.1 / 86.1 ))', :word_form => '( Insect | Snake ) * ( lizard->( Sun / banner::hangs ))', :abbrev_form => '( I | S ) * ( L->( S / B::H ))', :alpha => "IOSALYSOBAH");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '8', :iform => '( 125.0.a | 125.0.b ) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Insect | Snake ) * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( I | S ) * (( H / L )->( S / B::H ))', :alpha => "IOSAHOLYSOBAH");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '9', :iform => '( 125.0.a | 125.0.b ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Insect | Snake ) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( I | S ) * ( L.( H / L )->( S / B::H ))', :alpha => "IOSALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '10', :iform => '( 125.0.a | 125.0.b ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Insect | Snake ) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( I | S ) * ( L.( H / L )->( S / B::H ))', :alpha => "IOSAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '11', :iform => '( 125.0.a | 125.0.b ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Insect | Snake ) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( I | S ) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "IOSALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '12', :iform => '( 125.0.a | 125.0.b ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Insect | Snake ) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( I | S ) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "IOSAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '002', :subindex => '0', :ord => '1', :iform => '125.1 * 163.1', :word_form => '( Insect | Snake ) * lizard', :abbrev_form => '( I | S ) * L', :alpha => "IOSAL");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '1', :iform => '83.1.a * 163.1', :word_form => 'Side-heart-is-open * lizard', :abbrev_form => 'SHIO * L', :alpha => "SHIO-AL");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '2', :iform => '83.1.a * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'Side-heart-is-open * Lizard.( head / legs )', :abbrev_form => 'SHIO * L.( H / L )', :alpha => "SHIO-ALEHOL");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '3', :iform => '83.1.a * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'Side-heart-is-open * Lizard.( head / legs )', :abbrev_form => 'SHIO * L.( H / L )', :alpha => "SHIO-AHOLOL");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '4', :iform => '83.1.a * ( 76.1 / 86.1 )', :word_form => 'Side-heart-is-open * ( Sun / banner::hangs )', :abbrev_form => 'SHIO * ( S / B::H )', :alpha => "SHIO-ASOBAH");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '5', :iform => '83.1.a * ( 86.1 \ 76.1 )', :word_form => 'Side-heart-is-open * ( banner::hangs \ Sun )', :abbrev_form => 'SHIO * ( B::H \ S )', :alpha => "SHIO-ABAHUS");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '6', :iform => '83.1.a * ( 163.0->( 76.1 / 86.1 ))', :word_form => 'Side-heart-is-open * ( lizard->( Sun / banner::hangs ))', :abbrev_form => 'SHIO * ( L->( S / B::H ))', :alpha => "SHIO-ALYSOBAH");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '7', :iform => '83.1.a * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'Side-heart-is-open * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'SHIO * (( H / L )->( S / B::H ))', :alpha => "SHIO-AHOLYSOBAH");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '8', :iform => '83.1.a * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'Side-heart-is-open * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'SHIO * ( L.( H / L )->( S / B::H ))', :alpha => "SHIO-ALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '9', :iform => '83.1.a * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'Side-heart-is-open * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'SHIO * ( L.( H / L )->( S / B::H ))', :alpha => "SHIO-AHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '10', :iform => '83.1.a * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'Side-heart-is-open * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'SHIO * (( L.H->S ) / ( L.L->B::H ))', :alpha => "SHIO-ALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '003', :subindex => '0', :ord => '11', :iform => '83.1.a * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'Side-heart-is-open * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'SHIO * (( L.H->S ) / ( L.L->B::H ))', :alpha => "SHIO-AHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '1', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * 163.1', :word_form => '(( lower-leg->mouth ) / foot ) * lizard', :abbrev_form => '(( LL->M ) / F ) * L', :alpha => "LLYMOFAL");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '2', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '(( lower-leg->mouth ) / foot ) * Lizard.( head / legs )', :abbrev_form => '(( LL->M ) / F ) * L.( H / L )', :alpha => "LLYMOFALEHOL");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '3', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '(( lower-leg->mouth ) / foot ) * Lizard.( head / legs )', :abbrev_form => '(( LL->M ) / F ) * L.( H / L )', :alpha => "LLYMOFAHOLOL");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '4', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * ( 76.1 / 86.1 )', :word_form => '(( lower-leg->mouth ) / foot ) * ( Sun / banner::hangs )', :abbrev_form => '(( LL->M ) / F ) * ( S / B::H )', :alpha => "LLYMOFASOBAH");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '5', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * ( 86.1 \ 76.1 )', :word_form => '(( lower-leg->mouth ) / foot ) * ( banner::hangs \ Sun )', :abbrev_form => '(( LL->M ) / F ) * ( B::H \ S )', :alpha => "LLYMOFABAHUS");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '6', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * ( 163.0->( 76.1 / 86.1 ))', :word_form => '(( lower-leg->mouth ) / foot ) * ( lizard->( Sun / banner::hangs ))', :abbrev_form => '(( LL->M ) / F ) * ( L->( S / B::H ))', :alpha => "LLYMOFALYSOBAH");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '7', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '(( lower-leg->mouth ) / foot ) * (( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '(( LL->M ) / F ) * (( H / L )->( S / B::H ))', :alpha => "LLYMOFAHOLYSOBAH");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '8', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '(( lower-leg->mouth ) / foot ) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '(( LL->M ) / F ) * ( L.( H / L )->( S / B::H ))', :alpha => "LLYMOFALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '9', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '(( lower-leg->mouth ) / foot ) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '(( LL->M ) / F ) * ( L.( H / L )->( S / B::H ))', :alpha => "LLYMOFAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '10', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '(( lower-leg->mouth ) / foot ) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '(( LL->M ) / F ) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "LLYMOFALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '004', :subindex => '0', :ord => '11', :iform => '(( 88.0.c ->68.1 ) / 88.1 ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '(( lower-leg->mouth ) / foot ) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '(( LL->M ) / F ) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "LLYMOFAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '7', :iform => '(( 143.0 / 11.0 )->( 76.1 / 86.1 )) * 35.1.a', :word_form => '((  head / legs )->( Sun / banner::hangs )) * Knife-at-right', :abbrev_form => '(( H / L )->( S / B::H )) * KAR', :alpha => "HOLYSOBAHAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '2', :iform => '( 163.0 ).( 143.0 / 11.0 ) * 35.1.a', :word_form => 'Lizard.( head / legs ) * Knife-at-right', :abbrev_form => 'L.( H / L ) * KAR', :alpha => "LEHOLAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '3', :iform => '( 163.0 ).( 143.0 / 11.0 ) * 35.1.a', :word_form => 'Lizard.( head / legs ) * Knife-at-right', :abbrev_form => 'L.( H / L ) * KAR', :alpha => "HOLOLAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '6', :iform => '( 163.0->( 76.1 / 86.1 )) * 35.1.a', :word_form => '( lizard->( Sun / banner::hangs )) * Knife-at-right', :abbrev_form => '( L->( S / B::H )) * KAR', :alpha => "LYSOBAHAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '8', :iform => '(( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )) * 35.1.a', :word_form => '( Lizard.( head / legs )->( Sun / banner::hangs )) * Knife-at-right', :abbrev_form => '( L.( H / L )->( S / B::H )) * KAR', :alpha => "LEHOLYSOBAHAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '9', :iform => '(( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )) * 35.1.a', :word_form => '( Lizard.( head / legs )->( Sun / banner::hangs )) * Knife-at-right', :abbrev_form => '( L.( H / L )->( S / B::H )) * KAR', :alpha => "HOLOLYSOBAHAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '10', :iform => '(( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )) * 35.1.a', :word_form => '(( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs )) * Knife-at-right', :abbrev_form => '(( L.H->S ) / ( L.L->B::H )) * KAR', :alpha => "LEHYSOLELYBAHAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '11', :iform => '(( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 )) * 35.1.a', :word_form => '(( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs )) * Knife-at-right', :abbrev_form => '(( L.H->S ) / ( L.L->B::H )) * KAR', :alpha => "HOLYSOLOLYBAHAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '4', :iform => '( 76.1 / 86.1 ) * 35.1.a', :word_form => '( Sun / banner::hangs ) * Knife-at-right', :abbrev_form => '( S / B::H ) * KAR', :alpha => "SOBAHAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '5', :iform => '( 86.1 \ 76.1 ) * 35.1.a', :word_form => '( banner::hangs \ Sun ) * Knife-at-right', :abbrev_form => '( B::H \ S ) * KAR', :alpha => "BAHUSAKAR");
Formula.create( :base => '163', :offset => '005', :subindex => '0', :ord => '1', :iform => '163.1 * 35.1.a', :word_form => 'lizard * Knife-at-right', :abbrev_form => 'L * KAR', :alpha => "LAKAR");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '12', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * 163.1', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * lizard', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * L', :alpha => "GO-ABODUTILA-E-AL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '13', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * Lizard.( head / legs )', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * L.( H / L )', :alpha => "GO-ABODUTILA-E-ALEHOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '14', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * Lizard.( head / legs )', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * L.( H / L )', :alpha => "GO-ABODUTILA-E-AHOLOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '15', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 76.1 / 86.1 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ( Sun / banner::hangs )', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * ( S / B::H )', :alpha => "GO-ABODUTILA-E-ASOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '16', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 86.1 \ 76.1 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ( banner::hangs \ Sun )', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * ( B::H \ S )', :alpha => "GO-ABODUTILA-E-ABAHUS");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '17', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ( lizard->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * ( L->( S / B::H ))', :alpha => "GO-ABODUTILA-E-ALYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '18', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * (( H / L )->( S / B::H ))', :alpha => "GO-ABODUTILA-E-AHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '19', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * ( L.( H / L )->( S / B::H ))', :alpha => "GO-ABODUTILA-E-ALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '20', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * ( L.( H / L )->( S / B::H ))', :alpha => "GO-ABODUTILA-E-AHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '21', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GO-ABODUTILA-E-ALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '22', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* earth )) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* E )) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GO-ABODUTILA-E-AHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '23', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * 163.1', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * lizard', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * L', :alpha => "GO-ABODUTILAGAL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '24', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * Lizard.( head / legs )', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * L.( H / L )', :alpha => "GO-ABODUTILAGALEHOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '25', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * Lizard.( head / legs )', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * L.( H / L )', :alpha => "GO-ABODUTILAGAHOLOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '26', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 76.1 / 86.1 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ( Sun / banner::hangs )', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * ( S / B::H )', :alpha => "GO-ABODUTILAGASOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '27', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 86.1 \ 76.1 )', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ( banner::hangs \ Sun )', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * ( B::H \ S )', :alpha => "GO-ABODUTILAGABAHUS");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '28', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ( lizard->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * ( L->( S / B::H ))', :alpha => "GO-ABODUTILAGALYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '29', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * (( H / L )->( S / B::H ))', :alpha => "GO-ABODUTILAGAHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '30', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * ( L.( H / L )->( S / B::H ))', :alpha => "GO-ABODUTILAGALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '31', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * ( L.( H / L )->( S / B::H ))', :alpha => "GO-ABODUTILAGAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '32', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GO-ABODUTILAGALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '33', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / angle-bar / ( dot^2 *]|[* ground )) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( G / AB / ( D^2 *]|[* G )) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GO-ABODUTILAGAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '34', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * 163.1', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * lizard', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * L', :alpha => "GOCODUTILAGAL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '35', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * Lizard.( head / legs )', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * L.( H / L )', :alpha => "GOCODUTILAGALEHOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '36', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * Lizard.( head / legs )', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * L.( H / L )', :alpha => "GOCODUTILAGAHOLOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '37', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 76.1 / 86.1 )', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ( Sun / banner::hangs )', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * ( S / B::H )', :alpha => "GOCODUTILAGASOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '38', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 86.1 \ 76.1 )', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ( banner::hangs \ Sun )', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * ( B::H \ S )', :alpha => "GOCODUTILAGABAHUS");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '39', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * ( 163.0->( 76.1 / 86.1 ))', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ( lizard->( Sun / banner::hangs ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * ( L->( S / B::H ))', :alpha => "GOCODUTILAGALYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '40', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * (( H / L )->( S / B::H ))', :alpha => "GOCODUTILAGAHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '41', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * ( L.( H / L )->( S / B::H ))', :alpha => "GOCODUTILAGALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '42', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * ( L.( H / L )->( S / B::H ))', :alpha => "GOCODUTILAGAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '43', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GOCODUTILAGALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '44', :iform => '( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 )) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => '( Gather / contact / ( dot^2 *]|[* ground )) * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => '( G / C / ( D^2 *]|[* G )) * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GOCODUTILAGAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '1', :iform => '44.3 * 163.1', :word_form => 'gold * lizard', :abbrev_form => 'G * L', :alpha => "GAL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '2', :iform => '44.3 * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'gold * Lizard.( head / legs )', :abbrev_form => 'G * L.( H / L )', :alpha => "GALEHOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '3', :iform => '44.3 * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'gold * Lizard.( head / legs )', :abbrev_form => 'G * L.( H / L )', :alpha => "GAHOLOL");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '4', :iform => '44.3 * ( 76.1 / 86.1 )', :word_form => 'gold * ( Sun / banner::hangs )', :abbrev_form => 'G * ( S / B::H )', :alpha => "GASOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '5', :iform => '44.3 * ( 86.1 \ 76.1 )', :word_form => 'gold * ( banner::hangs \ Sun )', :abbrev_form => 'G * ( B::H \ S )', :alpha => "GABAHUS");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '6', :iform => '44.3 * ( 163.0->( 76.1 / 86.1 ))', :word_form => 'gold * ( lizard->( Sun / banner::hangs ))', :abbrev_form => 'G * ( L->( S / B::H ))', :alpha => "GALYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '7', :iform => '44.3 * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'gold * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'G * (( H / L )->( S / B::H ))', :alpha => "GAHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '8', :iform => '44.3 * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'gold * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'G * ( L.( H / L )->( S / B::H ))', :alpha => "GALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '9', :iform => '44.3 * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'gold * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'G * ( L.( H / L )->( S / B::H ))', :alpha => "GAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '10', :iform => '44.3 * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'gold * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'G * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '006', :subindex => '0', :ord => '11', :iform => '44.3 * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'gold * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'G * (( L.H->S ) / ( L.L->B::H ))', :alpha => "GAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '1', :iform => '( 150.0 ).( 150.0.a ) * 163.1', :word_form => 'mollusk.shell * lizard', :abbrev_form => 'M.S * L', :alpha => "MESAL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '2', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "MESALEHOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '3', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "MESAHOLOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '4', :iform => '( 150.0 ).( 150.0.a ) * ( 76.1 / 86.1 )', :word_form => 'mollusk.shell * ( Sun / banner::hangs )', :abbrev_form => 'M.S * ( S / B::H )', :alpha => "MESASOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '5', :iform => '( 150.0 ).( 150.0.a ) * ( 86.1 \ 76.1 )', :word_form => 'mollusk.shell * ( banner::hangs \ Sun )', :abbrev_form => 'M.S * ( B::H \ S )', :alpha => "MESABAHUS");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '6', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( lizard->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L->( S / B::H ))', :alpha => "MESALYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '7', :iform => '( 150.0 ).( 150.0.a ) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * (( H / L )->( S / B::H ))', :alpha => "MESAHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '8', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "MESALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '9', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "MESAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '10', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "MESALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '11', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "MESAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '12', :iform => '( 150.0 ).( 150.0.a ) * 163.1', :word_form => 'mollusk.shell * lizard', :abbrev_form => 'M.S * L', :alpha => "SOMAL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '13', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "SOMALEHOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '14', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "SOMAHOLOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '15', :iform => '( 150.0 ).( 150.0.a ) * ( 76.1 / 86.1 )', :word_form => 'mollusk.shell * ( Sun / banner::hangs )', :abbrev_form => 'M.S * ( S / B::H )', :alpha => "SOMASOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '16', :iform => '( 150.0 ).( 150.0.a ) * ( 86.1 \ 76.1 )', :word_form => 'mollusk.shell * ( banner::hangs \ Sun )', :abbrev_form => 'M.S * ( B::H \ S )', :alpha => "SOMABAHUS");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '17', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( lizard->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L->( S / B::H ))', :alpha => "SOMALYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '18', :iform => '( 150.0 ).( 150.0.a ) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * (( H / L )->( S / B::H ))', :alpha => "SOMAHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '19', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "SOMALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '20', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "SOMAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '21', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "SOMALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '22', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "SOMAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '23', :iform => '( 150.0 ).( 150.0.a ) * 163.1', :word_form => 'mollusk.shell * lizard', :abbrev_form => 'M.S * L', :alpha => "MESAL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '24', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "MESALEHOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '25', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "MESAHOLOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '26', :iform => '( 150.0 ).( 150.0.a ) * ( 76.1 / 86.1 )', :word_form => 'mollusk.shell * ( Sun / banner::hangs )', :abbrev_form => 'M.S * ( S / B::H )', :alpha => "MESASOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '27', :iform => '( 150.0 ).( 150.0.a ) * ( 86.1 \ 76.1 )', :word_form => 'mollusk.shell * ( banner::hangs \ Sun )', :abbrev_form => 'M.S * ( B::H \ S )', :alpha => "MESABAHUS");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '28', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( lizard->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L->( S / B::H ))', :alpha => "MESALYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '29', :iform => '( 150.0 ).( 150.0.a ) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * (( H / L )->( S / B::H ))', :alpha => "MESAHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '30', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "MESALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '31', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "MESAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '32', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "MESALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '33', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "MESAHOLYSOLOLYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '34', :iform => '( 150.0 ).( 150.0.a ) * 163.1', :word_form => 'mollusk.shell * lizard', :abbrev_form => 'M.S * L', :alpha => "SOMAL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '35', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "SOMALEHOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '36', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0 ).( 143.0 / 11.0 )', :word_form => 'mollusk.shell * Lizard.( head / legs )', :abbrev_form => 'M.S * L.( H / L )', :alpha => "SOMAHOLOL");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '37', :iform => '( 150.0 ).( 150.0.a ) * ( 76.1 / 86.1 )', :word_form => 'mollusk.shell * ( Sun / banner::hangs )', :abbrev_form => 'M.S * ( S / B::H )', :alpha => "SOMASOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '38', :iform => '( 150.0 ).( 150.0.a ) * ( 86.1 \ 76.1 )', :word_form => 'mollusk.shell * ( banner::hangs \ Sun )', :abbrev_form => 'M.S * ( B::H \ S )', :alpha => "SOMABAHUS");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '39', :iform => '( 150.0 ).( 150.0.a ) * ( 163.0->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( lizard->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L->( S / B::H ))', :alpha => "SOMALYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '40', :iform => '( 150.0 ).( 150.0.a ) * (( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ((  head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * (( H / L )->( S / B::H ))', :alpha => "SOMAHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '41', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "SOMALEHOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '42', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * ( Lizard.( head / legs )->( Sun / banner::hangs ))', :abbrev_form => 'M.S * ( L.( H / L )->( S / B::H ))', :alpha => "SOMAHOLOLYSOBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '43', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "SOMALEHYSOLELYBAH");
Formula.create( :base => '163', :offset => '007', :subindex => '0', :ord => '44', :iform => '( 150.0 ).( 150.0.a ) * (( 163.0 ).( 143.0 / 11.0 )->( 76.1 / 86.1 ))', :word_form => 'mollusk.shell * (( Lizard.head->Sun ) / ( Lizard.legs->banner::hangs ))', :abbrev_form => 'M.S * (( L.H->S ) / ( L.L->B::H ))', :alpha => "SOMAHOLYSOLOLYBAH");
Formula.create( :base => '164', :offset => '000', :subindex => '0', :ord => '1', :iform => '164.0', :word_form => 'abstract( "rabbit" ) ', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 164.0 }', :word_form => '{ rabbit }', :abbrev_form => '{ R }', :alpha => "R");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b ))', :word_form => 'Rabbit.( head :/ body :/ ( legs :* tail ))', :abbrev_form => 'R.( H :/ B :/ ( L :* T ))', :alpha => "REHOBOLAT");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b ))', :word_form => 'Rabbit.( head :/ body :/ ( legs :* tail ))', :abbrev_form => 'R.( H :/ B :/ ( L :* T ))', :alpha => "HOBOLATOR");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '6', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b ))', :word_form => 'Rabbit.( head :/ body :/ ( leg^2 :* tail ))', :abbrev_form => 'R.( H :/ B :/ ( L^2 :* T ))', :alpha => "REHOBOLUTAT");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b ))', :word_form => 'Rabbit.( head :/ body :/ ( leg^2 :* tail ))', :abbrev_form => 'R.( H :/ B :/ ( L^2 :* T ))', :alpha => "HOBOLUTATOR");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '8', :iform => '10.1.d / 69.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c )', :word_form => 'Person-at-top / square-enclose-nothing +/ (( person:->legs ) *\ dot )', :abbrev_form => 'PAT / SEN +/ (( P->L ) *\ D )', :alpha => "PATOSENIOPYLAUD");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '9', :iform => '10.1.d / 68.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c )', :word_form => 'Person-at-top / mouth +/ (( person:->legs ) *\ dot )', :abbrev_form => 'PAT / M +/ (( P->L ) *\ D )', :alpha => "PATOMIOPYLAUD");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '2', :iform => '143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )', :word_form => 'head :/ body :/ ( legs :* tail )', :abbrev_form => 'H :/ B :/ ( L :* T )', :alpha => "HOBOLAT");
Formula.create( :base => '164', :offset => '001', :subindex => '0', :ord => '3', :iform => '143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )', :word_form => 'head :/ body :/ ( leg^2 :* tail )', :abbrev_form => 'H :/ B :/ ( L^2 :* T )', :alpha => "HOBOLUTAT");
Formula.create( :base => '164', :offset => '001', :subindex => 'a', :ord => '1', :iform => '{ 91.0:~:164.1 }', :word_form => '{ animal:~:rabbit }', :abbrev_form => '{ A:~:R }', :alpha => "AILAR");
Formula.create( :base => '164', :offset => '001', :subindex => 'a', :ord => '3', :iform => '10.1.d / 69.1 / 12.1', :word_form => 'Person-at-top / square-enclose-nothing / rev( person )^2', :abbrev_form => 'PAT / SEN / R( P )^2', :alpha => "PATOSENOROPUT");
Formula.create( :base => '164', :offset => '001', :subindex => 'a', :ord => '4', :iform => '10.1.d / 68.1 / 12.1', :word_form => 'Person-at-top / mouth / rev( person )^2', :abbrev_form => 'PAT / M / R( P )^2', :alpha => "PATOMOROPUT");
Formula.create( :base => '164', :offset => '001', :subindex => 'a', :ord => '5', :iform => '10.1.d / 69.1 / 12.1.a', :word_form => 'Person-at-top / square-enclose-nothing / spoon^2', :abbrev_form => 'PAT / SEN / S^2', :alpha => "PATOSENOSUT");
Formula.create( :base => '164', :offset => '001', :subindex => 'a', :ord => '6', :iform => '10.1.d / 68.1 / 12.1.a', :word_form => 'Person-at-top / mouth / spoon^2', :abbrev_form => 'PAT / M / S^2', :alpha => "PATOMOSUT");
Formula.create( :base => '164', :offset => '001', :subindex => 'a', :ord => '2', :iform => '143.0 :/ 147.0 :/ stack( 11.0.a ):^2', :word_form => 'head :/ body :/ stack:( leg ):^2', :abbrev_form => 'H :/ B :/ stack:( L ):^2', :alpha => "HOBOSOLUT");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '1', :iform => '41.3.a *\ 164.1', :word_form => 'stop-and-go *\ rabbit', :abbrev_form => 'SAG *\ R', :alpha => "SAGA-UR");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '2', :iform => '41.3.a *\ ( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b ))', :word_form => 'stop-and-go *\ ( head :/ body :/ ( legs :* tail ))', :abbrev_form => 'SAG *\ ( H :/ B :/ ( L :* T ))', :alpha => "SAGA-UHOBOLAT");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '3', :iform => '41.3.a *\ ( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b ))', :word_form => 'stop-and-go *\ ( head :/ body :/ ( leg^2 :* tail ))', :abbrev_form => 'SAG *\ ( H :/ B :/ ( L^2 :* T ))', :alpha => "SAGA-UHOBOLUTAT");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '4', :iform => '41.3.a *\ (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => 'stop-and-go *\ ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => 'SAG *\ ( R.( H :/ B :/ ( L :* T )))', :alpha => "SAGA-UREHOBOLAT");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '5', :iform => '41.3.a *\ (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => 'stop-and-go *\ ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => 'SAG *\ ( R.( H :/ B :/ ( L :* T )))', :alpha => "SAGA-UHOBOLATOR");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '6', :iform => '41.3.a *\ (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => 'stop-and-go *\ ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => 'SAG *\ ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "SAGA-UREHOBOLUTAT");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '7', :iform => '41.3.a *\ (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => 'stop-and-go *\ ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => 'SAG *\ ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "SAGA-UHOBOLUTATOR");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '8', :iform => '41.3.a *\ ( 10.1.d / 68.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => 'stop-and-go *\ ( Person-at-top / square-enclose-nothing +/ (( person:->legs ) *\ dot ))', :abbrev_form => 'SAG *\ ( PAT / SEN +/ (( P->L ) *\ D ))', :alpha => "SAGA-UPATOSENIOPYLAUD");
Formula.create( :base => '164', :offset => '002', :subindex => '0', :ord => '9', :iform => '41.3.a *\ ( 10.1.d / 69.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => 'stop-and-go *\ ( Person-at-top / mouth +/ (( person:->legs ) *\ dot ))', :abbrev_form => 'SAG *\ ( PAT / M +/ (( P->L ) *\ D ))', :alpha => "SAGA-UPATOMIOPYLAUD");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '1', :iform => '24.1 / 164.1', :word_form => 'cover / rabbit', :abbrev_form => 'C / R', :alpha => "COR");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '2', :iform => '24.1 / ( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b ))', :word_form => 'cover / ( head :/ body :/ ( legs :* tail ))', :abbrev_form => 'C / ( H :/ B :/ ( L :* T ))', :alpha => "COHOBOLAT");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '3', :iform => '24.1 / ( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b ))', :word_form => 'cover / ( head :/ body :/ ( leg^2 :* tail ))', :abbrev_form => 'C / ( H :/ B :/ ( L^2 :* T ))', :alpha => "COHOBOLUTAT");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '4', :iform => '24.1 / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => 'cover / ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => 'C / ( R.( H :/ B :/ ( L :* T )))', :alpha => "COREHOBOLAT");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '5', :iform => '24.1 / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => 'cover / ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => 'C / ( R.( H :/ B :/ ( L :* T )))', :alpha => "COHOBOLATOR");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '6', :iform => '24.1 / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => 'cover / ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => 'C / ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "COREHOBOLUTAT");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '7', :iform => '24.1 / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => 'cover / ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => 'C / ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "COHOBOLUTATOR");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '8', :iform => '24.1 / ( 10.1.d / 68.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => 'cover / ( Person-at-top / square-enclose-nothing +/ (( person:->legs ) *\ dot ))', :abbrev_form => 'C / ( PAT / SEN +/ (( P->L ) *\ D ))', :alpha => "COPATOSENIOPYLAUD");
Formula.create( :base => '164', :offset => '003', :subindex => '0', :ord => '9', :iform => '24.1 / ( 10.1.d / 69.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => 'cover / ( Person-at-top / mouth +/ (( person:->legs ) *\ dot ))', :abbrev_form => 'C / ( PAT / M +/ (( P->L ) *\ D ))', :alpha => "COPATOMIOPYLAUD");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '15', :iform => '( 10.1.d / 69.1 / 12.1 ) / ( 10.1.d / 69.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => '( Person-at-top / square-enclose-nothing / rev( person )^2 ) / ( Person-at-top / square-enclose-nothing +/ (( person:->legs ) *\ dot ))', :abbrev_form => '( PAT / SEN / R( P )^2 )( PAT / SEN / R( P )^2 ) / ( PAT / SEN +/ (( P->L ) *\ D ))', :alpha => "PATOSENOROPUTOPATOSENIOPYLAUD");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '16', :iform => '( 10.1.d / 69.1 / 12.1.a ) / ( 10.1.d / 69.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => '( Person-at-top / square-enclose-nothing / spoon^2 ) / ( Person-at-top / square-enclose-nothing +/ (( person:->legs ) *\ dot ))', :abbrev_form => '( PAT / SEN / S^2 ) / ( PAT / SEN +/ (( P->L ) *\ D ))', :alpha => "PATOSENOSUTOPATOSENIOPYLAUD");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '17', :iform => '( 10.1.d / 68.1 / 12.1 ) / ( 10.1.d / 68.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => '( Person-at-top / mouth / rev( person )^2 ) / ( Person-at-top / mouth +/ (( person:->legs ) *\ dot ))', :abbrev_form => '( PAT / M / R( P )^2 ) / ( PAT / M +/ (( P->L ) *\ D ))', :alpha => "PATOMOROPUTOPATOMIOPYLAUD");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '18', :iform => '( 10.1.d / 68.1 / 12.1.a ) / ( 10.1.d / 68.1 +/ (( 10.0 :->11.0 ) *\ 1.1.c ))', :word_form => '( Person-at-top / mouth / spoon^2 ) / ( Person-at-top / mouth +/ (( person:->legs ) *\ dot ))', :abbrev_form => '( PAT / M / S^2 ) / ( PAT / M +/ (( P->L ) *\ D ))', :alpha => "PATOMOSUTOPATOMIOPYLAUD");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '8', :iform => '( 143.0 :/ 147.0 :/ stack( 11.0.a ):^2 ) / 164.1', :word_form => '( head :/ body :/ stack:( leg ):^2 ) / rabbit', :abbrev_form => '( H :/ B :/ stack:( L ):^2 ) / R', :alpha => "HOBOSOLUTOR");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '9', :iform => '( 143.0 :/ 147.0 :/ stack( 11.0.a ):^2 ) / ( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b ))', :word_form => '( head :/ body :/ stack:( leg ):^2 ) / ( head :/ body :/ ( legs :* tail ))', :abbrev_form => '( H :/ B :/ stack:( L ):^2 ) / ( H :/ B :/ ( L :* T ))', :alpha => "HOBOSOLUTOHOBOLAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '10', :iform => '( 143.0 :/ 147.0 :/ stack( 11.0.a ):^2 ) / ( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b ))', :word_form => '( head :/ body :/ stack:( leg ):^2 ) / ( head :/ body :/ ( leg^2 :* tail ))', :abbrev_form => '( H :/ B :/ stack:( L ):^2 ) / ( H :/ B :/ ( L^2 :* T ))', :alpha => "HOBOSOLUTOHOBOLUTAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '11', :iform => '( 143.0 :/ 147.0 :/ stack( 11.0.a ):^2 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => '( head :/ body :/ stack:( leg ):^2 ) / ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => '( H :/ B :/ stack:( L ):^2 ) / ( R.( H :/ B :/ ( L :* T )))', :alpha => "HOBOSOLUTOREHOBOLAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '12', :iform => '( 143.0 :/ 147.0 :/ stack( 11.0.a ):^2 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => '( head :/ body :/ stack:( leg ):^2 ) / ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => '( H :/ B :/ stack:( L ):^2 ) / ( R.( H :/ B :/ ( L :* T )))', :alpha => "HOBOSOLUTOHOBOLATOR");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '13', :iform => '( 143.0 :/ 147.0 :/ stack( 11.0.a ):^2 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => '( head :/ body :/ stack:( leg ):^2 ) / ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => '( H :/ B :/ stack:( L ):^2 ) / ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "HOBOSOLUTOREHOBOLUTAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '14', :iform => '( 143.0 :/ 147.0 :/ stack( 11.0.a ):^2 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => '( head :/ body :/ stack:( leg ):^2 ) / ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => '( H :/ B :/ stack:( L ):^2 ) / ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "HOBOSOLUTOHOBOLUTATOR");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '1', :iform => '( 91.0:~:164.1 ) / 164.1', :word_form => '( animal:~:rabbit ) / rabbit', :abbrev_form => '( A:~:R ) / R', :alpha => "AILAROR");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 91.0:~:164.1 ) / ( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b ))', :word_form => '( animal:~:rabbit ) / ( head :/ body :/ ( legs :* tail ))', :abbrev_form => '( A:~:R ) / ( H :/ B :/ ( L :* T ))', :alpha => "AILAROHOBOLAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 91.0:~:164.1 ) / ( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b ))', :word_form => '( animal:~:rabbit ) / ( head :/ body :/ ( leg^2 :* tail ))', :abbrev_form => '( A:~:R ) / ( H :/ B :/ ( L^2 :* T ))', :alpha => "AILAROHOBOLUTAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 91.0:~:164.1 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => '( animal:~:rabbit ) / ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => '( A:~:R ) / ( R.( H :/ B :/ ( L :* T )))', :alpha => "AILAROREHOBOLAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '5', :iform => '( 91.0:~:164.1 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0 :* 178.0.b )))', :word_form => '( animal:~:rabbit ) / ( Rabbit.( head :/ body :/ ( legs :* tail )))', :abbrev_form => '( A:~:R ) / ( R.( H :/ B :/ ( L :* T )))', :alpha => "AILAROHOBOLATOR");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '6', :iform => '( 91.0:~:164.1 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => '( animal:~:rabbit ) / ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => '( A:~:R ) / ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "AILAROREHOBOLUTAT");
Formula.create( :base => '164', :offset => '004', :subindex => '0', :ord => '7', :iform => '( 91.0:~:164.1 ) / (( 164.0 ).( 143.0 :/ 147.0 :/ ( 11.0.a^2 :* 178.0.b )))', :word_form => '( animal:~:rabbit ) / ( Rabbit.( head :/ body :/ ( leg^2 :* tail )))', :abbrev_form => '( A:~:R ) / ( R.( H :/ B :/ ( L^2 :* T )))', :alpha => "AILAROHOBOLUTATOR");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '3', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ 11.0 )', :word_form => 'Rabbit.( head :/ body :/ legs', :abbrev_form => 'R.( H :/ B :/ L )', :alpha => "REHOBOL");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '4', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ 11.0 )', :word_form => 'Rabbit.( head :/ body :/ legs', :abbrev_form => 'R.( H :/ B :/ L )', :alpha => "HOBOLOR");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '5', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ 11.0.a^2 )', :word_form => 'Rabbit.( head :/ body :/ leg^2 )', :abbrev_form => 'R.( H :/ B :/ L^2 )', :alpha => "REHOBOLUT");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '6', :iform => '( 164.0 ).( 143.0 :/ 147.0 :/ 11.0.a^2 )', :word_form => 'Rabbit.( head :/ body :/ leg^2 )', :abbrev_form => 'R.( H :/ B :/ L^2 )', :alpha => "HOBOLUTOR");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '7', :iform => '10.1.d / 69.1 +/ ( 10.0 :->11.0 )', :word_form => 'Person-at-top / square-enclose-nothing +/ ( person:->legs )', :abbrev_form => 'PAT / SEN +/ ( P->L )', :alpha => "PATOSENIOPYL");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '8', :iform => '10.1.d / 68.1 +/ ( 10.0 :->11.0 )', :word_form => 'Person-at-top / mouth +/ ( person:->legs )', :abbrev_form => 'PAT / M +/ ( P->L )', :alpha => "PATOMIOPYL");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '1', :iform => '143.0 :/ 147.0 :/ 11.0', :word_form => 'head :/ body :/ legs', :abbrev_form => 'H :/ B :/ L ', :alpha => "HOBOL");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '2', :iform => '143.0 :/ 147.0 :/ 11.0.a^2', :word_form => 'head :/ body :/ leg^2', :abbrev_form => 'H :/ B :/ L^2', :alpha => "HOBOLUT");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '9', :iform => '35.1 / 69.1 +/ ( 10.0 :->11.0 )', :word_form => 'knife / square-enclose-nothing +/ ( person:->legs )', :abbrev_form => 'K / SEN +/ ( P->L )', :alpha => "KOSENIOPYL");
Formula.create( :base => '164', :offset => '007', :subindex => '0', :ord => '10', :iform => '35.1 / 68.1 +/ ( 10.0 :->11.0 )', :word_form => 'knife / mouth +/ ( person:->legs )', :abbrev_form => 'K / M +/ ( P->L )', :alpha => "KOMIOPYL");
Formula.create( :base => '165', :offset => '000', :subindex => '0', :ord => '1', :iform => '165.0', :word_form => 'abstract( "phoenix" ) ', :abbrev_form => 'A( P )', :alpha => "AP");
Formula.create( :base => '165', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 178.0:~:165.0 }', :word_form => '{ bird:~:phoenix }', :abbrev_form => '{ B:~:P }', :alpha => "BILAP");
Formula.create( :base => '165', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 178.0:~:165.0 )->80.1^2', :word_form => '( bird:~:phoenix )->moon^2', :abbrev_form => '( B:~:P )->M^2', :alpha => "BILAPYMUT");
Formula.create( :base => '165', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 178.0:~:165.0 )->(  80.0:->80.0.a )^2', :word_form => '( bird:~:phoenix )->( moon:->crescent )^2', :abbrev_form => '( B:~:P )->( M:->C )^2', :alpha => "BILAPYMYCUT");
Formula.create( :base => '165', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 178.0:~:165.0 ) * ((178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => '( bird:~:phoenix ) * ( Bird:<.( tail:long ))', :abbrev_form => '( B:~:P ) * ( B:<.( T:L ))', :alpha => "BILAPABITIL");
Formula.create( :base => '165', :offset => '002', :subindex => '0', :ord => '3', :iform => '(( 178.0:~:165.0 )->80.1^2 ) * ((178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => '(( bird:~:phoenix )->moon^2 ) * ( Bird:<.( tail:long ))', :abbrev_form => '(( B:~:P )->M^2 ) * ( B:<.( T:L ))', :alpha => "BILAPYMUTABITIL");
Formula.create( :base => '165', :offset => '002', :subindex => '0', :ord => '4', :iform => '(( 178.0:~:165.0 )->(  80.0:->80.0.a )^2 ) * ((178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => '(( bird:~:phoenix )->( moon:->crescent )^2 ) * ( Bird:<.( tail:long ))', :abbrev_form => '(( B:~:P )->( M:->C )^2 ) * ( B:<.( T:L ))', :alpha => "BILAPYMYCUTABITIL");
Formula.create( :base => '165', :offset => '002', :subindex => '0', :ord => '1', :iform => '165.1 * ((178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => 'phoenix * ( Bird:<.( tail:long ))', :abbrev_form => 'P * ( B:<.( T:L ))', :alpha => "PABITIL");
Formula.create( :base => '165', :offset => '003', :subindex => '0', :ord => '1', :iform => '( 77.0->77.0.a ) * 165.1', :word_form => '( tree->wood ) * phoenix', :abbrev_form => '( T->W ) * P', :alpha => "TYWAP");
Formula.create( :base => '165', :offset => '003', :subindex => '0', :ord => '2', :iform => '( 77.0->77.0.a ) * ( 178.0:~:165.0 )', :word_form => '( tree->wood ) * ( bird:~:phoenix )', :abbrev_form => '( T->W ) * ( B:~:P )', :alpha => "TYWABILAP");
Formula.create( :base => '165', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 77.0->77.0.a ) * (( 178.0:~:165.0 )->80.1^2 )', :word_form => '( tree->wood ) * (( bird:~:phoenix )->moon^2 )', :abbrev_form => '( T->W ) * (( B:~:P )->M^2 )', :alpha => "TYWABILAPYMUT");
Formula.create( :base => '165', :offset => '003', :subindex => '0', :ord => '4', :iform => '( 77.0->77.0.a ) * (( 178.0:~:165.0 )->(  80.0:->80.0.a )^2 )', :word_form => '( tree->wood ) * (( bird:~:phoenix )->( moon:->crescent )^2 )', :abbrev_form => '( T->W ) * (( B:~:P )->( M:->C )^2 )', :alpha => "TYWABILAPYMYCUT");
Formula.create( :base => '165', :offset => '004', :subindex => '0', :ord => '1', :iform => '67.1 / 165.1', :word_form => 'mountain / phoenix', :abbrev_form => 'M / P', :alpha => "MOP");
Formula.create( :base => '165', :offset => '004', :subindex => '0', :ord => '2', :iform => '67.1 / ( 178.0:~:165.0 )', :word_form => 'Mountain / ( bird:~:phoenix )', :abbrev_form => 'M / ( B:~:P )', :alpha => "MOBILAP");
Formula.create( :base => '165', :offset => '004', :subindex => '0', :ord => '3', :iform => '67.1 / (( 178.0:~:165.0 )->80.1^2 )', :word_form => 'Mountain / (( bird:~:phoenix )->moon^2 )', :abbrev_form => 'M / (( B:~:P )->M^2 )', :alpha => "MOBILAPYMUT");
Formula.create( :base => '165', :offset => '004', :subindex => '0', :ord => '4', :iform => '67.1 / (( 178.0:~:165.0 )->(  80.0:->80.0.a )^2 )', :word_form => 'Mountain / (( bird:~:phoenix )->( moon:->crescent )^2 )', :abbrev_form => 'M / (( B:~:P )->( M:->C )^2 )', :alpha => "MOBILAPYMYCUT");
Formula.create( :base => '166', :offset => '000', :subindex => 'a', :ord => '1', :iform => '166.0.a', :word_form => 'abstract( "deform" ) ', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '166', :offset => '000', :subindex => 'b', :ord => '1', :iform => '166.0.b', :word_form => 'abstract( "deformed" ) ', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '166', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 10.0 ):( 166.0.a )', :word_form => 'person:deformed', :abbrev_form => 'P:D', :alpha => "PID");
Formula.create( :base => '166', :offset => '001', :subindex => '0', :ord => '2', :iform => '::( 166.0.a ):>( 10.0 )', :word_form => '::deform:>person', :abbrev_form => '::D:>P', :alpha => "DOP");
Formula.create( :base => '166', :offset => '001', :subindex => '0', :ord => '4', :iform => '1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b', :word_form => 'heaven / ( person:deformed ) / ground', :abbrev_form => 'H / ( P:D ) / G', :alpha => "HOPIDOG");
Formula.create( :base => '166', :offset => '001', :subindex => '0', :ord => '5', :iform => '1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b', :word_form => 'heaven / ( person:deformed ) / surface', :abbrev_form => 'H / ( P:D ) / S', :alpha => "HOPIDOS");
Formula.create( :base => '166', :offset => '001', :subindex => '0', :ord => '6', :iform => '1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b', :word_form => 'heaven / ( ::deform:>person ) / ground', :abbrev_form => 'H / ( ::D:>P ) / G', :alpha => "HODOPOG");
Formula.create( :base => '166', :offset => '001', :subindex => '0', :ord => '7', :iform => '1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b', :word_form => 'heaven / ( ::deform:>person ) / surface', :abbrev_form => 'H / ( ::D:>P ) / S', :alpha => "HODOPOS");
Formula.create( :base => '166', :offset => '001', :subindex => '0', :ord => '1', :iform => '166.1', :word_form => '{ "deformed person" }', :abbrev_form => 'I', :alpha => "I");
Formula.create( :base => '166', :offset => '001', :subindex => 's', :ord => '2', :iform => '1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b', :word_form => 'heaven / ( divide {} post^2 ) / ground', :abbrev_form => 'H / ( D {} P^2 ) / G', :alpha => "HODEPUTOG");
Formula.create( :base => '166', :offset => '001', :subindex => 's', :ord => '3', :iform => '1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b', :word_form => 'heaven / ( divide {} post^2 ) / surface', :abbrev_form => 'H / ( D {} P^2 ) / S', :alpha => "HODEPUTOS");
Formula.create( :base => '166', :offset => '001', :subindex => 's', :ord => '1', :iform => '1.2 /\ ( 29.1 {} 4.1^2 )', :word_form => 'Two /\ ( divide {} post^2 )', :abbrev_form => 'T /\ ( D {} P^2 )', :alpha => "TO-UDEPUT");
Formula.create( :base => '166', :offset => '002', :subindex => '0', :ord => '1', :iform => '68.1 * ( 166.1 )', :word_form => 'Mouth * inferior', :abbrev_form => 'M * I', :alpha => "MAI");
Formula.create( :base => '166', :offset => '002', :subindex => '0', :ord => '3', :iform => '68.1 * ( ::( 166.0.a ):>( 10.0 ))', :word_form => 'Mouth * ( ::deform:>person )', :abbrev_form => 'M * ( ::D:>P )', :alpha => "MADOP");
Formula.create( :base => '166', :offset => '002', :subindex => '0', :ord => '5', :iform => '68.1 * (( 10.0 ):( 166.0.a ))', :word_form => 'Mouth * ( person:deformed )', :abbrev_form => 'M * ( P:D )', :alpha => "MAPID");
Formula.create( :base => '166', :offset => '002', :subindex => '0', :ord => '7', :iform => '68.1 * ( 1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b )', :word_form => 'Mouth * ( heaven / ( person:deformed ) / ground )', :abbrev_form => 'M * ( H / ( P:D ) / G )', :alpha => "MAHOPIDOG");
Formula.create( :base => '166', :offset => '002', :subindex => '0', :ord => '9', :iform => '68.1 * ( 1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b )', :word_form => 'Mouth * ( heaven / ( person:deformed ) / surface )', :abbrev_form => 'M * ( H / ( P:D ) / S )', :alpha => "MAHOPIDOS");
Formula.create( :base => '166', :offset => '002', :subindex => '0', :ord => '11', :iform => '68.1 * ( 1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b )', :word_form => 'Mouth * ( heaven / ( ::deform:>person ) / ground )', :abbrev_form => 'M * ( H / ( ::D:>P ) / G )', :alpha => "MAHODOPOG");
Formula.create( :base => '166', :offset => '002', :subindex => '0', :ord => '13', :iform => '68.1 * ( 1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b )', :word_form => 'Mouth * ( heaven / ( ::deform:>person ) / surface )', :abbrev_form => 'M * ( H / ( ::D:>P ) / S )', :alpha => "MAHODOPOS");
Formula.create( :base => '166', :offset => '002', :subindex => 's', :ord => '1', :iform => '68.1 * ( 1.2 /\ ( 29.1 {} 4.1^2 ))', :word_form => 'Mouth * ( Two /\ ( divide {} post^2 ))', :abbrev_form => 'M * ( T /\ ( D {} P^2 ))', :alpha => "MATO-UDEPUT");
Formula.create( :base => '166', :offset => '002', :subindex => 's', :ord => '3', :iform => '68.1 * ( 1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b )', :word_form => 'Mouth * ( heaven / ( divide {} post^2 ) / ground )', :abbrev_form => 'M * ( H / ( D {} P^2 ) / G )', :alpha => "MAHODEPUTOG");
Formula.create( :base => '166', :offset => '002', :subindex => 's', :ord => '5', :iform => '68.1 * ( 1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b )', :word_form => 'Mouth * ( heaven / ( divide {} post^2 ) / surface )', :abbrev_form => 'M * ( H / ( D {} P^2 ) / S )', :alpha => "MAHODEPUTOS");
Formula.create( :base => '166', :offset => '003', :subindex => '0', :ord => '4', :iform => '( ::( 166.0.a ):>( 10.0 )) / 83.1', :word_form => '( ::deform:>person ) / heart-is-open', :abbrev_form => '( ::D:>P ) / HIO', :alpha => "DOPOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => '0', :ord => '7', :iform => '(( 10.0 ):( 166.0.a )) / 83.1', :word_form => '( person:deformed ) / heart-is-open', :abbrev_form => '( P:D ) / HIO', :alpha => "PIDOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => '0', :ord => '10', :iform => '( 1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b ) / 83.1', :word_form => '( heaven / ( person:deformed ) / ground ) / heart-is-open', :abbrev_form => '( H / ( P:D ) / G ) / HIO', :alpha => "HOPIDOGOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => '0', :ord => '13', :iform => '( 1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b ) / 83.1', :word_form => '( heaven / ( person:deformed ) / surface ) / heart-is-open', :abbrev_form => '( H / ( P:D ) / S ) / HIO', :alpha => "HOPIDOSOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => '0', :ord => '16', :iform => '( 1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b ) / 83.1', :word_form => '( heaven / ( ::deform:>person ) / ground ) / heart-is-open', :abbrev_form => '( H / ( ::D:>P ) / G ) / HIO', :alpha => "HODOPOGOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => '0', :ord => '19', :iform => '( 1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b ) / 83.1', :word_form => '( heaven / ( ::deform:>person ) / surface ) / heart-is-open', :abbrev_form => '( H / ( ::D:>P ) / S ) / HIO', :alpha => "HODOPOSOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => '0', :ord => '1', :iform => '( 166.1 ) / 83.1', :word_form => 'inferior / heart-is-open', :abbrev_form => 'I / HIO', :alpha => "IOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => 's', :ord => '4', :iform => '( 1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b ) / 83.1', :word_form => '( heaven / ( divide {} post^2 ) / ground ) / heart-is-open', :abbrev_form => '( H / ( D {} P^2 ) / G ) / HIO', :alpha => "HODEPUTOGOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => 's', :ord => '7', :iform => '( 1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b ) / 83.1', :word_form => '( heaven / ( divide {} post^2 ) / surface ) / heart-is-open', :abbrev_form => '( H / ( D {} P^2 ) / S ) / HIO', :alpha => "HODEPUTOSOHIO");
Formula.create( :base => '166', :offset => '003', :subindex => 's', :ord => '1', :iform => '( 1.2 /\ ( 29.1 {} 4.1^2 )) / 83.1', :word_form => '( Two /\ ( divide {} post^2 )) / heart-is-open', :abbrev_form => '( T /\ ( D {} P^2 )) / HIO', :alpha => "TO-UDEPUTOHIO");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '2', :iform => '{ 24.0.a :/ 141.0.a }', :word_form => '{ lid :/ pot }', :abbrev_form => '{ L :/ P }', :alpha => "LOP");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '3', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( 166.1 ))', :word_form => '( lid->scholar ) / ( pot->inferior )', :abbrev_form => '( L->S ) / ( P->I )', :alpha => "LYSOPYI");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '4', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( ::( 166.0.a ):>( 10.0 )))', :word_form => '( lid->scholar ) / ( pot->( ::deform:>person ))', :abbrev_form => '( L->S ) / ( P->( ::D:>P ))', :alpha => "LYSOPYDOP");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '5', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->(( 10.0 ):( 166.0.a )))', :word_form => '( lid->scholar ) / ( pot->( person:deformed ))', :abbrev_form => '( L->S ) / ( P->( P:D ))', :alpha => "LYSOPYPID");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '6', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( 24.1 / (( 10.0 ):( 166.0.a )) / 1.1.b ))', :word_form => '( lid->scholar ) / ( pot->( cover / ( person:deformed ) / ground ))', :abbrev_form => '( L->S ) / ( P->( C / ( P:D ) / G ))', :alpha => "LYSOPYCOPIDOG");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '7', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( 24.1 / (( 10.0 ):( 166.0.a )) / 1.1.b ))', :word_form => '( lid->scholar ) / ( pot->( cover / ( person:deformed ) / surface ))', :abbrev_form => '( L->S ) / ( P->( C / ( P:D ) / S ))', :alpha => "LYSOPYCOPIDOS");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '8', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( 24.1 / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b ))', :word_form => '( lid->scholar ) / ( pot->( cover / ( ::deform:>person ) / ground ))', :abbrev_form => '( L->S ) / ( P->( C / ( ::D:>P ) / G ))', :alpha => "LYSOPYCODOPOG");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '9', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( 24.1 / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b ))', :word_form => '( lid->scholar ) / ( pot->( cover / ( ::deform:>person ) / surface ))', :abbrev_form => '( L->S ) / ( P->( C / ( ::D:>P ) / S ))', :alpha => "LYSOPYCODOPOS");
Formula.create( :base => '166', :offset => '004', :subindex => '0', :ord => '1', :iform => '166.4', :word_form => '{ "pot with lid" }', :abbrev_form => 'P', :alpha => "P");
Formula.create( :base => '166', :offset => '004', :subindex => 's', :ord => '1', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( 24.1 / ( 29.1 {} 4.1^2 ) / 1.1.b ))', :word_form => '( lid->scholar ) / ( pot->( cover / ( divide {} post^2 ) / ground ))', :abbrev_form => '( L->S ) / ( P->( C / ( D {} P^2 ) / G ))', :alpha => "LYSOPYCODEPUTOG");
Formula.create( :base => '166', :offset => '004', :subindex => 's', :ord => '2', :iform => '(( 24.0.a )->( 31.2 )) / (( 141.0.a )->( 24.1 / ( 29.1 {} 4.1^2 ) / 1.1.b ))', :word_form => '( lid->scholar ) / ( pot->( cover / ( divide {} post^2 ) / surface ))', :abbrev_form => '( L->S ) / ( P->( C / ( D {} P^2 ) / S ))', :alpha => "LYSOPYCODEPUTOS");
Formula.create( :base => '166', :offset => '006', :subindex => '0', :ord => '1', :iform => '( 77.0->77.0.a ) * ( 166.1 )', :word_form => '( tree->wood ) * inferior', :abbrev_form => '( T->W ) * I', :alpha => "TYWAI");
Formula.create( :base => '166', :offset => '006', :subindex => '0', :ord => '2', :iform => '( 77.0->77.0.a ) * ( ::( 166.0.a ):>( 10.0 ))', :word_form => '( tree->wood ) * ( ::deform:>person )', :abbrev_form => '( T->W ) * ( ::D:>P )', :alpha => "TYWADOP");
Formula.create( :base => '166', :offset => '006', :subindex => '0', :ord => '3', :iform => '( 77.0->77.0.a ) * (( 10.0 ):( 166.0.a ))', :word_form => '( tree->wood ) * ( person:deformed )', :abbrev_form => '( T->W ) * ( P:D )', :alpha => "TYWAPID");
Formula.create( :base => '166', :offset => '006', :subindex => '0', :ord => '4', :iform => '( 77.0->77.0.a ) * ( 1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b )', :word_form => '( tree->wood ) * ( heaven / ( person:deformed ) / ground )', :abbrev_form => '( T->W ) * ( H / ( P:D ) / G )', :alpha => "TYWAHOPIDOG");
Formula.create( :base => '166', :offset => '006', :subindex => '0', :ord => '5', :iform => '( 77.0->77.0.a ) * ( 1.1.g / (( 10.0 ):( 166.0.a )) / 1.1.b )', :word_form => '( tree->wood ) * ( heaven / ( person:deformed ) / surface )', :abbrev_form => '( T->W ) * ( H / ( P:D ) / S )', :alpha => "TYWAHOPIDOS");
Formula.create( :base => '166', :offset => '006', :subindex => '0', :ord => '6', :iform => '( 77.0->77.0.a ) * ( 1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b )', :word_form => '( tree->wood ) * ( heaven / ( ::deform:>person ) / ground )', :abbrev_form => '( T->W ) * ( H / ( ::D:>P ) / G )', :alpha => "TYWAHODOPOG");
Formula.create( :base => '166', :offset => '006', :subindex => '0', :ord => '7', :iform => '( 77.0->77.0.a ) * ( 1.1.g / ( ::( 166.0.a ):>( 10.0 )) / 1.1.b )', :word_form => '( tree->wood ) * ( heaven / ( ::deform:>person ) / surface )', :abbrev_form => '( T->W ) * ( H / ( ::D:>P ) / S )', :alpha => "TYWAHODOPOS");
Formula.create( :base => '166', :offset => '006', :subindex => 's', :ord => '1', :iform => '( 77.0->77.0.a ) * ( 1.2 /\ ( 29.1 {} 4.1^2 ))', :word_form => '( tree->wood ) * ( Two /\ ( divide {} post^2 ))', :abbrev_form => '( T->W ) * ( T /\ ( D {} P^2 ))', :alpha => "TYWATO-UDEPUT");
Formula.create( :base => '166', :offset => '006', :subindex => 's', :ord => '2', :iform => '( 77.0->77.0.a ) * ( 1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b )', :word_form => '( tree->wood ) * ( heaven / ( divide {} post^2 ) / ground )', :abbrev_form => '( T->W ) * ( H / ( D {} P^2 ) / G )', :alpha => "TYWAHODEPUTOG");
Formula.create( :base => '166', :offset => '006', :subindex => 's', :ord => '3', :iform => '( 77.0->77.0.a ) * ( 1.1.g / ( 29.1 {} 4.1^2 ) / 1.1.b )', :word_form => '( tree->wood ) * ( heaven / ( divide {} post^2 ) / surface )', :abbrev_form => '( T->W ) * ( H / ( D {} P^2 ) / S )', :alpha => "TYWAHODEPUTOS");
Formula.create( :base => '167', :offset => '000', :subindex => '0', :ord => '1', :iform => '167.0', :word_form => 'abstract( "hill" ) ', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '167', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 167.0 ):<.( col( 41.0.a ))', :word_form => 'Hill:<.( col( stairstep ))', :abbrev_form => 'H:<.( C( SS ))', :alpha => "HICOSS");
Formula.create( :base => '167', :offset => '001', :subindex => '0', :ord => '1', :iform => '167.1', :word_form => '{ "three steps" }', :abbrev_form => 'H', :alpha => "H");
Formula.create( :base => '167', :offset => '001', :subindex => '0', :ord => '4', :iform => '21.1 #*/ col( 41.0.a )', :word_form => 'cliff #*/ col( stairstep )', :abbrev_form => 'C #*/ C( SS )', :alpha => "COLAOCOSS");
Formula.create( :base => '167', :offset => '001', :subindex => '0', :ord => '5', :iform => '21.1 #*/ col( 68.1 )', :word_form => 'cliff #*/ col( openings )', :abbrev_form => 'C #*/ C( O )', :alpha => "COLAOCO-O");
Formula.create( :base => '167', :offset => '001', :subindex => '0', :ord => '6', :iform => '21.1 #*/ stack( 41.0.a ) / 31.1', :word_form => 'cliff #*/ stack( stairstep ) / ten', :abbrev_form => 'C #*/ S( SS ) / T', :alpha => "COLAOSOSSOT");
Formula.create( :base => '167', :offset => '001', :subindex => '0', :ord => '7', :iform => '21.1 #*/ stack( 68.1 ) / 31.1', :word_form => 'cliff #*/ stack( openings ) / ten', :abbrev_form => 'C #*/ S( O ) / T', :alpha => "COLAOSO-O'OT");
Formula.create( :base => '167', :offset => '001', :subindex => 'a', :ord => '1', :iform => '167.1->33.18.a', :word_form => 'hill->beta', :abbrev_form => 'H->B', :alpha => "HYB");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '1', :iform => '70.1 * 167.1', :word_form => 'Earth * Taller-hill', :abbrev_form => 'E * TH', :alpha => "E-ATH");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '2', :iform => '70.1 * (( 167.0 ):<.( col( 41.0.a )))', :word_form => 'Earth * ( Hill:<.( col( stairstep )))', :abbrev_form => 'E * ( H:<.( C( SS )))', :alpha => "E-AHICOSS");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '3', :iform => '70.1 * ( 21.1 #*/ col( 41.0.a ))', :word_form => 'Earth * ( cliff #*/ col( stairstep ))', :abbrev_form => 'E * ( C #*/ C( SS )) ', :alpha => "E-ACOLAOCOSS");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '4', :iform => '70.1 * ( 21.1 #*/ col( 68.1 ))', :word_form => 'Earth * ( cliff #*/ col( openings ))', :abbrev_form => 'E * ( C #*/ C( O )) ', :alpha => "E-ACOLAOCO-O");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '5', :iform => '70.1 * ( 21.1 #*/ stack( 41.0.a ) / 31.1 )', :word_form => 'Earth * ( cliff #*/ stack( stairstep ) / ten )', :abbrev_form => 'E * ( C #*/ S( SS ) / T ) ', :alpha => "E-ACOLAOSOSSOT");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '6', :iform => '70.1 * ( 21.1 #*/ stack( 68.1 ) / 31.1 )', :word_form => 'Earth * ( cliff #*/ stack( openings ) / ten )', :abbrev_form => 'E * ( C #*/ S( O ) / T ) ', :alpha => "E-ACOLAOSO-O'OT");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '7', :iform => '70.1 * 167.1', :word_form => 'ground * Taller-hill', :abbrev_form => 'G * TH', :alpha => "GATH");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '8', :iform => '70.1 * (( 167.0 ):<.( col( 41.0.a )))', :word_form => 'ground * ( Hill:<.( col( stairstep )))', :abbrev_form => 'G * ( H:<.( C( SS )))', :alpha => "GAHICOSS");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '9', :iform => '70.1 * ( 21.1 #*/ col( 41.0.a ))', :word_form => 'ground * ( cliff #*/ col( stairstep ))', :abbrev_form => 'G * ( C #*/ C( SS )) ', :alpha => "GACOLAOCOSS");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '10', :iform => '70.1 * ( 21.1 #*/ col( 68.1 ))', :word_form => 'ground * ( cliff #*/ col( openings ))', :abbrev_form => 'G * ( C #*/ C( O )) ', :alpha => "GACOLAOCO-O");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '11', :iform => '70.1 * ( 21.1 #*/ stack( 41.0.a ) / 31.1 )', :word_form => 'ground * ( cliff #*/ stack( stairstep ) / ten )', :abbrev_form => 'G * ( C #*/ S( SS ) / T ) ', :alpha => "GACOLAOSOSSOT");
Formula.create( :base => '167', :offset => '002', :subindex => '0', :ord => '12', :iform => '70.1 * ( 21.1 #*/ stack( 68.1 ) / 31.1 )', :word_form => 'ground * ( cliff #*/ stack( openings ) / ten )', :abbrev_form => 'G * ( C #*/ S( O ) / T ) ', :alpha => "GACOLAOSO-O'OT");
Formula.create( :base => '167', :offset => '003', :subindex => '0', :ord => '1', :iform => '( 21.1 #*/ stack( 41.0.a )', :word_form => '( cliff #*/ stack( stairstep ))', :abbrev_form => '( C #*/ S( SS )) ', :alpha => "COLAOSOSS");
Formula.create( :base => '167', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 21.1 #*/ stack( 68.1 )', :word_form => '( cliff #*/ stack( openings ))', :abbrev_form => '( C #*/ S( O )) ', :alpha => "COLAOSO-O");
Formula.create( :base => '168', :offset => '001', :subindex => '0', :ord => '1', :iform => '168.1', :word_form => '{"plant with diverging stems" }', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '168', :offset => '001', :subindex => '0', :ord => '2', :iform => 'opposed( col( 22.1 ) * 4.1 ) / 1.1.b', :word_form => 'opposed( col( corner ) * post ) / ground', :abbrev_form => 'O( C( C ) * P ) / G', :alpha => "OCOCAPOG");
Formula.create( :base => '168', :offset => '001', :subindex => '0', :ord => '3', :iform => 'opposed( col( 22.1 ) * 4.1 ) / 1.1.a', :word_form => 'opposed( col( corner ) * post ) / dash', :abbrev_form => 'O( C( C ) * P ) / D', :alpha => "OCOCAPOD");
Formula.create( :base => '168', :offset => '002', :subindex => '0', :ord => '2', :iform => '( opposed( col( 22.1 ) * 4.1 ) / 1.1.b ) \* ( 10.7 /* 45.2 )', :word_form => '( opposed( col( corner ) * post ) / ground ) \* ( Follow /* dagger-ax )', :abbrev_form => '( O( C( C ) * P ) / G ) \* ( F /* DA )', :alpha => "OCOCAPOGUAFO-ADA");
Formula.create( :base => '168', :offset => '002', :subindex => '0', :ord => '3', :iform => '( opposed( col( 22.1 ) * 4.1 ) / 1.1.a ) \* ( 10.7 /* 45.2 )', :word_form => '( opposed( col( corner ) * post ) / dash ) \* ( Follow /* dagger-ax )', :abbrev_form => '( O( C( C ) * P ) / D ) \* ( F /* DA )', :alpha => "OCOCAPODUAFO-ADA");
Formula.create( :base => '168', :offset => '002', :subindex => '0', :ord => '5', :iform => '( opposed( col( 22.1 ) * 4.1 ) / 1.1.b ) \* ( 10.7 /* 45.2 )', :word_form => '( opposed( col( corner ) * post ) / ground ) \* (( person^2 ) /* dagger-ax )', :abbrev_form => '( O( C( C ) * P ) / G ) \* (( P^2 ) /* DA )', :alpha => "OCOCAPOGUAPUTO-ADA");
Formula.create( :base => '168', :offset => '002', :subindex => '0', :ord => '6', :iform => '( opposed( col( 22.1 ) * 4.1 ) / 1.1.a ) \* ( 10.7 /* 45.2 )', :word_form => '( opposed( col( corner ) * post ) / dash ) \* (( person^2 ) /* dagger-ax )', :abbrev_form => '( O( C( C ) * P ) / D ) \* (( P^2 ) /* DA )', :alpha => "OCOCAPODUAPUTO-ADA");
Formula.create( :base => '168', :offset => '002', :subindex => '0', :ord => '1', :iform => '168.1 \* ( 10.7 /* 45.2 )', :word_form => 'chives \* ( Follow /* dagger-ax )', :abbrev_form => 'C \* ( F /* DA )', :alpha => "CUAFO-ADA");
Formula.create( :base => '168', :offset => '002', :subindex => '0', :ord => '4', :iform => '168.1 \* ( 10.7 /* 45.2 )', :word_form => 'chives \* (( person^2 ) /* dagger-ax )', :abbrev_form => 'C \* (( P^2 ) /* DA )', :alpha => "CUAPUTO-ADA");
Formula.create( :base => '169', :offset => '000', :subindex => '0', :ord => '1', :iform => '169.0', :word_form => 'abstract( "fly" ) ', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '169', :offset => '000', :subindex => 'a', :ord => '1', :iform => '169.0.a', :word_form => 'abstract( "raise" ) ', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '169', :offset => '000', :subindex => 'b', :ord => '1', :iform => '169.0.b', :word_form => 'abstract( "spread" ) ', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '169', :offset => '001', :subindex => '0', :ord => '1', :iform => '169.1', :word_form => '{ "crane flying with feathers spread out" }', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '169', :offset => '001', :subindex => '0', :ord => '3', :iform => '178.0.e::169.0: :*:( 124.0:169.0.b )', :word_form => 'crane::fly: :*:( feathers:Spread-out )', :abbrev_form => 'C::F: :*:( F:SO )', :alpha => "CAFIWAFISO");
Formula.create( :base => '169', :offset => '001', :subindex => '0', :ord => '4', :iform => '178.0.e::169.0: :*:( 124.0:169.0.b )', :word_form => 'crane::fly: :*:( feathers:Spread-out )', :abbrev_form => 'C::F: :*:( F:SO )', :alpha => "CAFIWIFISO");
Formula.create( :base => '169', :offset => '001', :subindex => '0', :ord => '5', :iform => '178.0.e::169.0:*:( 124.0:169.0.b )', :word_form => 'crane::fly:*:( feathers:Spread-out )', :abbrev_form => 'C::F:*:( F:SO )', :alpha => "CAFIWAFISO");
Formula.create( :base => '169', :offset => '001', :subindex => '0', :ord => '6', :iform => '178.0.e::169.0:*:( 124.0:169.0.b )', :word_form => 'crane::fly:*:( feathers:Spread-out )', :abbrev_form => 'C::F:*:( F:SO )', :alpha => "CAFIWIFISO");
Formula.create( :base => '169', :offset => '001', :subindex => '0', :ord => '2', :iform => '178.0.e::169.0', :word_form => 'crane::fly', :abbrev_form => 'C::F', :alpha => "CAF");
Formula.create( :base => '169', :offset => '002', :subindex => '0', :ord => '1', :iform => 'opp( 37.0 )', :word_form => ' opposed( wing )', :abbrev_form => 'O( W )', :alpha => "O-OW");
Formula.create( :base => '169', :offset => '002', :subindex => '0', :ord => '2', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => ' opposed( wing.feather:long )', :abbrev_form => 'O( W.F:L )', :alpha => "O-OFOW'IL");
Formula.create( :base => '169', :offset => '002', :subindex => '0', :ord => '3', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => ' opposed( wing:<.feather:long )', :abbrev_form => 'O( W:<.F:L )', :alpha => "O-OWIF'IL");
Formula.create( :base => '169', :offset => '003', :subindex => '0', :ord => '1', :iform => '68.1 * opp( 37.0 )', :word_form => ' Mouth * opposed( wing )', :abbrev_form => 'M * O( W )', :alpha => "MAO-OW");
Formula.create( :base => '169', :offset => '003', :subindex => '0', :ord => '2', :iform => '68.1 * opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => ' Mouth * opposed( wing.feather:long )', :abbrev_form => 'M * O( W.F:L )', :alpha => "MAO-OFOW'IL");
Formula.create( :base => '169', :offset => '003', :subindex => '0', :ord => '3', :iform => '68.1 * Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => ' Mouth * opposed( wing:<.feather:long )', :abbrev_form => 'M * O( W:<.F:L )', :alpha => "MAO-OWIF'IL");
Formula.create( :base => '169', :offset => '004', :subindex => '0', :ord => '1', :iform => '66.2.a / opp( 37.0 )', :word_form => 'Grass-at-top / opposed( wing )', :abbrev_form => 'GAT / O( W )', :alpha => "GATO-O-OW");
Formula.create( :base => '169', :offset => '004', :subindex => '0', :ord => '3', :iform => '66.2.a / opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Grass-at-top / opposed( wing.feather:long )', :abbrev_form => 'GAT / O( W.F:L )', :alpha => "GATO-O-OFOW'IL");
Formula.create( :base => '169', :offset => '004', :subindex => '0', :ord => '5', :iform => '66.2.a / Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Grass-at-top / opposed( wing:<.feather:long )', :abbrev_form => 'GAT / O( W:<.F:L )', :alpha => "GATO-O-OWIF'IL");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '4', :iform => '( 153.0.a:->153.0.b ) * opp( 37.0 )', :word_form => '( thread:->silk ) * opposed( wing )', :abbrev_form => '( T:->S ) * O( W )', :alpha => "TYSAO-OW");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '5', :iform => '( 153.0.a:->153.0.b ) * opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => '( thread:->silk ) * opposed( wing.feather:long )', :abbrev_form => '( T:->S ) * O( W.F:L )', :alpha => "TYSAO-OFOW'IL");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '6', :iform => '( 153.0.a:->153.0.b ) * Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => '( thread:->silk ) * opposed( wing:<.feather:long )', :abbrev_form => '( T:->S ) * O( W:<.F:L )', :alpha => "TYSAO-OWIF'IL");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '1', :iform => '153.1 * opp( 37.0 )', :word_form => 'Silk-thread * opposed( wing )', :abbrev_form => 'ST * O( W )', :alpha => "STAO-OW");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '2', :iform => '153.1 * opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Silk-thread * opposed( wing.feather:long )', :abbrev_form => 'ST * O( W.F:L )', :alpha => "STAO-OFOW'IL");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '3', :iform => '153.1 * Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Silk-thread * opposed( wing:<.feather:long )', :abbrev_form => 'ST * O( W:<.F:L )', :alpha => "STAO-OWIF'IL");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '7', :iform => 'Column( 19.1 ) * opp( 37.0 )', :word_form => 'Column( Silkworm-in-cocoon ) * opposed( wing )', :abbrev_form => 'C( SWIC ) * O( W )', :alpha => "COSWICA-O-OW");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '8', :iform => 'Column( 19.1 ) * opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Column( Silkworm-in-cocoon ) * opposed( wing.feather:long )', :abbrev_form => 'C( SWIC ) * O( W.F:L )', :alpha => "COSWICA-O-OFOW'IL");
Formula.create( :base => '169', :offset => '005', :subindex => '0', :ord => '9', :iform => 'Column( 19.1 ) * Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Column( Silkworm-in-cocoon ) * opposed( wing:<.feather:long )', :abbrev_form => 'C( SWIC ) * O( W:<.F:L )', :alpha => "COSWICA-O-OWIF'IL");
Formula.create( :base => '169', :offset => '006', :subindex => '0', :ord => '1', :iform => '78.1 */ opp( 37.0 )', :word_form => 'Leaf-of-door */ opposed( wing )', :abbrev_form => 'LOD */ O( W )', :alpha => "LODA-O-O-OW");
Formula.create( :base => '169', :offset => '006', :subindex => '0', :ord => '2', :iform => '78.1 */ opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Leaf-of-door */ opposed( wing.feather:long )', :abbrev_form => 'LOD */ O( W.F:L )', :alpha => "LODA-O-O-OFOW'IL");
Formula.create( :base => '169', :offset => '006', :subindex => '0', :ord => '3', :iform => '78.1 */ Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Leaf-of-door */ opposed( wing:<.feather:long )', :abbrev_form => 'LOD */ O( W:<.F:L )', :alpha => "LODA-O-O-OWIF'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '4', :iform => '( 77.1.a ):( 52.0.a ) */\ opp( 37.0 )', :word_form => 'wood:hollowed-out */\ opposed( wing )', :abbrev_form => 'W:HO */\ O( W )', :alpha => "WIHO-AO-UO-OW");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '5', :iform => '( 77.1.a ):( 52.0.a ) */\ opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'wood:hollowed-out */\ opposed( wing.feather:long )', :abbrev_form => 'W:HO */\ O( W.F:L )', :alpha => "WIHO-AO-UO-OFOW'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '6', :iform => '( 77.1.a ):( 52.0.a ) */\ Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'wood:hollowed-out */\ opposed( wing:<.feather:long )', :abbrev_form => 'W:HO */\ O( W:<.F:L )', :alpha => "WIHO-AO-UO-OWIF'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '10', :iform => '( 77.1.a ):( 52.0.a ) */\ opp( 37.0 )', :word_form => 'wood:hollowed-out */\ opposed( wing )', :abbrev_form => 'W:HO */\ O( W )', :alpha => "WIHO-AO-UO-OW");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '11', :iform => '( 77.1.a ):( 52.0.a ) */\ opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'wood:hollowed-out */\ opposed( wing.feather:long )', :abbrev_form => 'W:HO */\ O( W.F:L )', :alpha => "WIHO-AO-UO-OFOW'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '12', :iform => '( 77.1.a ):( 52.0.a ) */\ Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'wood:hollowed-out */\ opposed( wing:<.feather:long )', :abbrev_form => 'W:HO */\ O( W:<.F:L )', :alpha => "WIHO-AO-UO-OWIF'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '1', :iform => '52.1 */\ opp( 37.0 )', :word_form => 'Wood-is-hollowed-out */\ opposed( wing )', :abbrev_form => 'WIHO */\ O( W )', :alpha => "WIHO-AO-UO-OW");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '2', :iform => '52.1 */\ opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Wood-is-hollowed-out */\ opposed( wing.feather:long )', :abbrev_form => 'WIHO */\ O( W.F:L )', :alpha => "WIHO-AO-UO-OFOW'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '3', :iform => '52.1 */\ Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Wood-is-hollowed-out */\ opposed( wing:<.feather:long )', :abbrev_form => 'WIHO */\ O( W:<.F:L )', :alpha => "WIHO-AO-UO-OWIF'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '7', :iform => '52.1 */\ opp( 37.0 )', :word_form => 'Wood-is-hollowed-out */\ opposed( wing )', :abbrev_form => 'WIHO */\ O( W )', :alpha => "WIHO-AO-UO-OW");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '8', :iform => '52.1 */\ opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Wood-is-hollowed-out */\ opposed( wing.feather:long )', :abbrev_form => 'WIHO */\ O( W.F:L )', :alpha => "WIHO-AO-UO-OFOW'IL");
Formula.create( :base => '169', :offset => '007', :subindex => '0', :ord => '9', :iform => '52.1 */\ Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Wood-is-hollowed-out */\ opposed( wing:<.feather:long )', :abbrev_form => 'WIHO */\ O( W:<.F:L )', :alpha => "WIHO-AO-UO-OWIF'IL");
Formula.create( :base => '169', :offset => '008', :subindex => '0', :ord => '2', :iform => 'opp( 37.0 ) / (( 37.0 ).(124.0 ):(124.0.a ) ):^2', :word_form => 'opposed( wing ) / ( wing.feather:long ):^2', :abbrev_form => 'O( W ) / ( W.F:L ):^2', :alpha => "O-OWOFOW'ILUT");
Formula.create( :base => '169', :offset => '008', :subindex => '0', :ord => '3', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 124.1', :word_form => 'opposed( wing.feather:long ) / ( wing.feather:long ):^2', :abbrev_form => 'O( W.F:L ) / ( W.F:L ):^2', :alpha => "O-OFOW'ILOFOW'ILUT");
Formula.create( :base => '169', :offset => '008', :subindex => '0', :ord => '4', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 37.0 ).(124.0 ):(124.0.a ) ):^2', :word_form => 'opposed( wing.feather:long ) / ( wing.feather:long ):^2', :abbrev_form => 'O( W.F:L ) / ( W.F:L ):^2', :alpha => "O-OFOW'ILOFOW'ILUT");
Formula.create( :base => '169', :offset => '008', :subindex => '0', :ord => '1', :iform => 'Opp( 37.0 ) / 124.1', :word_form => 'opposed( wing ) / ( wing.feather:long ):^2', :abbrev_form => 'O( W ) / ( W.F:L ):^2', :alpha => "O-OWOFOW'ILUT");
Formula.create( :base => '169', :offset => '008', :subindex => '0', :ord => '5', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 124.1', :word_form => 'opposed( wing:<.feather:long ) / ( wing.feather:long ):^2', :abbrev_form => 'O( W:<.F:L ) / ( W.F:L ):^2', :alpha => "O-OWIF'ILOFOW'ILUT");
Formula.create( :base => '169', :offset => '008', :subindex => '0', :ord => '6', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 37.0 ).(124.0 ):(124.0.a ) ):^2', :word_form => 'opposed( wing:<.feather:long ) / ( wing.feather:long ):^2', :abbrev_form => 'O( W:<.F:L ) / ( W.F:L ):^2', :alpha => "O-OWIF'ILOFOW'ILUT");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '2', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 98.1', :word_form => 'opposed( wing.feather:long ) / literature', :abbrev_form => 'O( W.F:L ) / L', :alpha => "O-OFOW'ILOL");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '4', :iform => 'opp( 37.0 ) / ( 32.1.a / 3.2 )', :word_form => 'opposed( wing ) / ( Enter-alt / mow )', :abbrev_form => 'O( W ) / ( A( E ) / M )', :alpha => "O-OWO-E-AOM");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '5', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / ( 32.1.a / 3.2 )', :word_form => 'opposed( wing.feather:long ) / ( Enter-alt / mow )', :abbrev_form => 'O( W.F:L ) / ( A( E ) / M )', :alpha => "O-OFOW'ILO-E-AOM");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '7', :iform => 'opp( 37.0 ) / (( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a ))', :word_form => 'opposed( wing ) / (( dot / dash ) / ( fall:left + rev(  fall:left )))', :abbrev_form => 'O( W ) / (( D / D ) / ( F:L + R( F:L )))', :alpha => "O-OWODODOFILIROFIL");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '8', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a ))', :word_form => 'opposed( wing.feather:long ) / (( dot / dash ) / ( fall:left + rev(  fall:left )))', :abbrev_form => 'O( W.F:L ) / (( D / D ) / ( F:L + R( F:L )))', :alpha => "O-OFOW'ILODODOFILIROFIL");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '1', :iform => 'Opp( 37.0 ) / 98.1', :word_form => 'opposed( wing ) / literature', :abbrev_form => 'O( W ) / L', :alpha => "O-OWOL");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '3', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 98.1', :word_form => 'opposed( wing:<.feather:long ) / literature', :abbrev_form => 'O( W:<.F:L ) / L', :alpha => "O-OWIF'ILOL");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '6', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / ( 32.1.a / 3.2 )', :word_form => 'opposed( wing:<.feather:long ) / ( Enter-alt / mow )', :abbrev_form => 'O( W:<.F:L ) / ( A( E ) / M )', :alpha => "O-OWIF'ILO-E-AOM");
Formula.create( :base => '169', :offset => '009', :subindex => '0', :ord => '9', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a ))', :word_form => 'opposed( wing:<.feather:long ) / (( dot / dash ) / ( fall:left + rev(  fall:left )))', :abbrev_form => 'O( W:<.F:L ) / (( D / D ) / ( F:L + R( F:L )))', :alpha => "O-OWIF'ILODODOFILIROFIL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '10', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / opp( 37.0 )', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post  ))) / opposed( wing )', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / O( W )', :alpha => "BOCOISODUTEPO-O-OW");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '11', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post  ))) / opposed( wing.feather:long )', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / O( W.F:L )', :alpha => "BOCOISODUTEPO-O-OFOW'IL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '12', :iform => '( 1.1.a / ( 24.1 /+ ( stack( 1.1.c )^2 {} 4.1 ))) / Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => '( Bar / ( cover /+ ( stack( dot )^2 {} post  ))) / opposed( wing:<.feather:long )', :abbrev_form => '( B / ( C /+ ( S( D )^2 {} P  ))) / O( W:<.F:L )', :alpha => "BOCOISODUTEPO-O-OWIF'IL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '4', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / opp( 37.0 )', :word_form => '( rain.drops :][ cloud ) / opposed( wing )', :abbrev_form => '( R.D :][ C ) / O( W )', :alpha => "DORICO-O-OW");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '5', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => '( rain.drops :][ cloud ) / opposed( wing.feather:long )', :abbrev_form => '( R.D :][ C ) / O( W.F:L )', :alpha => "DORICO-O-OFOW'IL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '6', :iform => '(( 161.0 ).( 161.0.a ) :][ ( 81.0.a )) / Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => '( rain.drops :][ cloud ) / opposed( wing:<.feather:long )', :abbrev_form => '( R.D :][ C ) / O( W:<.F:L )', :alpha => "DORICO-O-OWIF'IL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '7', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / opp( 37.0 )', :word_form => '( rain.drops::fall:-[]>:cloud ) / opposed( wing )', :abbrev_form => '( R.D::F:-[]>:C ) / O( W )', :alpha => "DORAFITICO-O-OW");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '8', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => '( rain.drops::fall:-[]>:cloud ) / opposed( wing.feather:long )', :abbrev_form => '( R.D::F:-[]>:C ) / O( W.F:L )', :alpha => "DORAFITICO-O-OFOW'IL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '9', :iform => '(( 161.0 ).( 161.0.a )::( 81.0.c ):-[]>:( 81.0.a )) / Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => '( rain.drops::fall:-[]>:cloud ) / opposed( wing:<.feather:long )', :abbrev_form => '( R.D::F:-[]>:C ) / O( W:<.F:L )', :alpha => "DORAFITICO-O-OWIF'IL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '1', :iform => '161.1 / opp( 37.0 )', :word_form => 'Rain / opposed( wing )', :abbrev_form => 'R / O( W )', :alpha => "RO-O-OW");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '2', :iform => '161.1 / opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Rain / opposed( wing.feather:long )', :abbrev_form => 'R / O( W.F:L )', :alpha => "RO-O-OFOW'IL");
Formula.create( :base => '169', :offset => '010', :subindex => '0', :ord => '3', :iform => '161.1 / Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Rain / opposed( wing:<.feather:long )', :abbrev_form => 'R / O( W:<.F:L )', :alpha => "RO-O-OWIF'IL");
Formula.create( :base => '169', :offset => '011', :subindex => '0', :ord => '2', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 83.1', :word_form => 'opposed( wing.feather:long ) / heart-is-open', :abbrev_form => 'O( W.F:L ) / HIO', :alpha => "O-OFOW'ILOHIO");
Formula.create( :base => '169', :offset => '011', :subindex => '0', :ord => '1', :iform => 'Opp( 37.0 ) / 83.1', :word_form => 'opposed( wing ) / heart-is-open', :abbrev_form => 'O( W ) / HIO', :alpha => "O-OWOHIO");
Formula.create( :base => '169', :offset => '011', :subindex => '0', :ord => '3', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 83.1', :word_form => 'opposed( wing:<.feather:long ) / heart-is-open', :abbrev_form => 'O( W:<.F:L ) / HIO', :alpha => "O-OWIF'ILOHIO");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '1', :iform => 'opp( 37.0 ) / 158.1', :word_form => 'opposed( wing ) / cart', :abbrev_form => 'O( W ) / C', :alpha => "O-OWOC");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '2', :iform => 'opp( 37.0 ) / 158.1', :word_form => 'opposed( wing ) / vehicle', :abbrev_form => 'O( W ) / V', :alpha => "O-OWOV");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '3', :iform => 'opp( 37.0 ) / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b ))', :word_form => 'opposed( wing ) / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'O( W ) / (( S( W ) /\ B ) + A )', :alpha => "O-OWOSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '4', :iform => 'opp( 37.0 ) / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'opposed( wing ) / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'O( W ) / (( W:^2 /\ B ) + A )', :alpha => "O-OWOWUTOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '5', :iform => 'opp( 37.0 ) / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'opposed( wing ) / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'O( W ) / (( W / B / W ) + A )', :alpha => "O-OWOWOBOWIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '6', :iform => 'opp( 37.0 ) / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing ) / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'O( W ) / (( S( B ) /\ S  ) + P )', :alpha => "O-OWOSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '7', :iform => 'opp( 37.0 ) / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'opposed( wing ) / (( bar / say / bar ) + post )', :abbrev_form => 'O( W ) / (( B / S / B ) + P )', :alpha => "O-OWOBOSOBIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '8', :iform => 'opp( 37.0 ) / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing ) / (( two /\ say ) + post )', :abbrev_form => 'O( W ) / (( T /\ S  ) + P )', :alpha => "O-OWOTOUSIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '9', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing.feather:long ) / cart', :abbrev_form => 'O( W.F:L ) / C', :alpha => "O-OFOW'ILO-OC");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '10', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing.feather:long ) / vehicle', :abbrev_form => 'O( W.F:L ) / V', :alpha => "O-OFOW'ILO-OV");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '11', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b ))', :word_form => 'opposed( wing.feather:long ) / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'O( W.F:L ) / (( S( W ) /\ B ) + A )', :alpha => "O-OFOW'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '12', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'opposed( wing.feather:long ) / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'O( W.F:L ) / (( W:^2 /\ B ) + A )', :alpha => "O-OFOW'ILO-OWUTOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '13', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'opposed( wing.feather:long ) / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'O( W.F:L ) / (( W / B / W ) + A )', :alpha => "O-OFOW'ILO-OWOBOWIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '14', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing.feather:long ) / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'O( W.F:L ) / (( S( B ) /\ S  ) + P )', :alpha => "O-OFOW'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '15', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'opposed( wing.feather:long ) / (( bar / say / bar ) + post )', :abbrev_form => 'O( W.F:L ) / (( B / S / B ) + P )', :alpha => "O-OFOW'ILO-OBOSOBIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '16', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing.feather:long ) / (( two /\ say ) + post )', :abbrev_form => 'O( W.F:L ) / (( T /\ S  ) + P )', :alpha => "O-OFOW'ILO-OTOUSIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '25', :iform => 'opp( 37.0 ) / 158.1', :word_form => 'opposed( wing ) / cart', :abbrev_form => 'O( W ) / C', :alpha => "O-OWOC");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '26', :iform => 'opp( 37.0 ) / 158.1', :word_form => 'opposed( wing ) / vehicle', :abbrev_form => 'O( W ) / V', :alpha => "O-OWOV");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '27', :iform => 'opp( 37.0 ) / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b ))', :word_form => 'opposed( wing ) / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'O( W ) / (( S( W ) /\ B ) + A )', :alpha => "O-OWOSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '28', :iform => 'opp( 37.0 ) / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'opposed( wing ) / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'O( W ) / (( W:^2 /\ B ) + A )', :alpha => "O-OWOWUTOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '29', :iform => 'opp( 37.0 ) / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'opposed( wing ) / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'O( W ) / (( W / B / W ) + A )', :alpha => "O-OWOWOBOWIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '30', :iform => 'opp( 37.0 ) / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing ) / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'O( W ) / (( S( B ) /\ S  ) + P )', :alpha => "O-OWOSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '31', :iform => 'opp( 37.0 ) / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'opposed( wing ) / (( bar / say / bar ) + post )', :abbrev_form => 'O( W ) / (( B / S / B ) + P )', :alpha => "O-OWOBOSOBIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '32', :iform => 'opp( 37.0 ) / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing ) / (( two /\ say ) + post )', :abbrev_form => 'O( W ) / (( T /\ S  ) + P )', :alpha => "O-OWOTOUSIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '33', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing.feather:long ) / cart', :abbrev_form => 'O( W.F:L ) / C', :alpha => "O-OFOW'ILO-OC");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '34', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing.feather:long ) / vehicle', :abbrev_form => 'O( W.F:L ) / V', :alpha => "O-OFOW'ILO-OV");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '35', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b ))', :word_form => 'opposed( wing.feather:long ) / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'O( W.F:L ) / (( S( W ) /\ B ) + A )', :alpha => "O-OFOW'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '36', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'opposed( wing.feather:long ) / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'O( W.F:L ) / (( W:^2 /\ B ) + A )', :alpha => "O-OFOW'ILO-OWUTOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '37', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'opposed( wing.feather:long ) / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'O( W.F:L ) / (( W / B / W ) + A )', :alpha => "O-OFOW'ILO-OWOBOWIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '38', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing.feather:long ) / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'O( W.F:L ) / (( S( B ) /\ S  ) + P )', :alpha => "O-OFOW'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '39', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'opposed( wing.feather:long ) / (( bar / say / bar ) + post )', :abbrev_form => 'O( W.F:L ) / (( B / S / B ) + P )', :alpha => "O-OFOW'ILO-OBOSOBIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '40', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing.feather:long ) / (( two /\ say ) + post )', :abbrev_form => 'O( W.F:L ) / (( T /\ S  ) + P )', :alpha => "O-OFOW'ILO-OTOUSIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '17', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing:<.feather:long ) / cart', :abbrev_form => 'O( W:<.F:L ) / C', :alpha => "O-OWIF'ILO-OC");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '18', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing:<.feather:long ) / vehicle', :abbrev_form => 'O( W:<.F:L ) / V', :alpha => "O-OWIF'ILO-OV");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '19', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b ))', :word_form => 'opposed( wing:<.feather:long ) / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'O( W:<.F:L ) / (( S( W ) /\ B ) + A )', :alpha => "O-OWIF'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '20', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'opposed( wing:<.feather:long ) / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'O( W:<.F:L ) / (( W:^2 /\ B ) + A )', :alpha => "O-OWIF'ILO-OWUTOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '21', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'opposed( wing:<.feather:long ) / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'O( W:<.F:L ) / (( W / B / W ) + A )', :alpha => "O-OWIF'ILO-OWOBOWIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '22', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing:<.feather:long ) / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'O( W:<.F:L ) / (( S( B ) /\ S  ) + P )', :alpha => "O-OWIF'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '23', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'opposed( wing:<.feather:long ) / (( bar / say / bar ) + post )', :abbrev_form => 'O( W:<.F:L ) / (( B / S / B ) + P )', :alpha => "O-OWIF'ILO-OBOSOBIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '24', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing:<.feather:long ) / (( two /\ say ) + post )', :abbrev_form => 'O( W:<.F:L ) / (( T /\ S  ) + P )', :alpha => "O-OWIF'ILO-OTOUSIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '41', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing:<.feather:long ) / cart', :abbrev_form => 'O( W:<.F:L ) / C', :alpha => "O-OWIF'ILO-OC");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '42', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 158.1', :word_form => 'opposed( wing:<.feather:long ) / vehicle', :abbrev_form => 'O( W:<.F:L ) / V', :alpha => "O-OWIF'ILO-OV");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '43', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( stack( 158.0.a ) /\ 147.0 ) + 158.0.b ))', :word_form => 'opposed( wing:<.feather:long ) / (( stack( wheel ) /\ body ) + axle )', :abbrev_form => 'O( W:<.F:L ) / (( S( W ) /\ B ) + A )', :alpha => "O-OWIF'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '44', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 158.0.a ):^2 /\ 147.0 ) + 158.0.b )', :word_form => 'opposed( wing:<.feather:long ) / (( Wheel:^2 /\ body ) + axle )', :abbrev_form => 'O( W:<.F:L ) / (( W:^2 /\ B ) + A )', :alpha => "O-OWIF'ILO-OWUTOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '45', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 158.0.a / 147.0 / 158.0.a ) + 158.0.b )', :word_form => 'opposed( wing:<.feather:long ) / (( Wheel / body / wheel ) + axle )', :abbrev_form => 'O( W:<.F:L ) / (( W / B / W ) + A )', :alpha => "O-OWIF'ILO-OWOBOWIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '46', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( stack( 1.1.a ) /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing:<.feather:long ) / (( stack( bar ) /\ say ) + post )', :abbrev_form => 'O( W:<.F:L ) / (( S( B ) /\ S  ) + P )', :alpha => "O-OWIF'ILO-OSOWOUBIA");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '47', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 1.1.a / 68.46 / 1.1.a ) + 4.1 )', :word_form => 'opposed( wing:<.feather:long ) / (( bar / say / bar ) + post )', :abbrev_form => 'O( W:<.F:L ) / (( B / S / B ) + P )', :alpha => "O-OWIF'ILO-OBOSOBIP");
Formula.create( :base => '169', :offset => '012', :subindex => '0', :ord => '48', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / (( 1.2 /\ 68.46 ) + 4.1 )', :word_form => 'opposed( wing:<.feather:long ) / (( two /\ say ) + post )', :abbrev_form => 'O( W:<.F:L ) / (( T /\ S  ) + P )', :alpha => "O-OWIF'ILO-OTOUSIP");
Formula.create( :base => '169', :offset => '012', :subindex => 's', :ord => '1', :iform => 'opp( 37.0 ) / ( 1.2 + 158.0.c )', :word_form => 'opposed( wing ) / ( two + four )', :abbrev_form => 'O( W ) / ( T + F )', :alpha => "O-OWOTIF");
Formula.create( :base => '169', :offset => '012', :subindex => 's', :ord => '2', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / ( 1.2 + 158.0.c )', :word_form => 'opposed( wing.feather:long ) / ( two + four )', :abbrev_form => 'O( W.F:L ) / ( T + F )', :alpha => "O-OFOW'ILO-OTIF");
Formula.create( :base => '169', :offset => '012', :subindex => 's', :ord => '4', :iform => 'opp( 37.0 ) / ( 1.2 + 158.0.c )', :word_form => 'opposed( wing ) / ( two + four )', :abbrev_form => 'O( W ) / ( T + F )', :alpha => "O-OWOTIF");
Formula.create( :base => '169', :offset => '012', :subindex => 's', :ord => '5', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / ( 1.2 + 158.0.c )', :word_form => 'opposed( wing.feather:long ) / ( two + four )', :abbrev_form => 'O( W.F:L ) / ( T + F )', :alpha => "O-OFOW'ILO-OTIF");
Formula.create( :base => '169', :offset => '012', :subindex => 's', :ord => '3', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / ( 1.2 + 158.0.c )', :word_form => 'opposed( wing:<.feather:long ) / ( two + four )', :abbrev_form => 'O( W:<.F:L ) / ( T + F )', :alpha => "O-OWIF'ILO-OTIF");
Formula.create( :base => '169', :offset => '013', :subindex => '0', :ord => '2', :iform => 'opp(( 37.0 ).(124.0 ):(124.0.a )) / 126.1', :word_form => 'opposed( wing.feather:long ) / clothing', :abbrev_form => 'O( W.F:L ) / C', :alpha => "O-OFOW'ILOC");
Formula.create( :base => '169', :offset => '013', :subindex => '0', :ord => '1', :iform => 'Opp( 37.0 ) / 126.1', :word_form => 'opposed( wing ) / clothing', :abbrev_form => 'O( W ) / C', :alpha => "O-OWOC");
Formula.create( :base => '169', :offset => '013', :subindex => '0', :ord => '3', :iform => 'Opp(( 37.0 ):<.(124.0 ):(124.0.a )) / 126.1', :word_form => 'opposed( wing:<.feather:long ) / clothing', :abbrev_form => 'O( W:<.F:L ) / C', :alpha => "O-OWIF'ILOC");
Formula.create( :base => '169', :offset => '014', :subindex => '0', :ord => '1', :iform => '89.1.a * opp( 37.0 )', :word_form => 'Side-hand * opposed( wing )', :abbrev_form => 'SH * O( W )', :alpha => "SHAO-OW");
Formula.create( :base => '169', :offset => '014', :subindex => '0', :ord => '3', :iform => '89.1.a * opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Side-hand * opposed( wing.feather:long )', :abbrev_form => 'SH * O( W.F:L )', :alpha => "SHAO-OFOW'IL");
Formula.create( :base => '169', :offset => '014', :subindex => '0', :ord => '5', :iform => '89.1.a * Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Side-hand * opposed( wing:<.feather:long )', :abbrev_form => 'SH * O( W:<.F:L )', :alpha => "SHAO-OWIF'IL");
Formula.create( :base => '169', :offset => '015', :subindex => '0', :ord => '1', :iform => '41.1 * opp( 37.0 )', :word_form => '( person::step ) * opposed( wing )', :abbrev_form => '( P::S ) * O( W )', :alpha => "PASA-O-OW");
Formula.create( :base => '169', :offset => '015', :subindex => '0', :ord => '2', :iform => '41.1 * opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => '( person::step ) * opposed( wing.feather:long )', :abbrev_form => '( P::S ) * O( W.F:L )', :alpha => "PASA-O-OFOW'IL");
Formula.create( :base => '169', :offset => '015', :subindex => '0', :ord => '3', :iform => '41.1 * Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => '( person::step ) * opposed( wing:<.feather:long )', :abbrev_form => '( P::S ) * O( W:<.F:L )', :alpha => "PASA-O-OWIF'IL");
Formula.create( :base => '169', :offset => '016', :subindex => '0', :ord => '4', :iform => '( 3.22->114.1.0 ) / opp( 37.0 )', :word_form => '( net->eye ) / opposed( wing )', :abbrev_form => '( N->E ) / O( W )', :alpha => "NYE-O-O-OW");
Formula.create( :base => '169', :offset => '016', :subindex => '0', :ord => '5', :iform => '( 3.22->114.1.0 ) / opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => '( net->eye ) / opposed( wing.feather:long )', :abbrev_form => '( N->E ) / O( W.F:L )', :alpha => "NYE-O-O-OFOW'IL");
Formula.create( :base => '169', :offset => '016', :subindex => '0', :ord => '6', :iform => '( 3.22->114.1.0 ) / Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => '( net->eye ) / opposed( wing:<.feather:long )', :abbrev_form => '( N->E ) / O( W:<.F:L )', :alpha => "NYE-O-O-OWIF'IL");
Formula.create( :base => '169', :offset => '016', :subindex => '0', :ord => '1', :iform => '3.22.a / opp( 37.0 )', :word_form => 'Net-at-top / opposed( wing )', :abbrev_form => 'NAT / O( W )', :alpha => "NATO-O-OW");
Formula.create( :base => '169', :offset => '016', :subindex => '0', :ord => '2', :iform => '3.22.a / opp(( 37.0 ).(124.0 ):(124.0.a ))', :word_form => 'Net-at-top / opposed( wing.feather:long )', :abbrev_form => 'NAT / O( W.F:L )', :alpha => "NATO-O-OFOW'IL");
Formula.create( :base => '169', :offset => '016', :subindex => '0', :ord => '3', :iform => '3.22.a / Opp(( 37.0 ):<.(124.0 ):(124.0.a ))', :word_form => 'Net-at-top / opposed( wing:<.feather:long )', :abbrev_form => 'NAT / O( W:<.F:L )', :alpha => "NATO-O-OWIF'IL");
Formula.create( :base => '170', :offset => '000', :subindex => '0', :ord => '1', :iform => '170.0', :word_form => 'abstract( "fruit" )', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '170', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 170.0 }', :word_form => '{ fruit }', :abbrev_form => '{ F }', :alpha => "F");
Formula.create( :base => '170', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 170.0 )::( 86.0.a )', :word_form => 'fruit::hang', :abbrev_form => 'F::H', :alpha => "FAH");
Formula.create( :base => '170', :offset => '001', :subindex => '0', :ord => '1', :iform => '170.1', :word_form => '{ "fruit" }', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '170', :offset => '002', :subindex => '0', :ord => '6', :iform => '(( 170.0 )::( 86.0.a )) / ( 77.0->77.0.a )', :word_form => '( fruit::hang ) / ( tree->wood )', :abbrev_form => '( F::H ) / ( T->W )', :alpha => "FAHOTYW");
Formula.create( :base => '170', :offset => '002', :subindex => '0', :ord => '7', :iform => '130.1 / ( 77.0->77.0.a )', :word_form => 'Bird-in-nest / ( tree->wood )', :abbrev_form => 'BIN / ( T->W )', :alpha => "BINOTYW");
Formula.create( :base => '170', :offset => '002', :subindex => '0', :ord => '5', :iform => '170.1 / ( 77.0->77.0.a )', :word_form => 'Fruit-is-Hanging / ( tree->wood )', :abbrev_form => 'FIH / ( T->W )', :alpha => "FIHOTYW");
Formula.create( :base => '170', :offset => '002', :subindex => '0', :ord => '4', :iform => 'group( (( 170.0 )::( 86.0.a )) ) {}/ ( 77.0->77.0.a )', :word_form => 'group( ( fruit::hang ) ) {}/ ( tree->wood )', :abbrev_form => 'G( F::H ) {}/ ( T->W )', :alpha => "GOFAHEOTYW");
Formula.create( :base => '170', :offset => '002', :subindex => '0', :ord => '3', :iform => 'group( 170.1 ) {}/ ( 77.0->77.0.a )', :word_form => 'group( Fruit-is-Hanging ) {}/ ( tree->wood )', :abbrev_form => 'G( FIH ) {}/ ( T->W )', :alpha => "GOFIHEOTYW");
Formula.create( :base => '170', :offset => '002', :subindex => '0', :ord => '2', :iform => 'Tri( (( 170.0 )::( 86.0.a )) ) {}/ ( 77.0->77.0.a )', :word_form => 'Tri( ( fruit::hang ) ) {}/ ( tree->wood )', :abbrev_form => 'T( F::H ) {}/ ( T->W )', :alpha => "TOFAHEOTYW");
Formula.create( :base => '170', :offset => '002', :subindex => '0', :ord => '1', :iform => 'Tri( 170.1 ) {}/ ( 77.0->77.0.a )', :word_form => 'Tri( Fruit-is-Hanging ) {}/ ( tree->wood )', :abbrev_form => 'T( FIH ) {}/ ( T->W )', :alpha => "TOFIHEOTYW");
Formula.create( :base => '170', :offset => '004', :subindex => '0', :ord => '11', :iform => '(( 170.0 )::( 86.0.a )) / 138.1', :word_form => '( fruit::hang ) / rice', :abbrev_form => '( F::H ) / R', :alpha => "FAHOR");
Formula.create( :base => '170', :offset => '004', :subindex => '0', :ord => '13', :iform => '130.1 / 138.1', :word_form => 'Bird-in-nest / rice', :abbrev_form => 'BIN / R', :alpha => "BINOR");
Formula.create( :base => '170', :offset => '004', :subindex => '0', :ord => '9', :iform => '170.1 / 138.1', :word_form => 'Fruit-is-Hanging / rice', :abbrev_form => 'FIH / R', :alpha => "FIHOR");
Formula.create( :base => '170', :offset => '004', :subindex => '0', :ord => '7', :iform => 'group( (( 170.0 )::( 86.0.a )) ) {}/ 138.1', :word_form => 'group( ( fruit::hang ) ) {}/ rice', :abbrev_form => 'G( F::H ) {}/ R', :alpha => "GOFAHEOR");
Formula.create( :base => '170', :offset => '004', :subindex => '0', :ord => '5', :iform => 'group( 170.1 ) {}/ 138.1', :word_form => 'group( Fruit-is-Hanging ) {}/ rice', :abbrev_form => 'G( FIH ) {}/ R', :alpha => "GOFIHEOR");
Formula.create( :base => '170', :offset => '004', :subindex => '0', :ord => '3', :iform => 'Tri( (( 170.0 )::( 86.0.a )) ) {}/ 138.1', :word_form => 'Tri( ( fruit::hang ) ) {}/ rice', :abbrev_form => 'T( F::H ) {}/ R', :alpha => "TOFAHEOR");
Formula.create( :base => '170', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Tri( 170.1 ) {}/ 138.1', :word_form => 'Tri( Fruit-is-Hanging ) {}/ rice', :abbrev_form => 'T( FIH ) {}/ R', :alpha => "TOFIHEOR");
Formula.create( :base => '171', :offset => '000', :subindex => '0', :ord => '1', :iform => '171.0', :word_form => 'abstract( "monkey" ) ', :abbrev_form => 'A( M )', :alpha => "AM");
Formula.create( :base => '171', :offset => '001', :subindex => '0', :ord => '3', :iform => '{ ( 171.0 ):( 54.0 ) }', :word_form => '{ monkey:female }', :abbrev_form => '{ M:F }', :alpha => "MIF");
Formula.create( :base => '171', :offset => '001', :subindex => '0', :ord => '5', :iform => '103.1 / (( 171.0 ):( 54.0 ))', :word_form => 'Claw / ( monkey:female )', :abbrev_form => 'C / ( M:F )', :alpha => "COMIF");
Formula.create( :base => '171', :offset => '001', :subindex => '0', :ord => '1', :iform => '171.1', :word_form => '{ "female monkey" }', :abbrev_form => 'SA', :alpha => "SA");
Formula.create( :base => '171', :offset => '001', :subindex => '0', :ord => '2', :iform => '171.1', :word_form => '{ "female monkey" }', :abbrev_form => 'F', :alpha => "F");
Formula.create( :base => '171', :offset => '001', :subindex => 's', :ord => '1', :iform => '1.1.c /* 34.1 {}/ 1.1.c', :word_form => 'Dot /* strength {}/ dot', :abbrev_form => 'D /* S {}/ D', :alpha => "DO-ASE-OD");
Formula.create( :base => '171', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a * 171.1', :word_form => 'Side-person * monkey', :abbrev_form => 'SP * M', :alpha => "SPAM");
Formula.create( :base => '171', :offset => '002', :subindex => '0', :ord => '2', :iform => '10.1.a * (( 171.0 ):( 54.0 ))', :word_form => 'Side-person * ( monkey:female )', :abbrev_form => 'SP * ( M:F )', :alpha => "SPAMIF");
Formula.create( :base => '171', :offset => '002', :subindex => '0', :ord => '3', :iform => '10.1.a * ( 103.1 / (( 171.0 ):( 54.0 )))', :word_form => 'Side-person * ( Claw / ( monkey:female ))', :abbrev_form => 'SP * ( C / ( M:F ))', :alpha => "SPACOMIF");
Formula.create( :base => '171', :offset => '002', :subindex => 's', :ord => '1', :iform => '10.1.a * ( 1.1.c /* 34.1 {}/ 1.1.c )', :word_form => 'Side-person * ( Dot /* strength {}/ dot )', :abbrev_form => 'SP * ( D /* S {}/ D )', :alpha => "SPADO-ASE-OD");
Formula.create( :base => '172', :offset => '000', :subindex => '0', :ord => '1', :iform => '172.0', :word_form => 'abstract( "elephant" ) ', :abbrev_form => 'A( E )', :alpha => "AE");
Formula.create( :base => '172', :offset => '000', :subindex => 'a', :ord => '1', :iform => '172.0.a', :word_form => 'abstract( "trunk" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '172', :offset => '000', :subindex => 'b', :ord => '1', :iform => '172.0.b', :word_form => 'abstract( "tusks" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '172', :offset => '001', :subindex => '0', :ord => '3', :iform => '{ 172.0 }', :word_form => '{ elephant }', :abbrev_form => '{ E }', :alpha => "E");
Formula.create( :base => '172', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 172.0 ).( 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b )', :word_form => 'Elephant.( head / body / ( leg:^4 * tail )', :abbrev_form => 'E.( H / B / ( L:^4 * T )', :alpha => "E-EHOBOLUFAT");
Formula.create( :base => '172', :offset => '001', :subindex => '0', :ord => '7', :iform => '( 172.0 ).( 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b )', :word_form => 'Elephant.( head / body / ( leg:^4 * tail )', :abbrev_form => 'E.( H / B / ( L:^4 * T )', :alpha => "HOBOLUFATO-E");
Formula.create( :base => '172', :offset => '001', :subindex => '0', :ord => '9', :iform => '( 172.0 ).( 172.0.a / 172.0.b / 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b )', :word_form => 'Elephant.( trunk / tusk / head / body / ( leg:^4 * tail )', :abbrev_form => 'E.( T / T / H / B / ( L:^4 * T )', :alpha => "E-ETOTOHOBOLUFAT");
Formula.create( :base => '172', :offset => '001', :subindex => '0', :ord => '11', :iform => '( 172.0 ).( 172.0.a / 172.0.b / 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b )', :word_form => 'Elephant.( trunk / tusk / head / body / ( leg:^4 * tail )', :abbrev_form => 'E.( T / T / H / B / ( L:^4 * T )', :alpha => "TOTOHOBOLUFATO-E");
Formula.create( :base => '172', :offset => '001', :subindex => '0', :ord => '1', :iform => '172.1', :word_form => '{ "elephant" }', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '172', :offset => '002', :subindex => '0', :ord => '1', :iform => '10.1.a * 172.1', :word_form => 'Side-person * elephant', :abbrev_form => 'SP * E', :alpha => "SPA-E");
Formula.create( :base => '172', :offset => '002', :subindex => '0', :ord => '2', :iform => '10.1.a * (( 172.0 ).( 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => 'Side-person * ( Elephant.( head / body / ( leg:^4 * tail ))', :abbrev_form => 'SP * ( E.( H / B / ( L:^4 * T ))', :alpha => "SPA-E-EHOBOLUFAT");
Formula.create( :base => '172', :offset => '002', :subindex => '0', :ord => '3', :iform => '10.1.a * (( 172.0 ).( 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => 'Side-person * ( Elephant.( head / body / ( leg:^4 * tail ))', :abbrev_form => 'SP * ( E.( H / B / ( L:^4 * T ))', :alpha => "SPAHOBOLUFATO-E");
Formula.create( :base => '172', :offset => '002', :subindex => '0', :ord => '4', :iform => '10.1.a * (( 172.0 ).( 172.0.a / 172.0.b / 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => 'Side-person * ( Elephant.( trunk / tusk / head / body / ( leg:^4 * tail ))', :abbrev_form => 'SP * ( E.( T / T / H / B / ( L:^4 * T ))', :alpha => "SPA-E-ETOTOHOBOLUFAT");
Formula.create( :base => '172', :offset => '002', :subindex => '0', :ord => '5', :iform => '10.1.a * (( 172.0 ).( 172.0.a / 172.0.b / 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => 'Side-person * ( Elephant.( trunk / tusk / head / body / ( leg:^4 * tail ))', :abbrev_form => 'SP * ( E.( T / T / H / B / ( L:^4 * T ))', :alpha => "SPATOTOHOBOLUFATO-E");
Formula.create( :base => '172', :offset => '003', :subindex => '0', :ord => '1', :iform => '( 77.0->77.0.a ) * 172.1', :word_form => '( tree->wood ) * elephant', :abbrev_form => '( T->W ) * E', :alpha => "TYWA-E");
Formula.create( :base => '172', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 77.0->77.0.a ) * (( 172.0 ).( 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => '( tree->wood ) * ( Elephant.( head / body / ( leg:^4 * tail ))', :abbrev_form => '( T->W ) * ( E.( H / B / ( L:^4 * T ))', :alpha => "TYWA-E-EHOBOLUFAT");
Formula.create( :base => '172', :offset => '003', :subindex => '0', :ord => '5', :iform => '( 77.0->77.0.a ) * (( 172.0 ).( 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => '( tree->wood ) * ( Elephant.( head / body / ( leg:^4 * tail ))', :abbrev_form => '( T->W ) * ( E.( H / B / ( L:^4 * T ))', :alpha => "TYWAHOBOLUFATO-E");
Formula.create( :base => '172', :offset => '003', :subindex => '0', :ord => '7', :iform => '( 77.0->77.0.a ) * (( 172.0 ).( 172.0.a / 172.0.b / 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => '( tree->wood ) * ( Elephant.( trunk / tusk / head / body / ( leg:^4 * tail ))', :abbrev_form => '( T->W ) * ( E.( T / T / H / B / ( L:^4 * T ))', :alpha => "TYWA-E-ETOTOHOBOLUFAT");
Formula.create( :base => '172', :offset => '003', :subindex => '0', :ord => '9', :iform => '( 77.0->77.0.a ) * (( 172.0 ).( 172.0.a / 172.0.b / 143.0 / 147.0 / ( 11.0.a :^4 * 178.0.b ))', :word_form => '( tree->wood ) * ( Elephant.( trunk / tusk / head / body / ( leg:^4 * tail ))', :abbrev_form => '( T->W ) * ( E.( T / T / H / B / ( L:^4 * T ))', :alpha => "TYWATOTOHOBOLUFATO-E");
Formula.create( :base => '173', :offset => '000', :subindex => 'a', :ord => '1', :iform => '173.0.a', :word_form => 'abstract( "droop" ) ', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '173', :offset => '000', :subindex => 'b', :ord => '1', :iform => '173.0.b', :word_form => 'abstract( "droopy" ) ', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '173', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 66.0 ):( 173.0.b )', :word_form => 'Plant:droopy', :abbrev_form => 'P:D', :alpha => "PID");
Formula.create( :base => '173', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 66.0 )::( 173.0.b )', :word_form => 'Plant::droop', :abbrev_form => 'P::D', :alpha => "PAD");
Formula.create( :base => '173', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a )', :word_form => 'Plant:<.(( leaves | fruit )::droop )', :abbrev_form => 'P:<.(( L | F )::D )', :alpha => "PILOFAD");
Formula.create( :base => '173', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a )', :word_form => 'Plant:<.(( fruit | leaves )::droop )', :abbrev_form => 'P:<.(( F | L )::D )', :alpha => "PIFOLAD");
Formula.create( :base => '173', :offset => '001', :subindex => '0', :ord => '1', :iform => '173.1', :word_form => '{ "plant with drooping leaves or fruit" }', :abbrev_form => 'DP', :alpha => "DP");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '11', :iform => '( 31.1 / 1.1.a ) * 173.1', :word_form => '( Ten / dash ) * Plant-is-droopy', :abbrev_form => '( T / D ) * PID', :alpha => "TODAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '12', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / dash ) * ( Plant:droopy )', :abbrev_form => '( T / D ) * ( P:D )', :alpha => "TODAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '13', :iform => '( 31.1 / 1.1.a ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / dash ) * ( Plant::droop )', :abbrev_form => '( T / D ) * ( P::D )', :alpha => "TODAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '14', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / dash ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / D ) * ( P:<.(( L | F )::D ))', :alpha => "TODAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '15', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / dash ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / D ) * ( P:<.(( F | L )::D ))', :alpha => "TODAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '16', :iform => '( 31.1 / 1.1.a ) * 173.1', :word_form => '( Ten / bar ) * Plant-is-droopy', :abbrev_form => '( T / B ) * PID', :alpha => "TOBAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '17', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / bar ) * ( Plant:droopy )', :abbrev_form => '( T / B ) * ( P:D )', :alpha => "TOBAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '18', :iform => '( 31.1 / 1.1.a ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / bar ) * ( Plant::droop )', :abbrev_form => '( T / B ) * ( P::D )', :alpha => "TOBAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '19', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / bar ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / B ) * ( P:<.(( L | F )::D ))', :alpha => "TOBAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '20', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / bar ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / B ) * ( P:<.(( F | L )::D ))', :alpha => "TOBAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '21', :iform => '( 31.1 / 1.1.b ) * 173.1', :word_form => '( Ten / ground ) * Plant-is-droopy', :abbrev_form => '( T / G ) * PID', :alpha => "TOGAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '22', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / ground ) * ( Plant:droopy )', :abbrev_form => '( T / G ) * ( P:D )', :alpha => "TOGAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '23', :iform => '( 31.1 / 1.1.b ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / ground ) * ( Plant::droop )', :abbrev_form => '( T / G ) * ( P::D )', :alpha => "TOGAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '24', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / ground ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / G ) * ( P:<.(( L | F )::D ))', :alpha => "TOGAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '25', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / ground ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / G ) * ( P:<.(( F | L )::D ))', :alpha => "TOGAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '26', :iform => '( 31.1 / 1.1.b ) * 173.1', :word_form => '( Ten / surface ) * Plant-is-droopy', :abbrev_form => '( T / S ) * PID', :alpha => "TOSAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '27', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / surface ) * ( Plant:droopy )', :abbrev_form => '( T / S ) * ( P:D )', :alpha => "TOSAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '28', :iform => '( 31.1 / 1.1.b ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / surface ) * ( Plant::droop )', :abbrev_form => '( T / S ) * ( P::D )', :alpha => "TOSAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '29', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / surface ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / S ) * ( P:<.(( L | F )::D ))', :alpha => "TOSAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '30', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / surface ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / S ) * ( P:<.(( F | L )::D ))', :alpha => "TOSAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '41', :iform => '( 31.1 / 1.1.a ) * 173.1', :word_form => '( Ten / dash ) * Plant-is-droopy', :abbrev_form => '( T / D ) * PID', :alpha => "TODAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '42', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / dash ) * ( Plant:droopy )', :abbrev_form => '( T / D ) * ( P:D )', :alpha => "TODAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '43', :iform => '( 31.1 / 1.1.a ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / dash ) * ( Plant::droop )', :abbrev_form => '( T / D ) * ( P::D )', :alpha => "TODAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '44', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / dash ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / D ) * ( P:<.(( L | F )::D ))', :alpha => "TODAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '45', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / dash ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / D ) * ( P:<.(( F | L )::D ))', :alpha => "TODAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '46', :iform => '( 31.1 / 1.1.a ) * 173.1', :word_form => '( Ten / bar ) * Plant-is-droopy', :abbrev_form => '( T / B ) * PID', :alpha => "TOBAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '47', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / bar ) * ( Plant:droopy )', :abbrev_form => '( T / B ) * ( P:D )', :alpha => "TOBAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '48', :iform => '( 31.1 / 1.1.a ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / bar ) * ( Plant::droop )', :abbrev_form => '( T / B ) * ( P::D )', :alpha => "TOBAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '49', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / bar ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / B ) * ( P:<.(( L | F )::D ))', :alpha => "TOBAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '50', :iform => '( 31.1 / 1.1.a ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / bar ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / B ) * ( P:<.(( F | L )::D ))', :alpha => "TOBAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '51', :iform => '( 31.1 / 1.1.b ) * 173.1', :word_form => '( Ten / ground ) * Plant-is-droopy', :abbrev_form => '( T / G ) * PID', :alpha => "TOGAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '52', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / ground ) * ( Plant:droopy )', :abbrev_form => '( T / G ) * ( P:D )', :alpha => "TOGAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '53', :iform => '( 31.1 / 1.1.b ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / ground ) * ( Plant::droop )', :abbrev_form => '( T / G ) * ( P::D )', :alpha => "TOGAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '54', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / ground ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / G ) * ( P:<.(( L | F )::D ))', :alpha => "TOGAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '55', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / ground ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / G ) * ( P:<.(( F | L )::D ))', :alpha => "TOGAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '56', :iform => '( 31.1 / 1.1.b ) * 173.1', :word_form => '( Ten / surface ) * Plant-is-droopy', :abbrev_form => '( T / S ) * PID', :alpha => "TOSAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '57', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):( 173.0.b ))', :word_form => '( Ten / surface ) * ( Plant:droopy )', :abbrev_form => '( T / S ) * ( P:D )', :alpha => "TOSAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '58', :iform => '( 31.1 / 1.1.b ) * (( 66.0 )::( 173.0.b ))', :word_form => '( Ten / surface ) * ( Plant::droop )', :abbrev_form => '( T / S ) * ( P::D )', :alpha => "TOSAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '59', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => '( Ten / surface ) * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => '( T / S ) * ( P:<.(( L | F )::D ))', :alpha => "TOSAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '60', :iform => '( 31.1 / 1.1.b ) * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => '( Ten / surface ) * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => '( T / S ) * ( P:<.(( F | L )::D ))', :alpha => "TOSAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '1', :iform => '70.1 * 173.1', :word_form => 'Earth * Plant-is-droopy', :abbrev_form => 'E * PID', :alpha => "E-APID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '2', :iform => '70.1 * (( 66.0 ):( 173.0.b ))', :word_form => 'Earth * ( Plant:droopy )', :abbrev_form => 'E * ( P:D )', :alpha => "E-APID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '3', :iform => '70.1 * (( 66.0 )::( 173.0.b ))', :word_form => 'Earth * ( Plant::droop )', :abbrev_form => 'E * ( P::D )', :alpha => "E-APAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '4', :iform => '70.1 * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => 'Earth * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => 'E * ( P:<.(( L | F )::D ))', :alpha => "E-APILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '5', :iform => '70.1 * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => 'Earth * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => 'E * ( P:<.(( F | L )::D ))', :alpha => "E-APIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '6', :iform => '70.1 * 173.1', :word_form => 'ground * Plant-is-droopy', :abbrev_form => 'G * PID', :alpha => "GAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '7', :iform => '70.1 * (( 66.0 ):( 173.0.b ))', :word_form => 'ground * ( Plant:droopy )', :abbrev_form => 'G * ( P:D )', :alpha => "GAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '8', :iform => '70.1 * (( 66.0 )::( 173.0.b ))', :word_form => 'ground * ( Plant::droop )', :abbrev_form => 'G * ( P::D )', :alpha => "GAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '9', :iform => '70.1 * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => 'ground * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => 'G * ( P:<.(( L | F )::D ))', :alpha => "GAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '10', :iform => '70.1 * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => 'ground * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => 'G * ( P:<.(( F | L )::D ))', :alpha => "GAPIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '31', :iform => '70.1 * 173.1', :word_form => 'Earth * Plant-is-droopy', :abbrev_form => 'E * PID', :alpha => "E-APID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '32', :iform => '70.1 * (( 66.0 ):( 173.0.b ))', :word_form => 'Earth * ( Plant:droopy )', :abbrev_form => 'E * ( P:D )', :alpha => "E-APID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '33', :iform => '70.1 * (( 66.0 )::( 173.0.b ))', :word_form => 'Earth * ( Plant::droop )', :abbrev_form => 'E * ( P::D )', :alpha => "E-APAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '34', :iform => '70.1 * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => 'Earth * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => 'E * ( P:<.(( L | F )::D ))', :alpha => "E-APILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '35', :iform => '70.1 * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => 'Earth * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => 'E * ( P:<.(( F | L )::D ))', :alpha => "E-APIFOLAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '36', :iform => '70.1 * 173.1', :word_form => 'ground * Plant-is-droopy', :abbrev_form => 'G * PID', :alpha => "GAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '37', :iform => '70.1 * (( 66.0 ):( 173.0.b ))', :word_form => 'ground * ( Plant:droopy )', :abbrev_form => 'G * ( P:D )', :alpha => "GAPID");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '38', :iform => '70.1 * (( 66.0 )::( 173.0.b ))', :word_form => 'ground * ( Plant::droop )', :abbrev_form => 'G * ( P::D )', :alpha => "GAPAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '39', :iform => '70.1 * (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a ))', :word_form => 'ground * ( Plant:<.(( leaves | fruit )::droop ))', :abbrev_form => 'G * ( P:<.(( L | F )::D ))', :alpha => "GAPILOFAD");
Formula.create( :base => '173', :offset => '002', :subindex => '0', :ord => '40', :iform => '70.1 * (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a ))', :word_form => 'ground * ( Plant:<.(( fruit | leaves )::droop ))', :abbrev_form => 'G * ( P:<.(( F | L )::D ))', :alpha => "GAPIFOLAD");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '1', :iform => '( 66.2.a ) / 173.1 / 27.1', :word_form => 'Grass-at-top / Plant-is-droopy / ( breath::meet:>surface )', :abbrev_form => 'GAT / PID / ( B::M:>S )', :alpha => "GATOPIDOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '2', :iform => '( 66.2.a ) / (( 66.0 ):( 173.0.b )) / 27.1', :word_form => 'Grass-at-top / ( Plant:droopy ) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P:D ) / ( B::M:>S )', :alpha => "GATOPIDOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '3', :iform => '( 66.2.a ) / (( 66.0 )::( 173.0.b )) / 27.1', :word_form => 'Grass-at-top / ( Plant::droop ) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P::D ) / ( B::M:>S )', :alpha => "GATOPADOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '4', :iform => '( 66.2.a ) / (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a )) / 27.1', :word_form => 'Grass-at-top / ( Plant:<.(( leaves | fruit )::droop )) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P:<.(( L | F )::D )) / ( B::M:>S )', :alpha => "GATOPILOFADOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '5', :iform => '( 66.2.a ) / (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a )) / 27.1', :word_form => 'Grass-at-top / ( Plant:<.(( fruit | leaves )::droop )) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P:<.(( F | L )::D )) / ( B::M:>S )', :alpha => "GATOPIFOLADOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '6', :iform => '( 66.2.a ) / 173.1 / (( 28.0.a )::( 27.0.a ):>( 1.1.b ))', :word_form => 'Grass-at-top / Plant-is-droopy / ( breath::meet:>surface )', :abbrev_form => 'GAT / PID / ( B::M:>S )', :alpha => "GATOPIDOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '7', :iform => '( 66.2.a ) / (( 66.0 ):( 173.0.b )) / (( 28.0.a )::( 27.0.a ):>( 1.1.b ))', :word_form => 'Grass-at-top / ( Plant:droopy ) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P:D ) / ( B::M:>S )', :alpha => "GATOPIDOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '8', :iform => '( 66.2.a ) / (( 66.0 )::( 173.0.b )) / (( 28.0.a )::( 27.0.a ):>( 1.1.b ))', :word_form => 'Grass-at-top / ( Plant::droop ) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P::D ) / ( B::M:>S )', :alpha => "GATOPADOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '9', :iform => '( 66.2.a ) / (( 66.0 ):<.(( 176.0.b | 170.0 )::173.0.a )) / (( 28.0.a )::( 27.0.a ):>( 1.1.b ))', :word_form => 'Grass-at-top / ( Plant:<.(( leaves | fruit )::droop )) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P:<.(( L | F )::D )) / ( B::M:>S )', :alpha => "GATOPILOFADOBAMOS");
Formula.create( :base => '173', :offset => '009', :subindex => '0', :ord => '10', :iform => '( 66.2.a ) / (( 66.0 ):<.(( 170.0 | 176.0.b )::173.0.a )) / (( 28.0.a )::( 27.0.a ):>( 1.1.b ))', :word_form => 'Grass-at-top / ( Plant:<.(( fruit | leaves )::droop )) / ( breath::meet:>surface )', :abbrev_form => 'GAT / ( P:<.(( F | L )::D )) / ( B::M:>S )', :alpha => "GATOPIFOLADOBAMOS");
Formula.create( :base => '173', :offset => '012', :subindex => '0', :ord => '2', :iform => '10.1 {}/ ( S( 10.1 )^2 {}/ 31.1 )', :word_form => 'Person {}/ ( stack( person )^2 {}/ ten )', :abbrev_form => 'P {}/ ( S( P )^2 {}/ T )', :alpha => "PE-OSOPUTE-OT");
Formula.create( :base => '173', :offset => '012', :subindex => '0', :ord => '1', :iform => '173.12', :word_form => '( "umbrella" }', :abbrev_form => 'U', :alpha => "U");
Formula.create( :base => '173', :offset => '012', :subindex => 's', :ord => '1', :iform => '10.1 {}/ ( 1.1.c^2 {}/ 31.1 )', :word_form => 'Person {}/ dot^2 {}/ ten )', :abbrev_form => 'P {}/ ( D^2 {}/ T )', :alpha => "PE-ODUTE-OT");
Formula.create( :base => '173', :offset => '012', :subindex => 's', :ord => '2', :iform => '10.1 {}/ ( 29.1 {}/ 31.1 )', :word_form => 'Person {}/ divide {}/ ten )', :abbrev_form => 'P {}/ ( D {}/ T )', :alpha => "PE-ODE-OT");
Formula.create( :base => '174', :offset => '000', :subindex => '0', :ord => '1', :iform => '174.0', :word_form => 'abstract( "caldron" ) ', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '174', :offset => '000', :subindex => 'a', :ord => '1', :iform => '174.0.a', :word_form => 'abstract( "Bronze" ) ', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '174', :offset => '000', :subindex => 'b', :ord => '1', :iform => '174.0.b', :word_form => 'abstract( "tripod" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '174', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 174.0 / 174.0.b ):<-174.0.a', :word_form => '( caldron / tripod ):<-Bronze', :abbrev_form => '( C / T ):<-B', :alpha => "COTIOB");
Formula.create( :base => '174', :offset => '001', :subindex => '0', :ord => '7', :iform => '1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))', :word_form => 'bar / mouth / ( space {}/ ( divide / nail ))', :abbrev_form => 'B / M / ( S {}/ ( D / N ))', :alpha => "BOMOSEODON");
Formula.create( :base => '174', :offset => '001', :subindex => '0', :ord => '9', :iform => '1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))', :word_form => 'bar / mouth / ( border {}/ ( divide / nail ))', :abbrev_form => 'B / M / ( B {}/ ( D / N ))', :alpha => "BOMOBEODON");
Formula.create( :base => '174', :offset => '001', :subindex => '0', :ord => '11', :iform => '1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))', :word_form => 'bar / square-enclose-nothing / ( space {}/ ( divide / nail ))', :abbrev_form => 'B / SEN / ( S {}/ ( D / N ))', :alpha => "BOSENOSEODON");
Formula.create( :base => '174', :offset => '001', :subindex => '0', :ord => '13', :iform => '1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))', :word_form => 'bar / square-enclose-nothing / ( border {}/ ( divide / nail ))', :abbrev_form => 'B / SEN / ( B {}/ ( D / N ))', :alpha => "BOSENOBEODON");
Formula.create( :base => '174', :offset => '001', :subindex => '0', :ord => '3', :iform => '174.0.a:->( 174.0 / 174.0.b )', :word_form => 'Bronze:->( caldron / tripod )', :abbrev_form => 'B:->( C / T )', :alpha => "BYCOT");
Formula.create( :base => '174', :offset => '001', :subindex => '0', :ord => '1', :iform => '174.1', :word_form => '{ "bronze caldron" }', :abbrev_form => 'TOC', :alpha => "TOC");
Formula.create( :base => '174', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 167.1->33.18.a ) * 174.1', :word_form => '( hill->beta ) * Caldron-of-bronze', :abbrev_form => '( H->B ) * COB', :alpha => "HYBACOB");
Formula.create( :base => '174', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 167.1->33.18.a ) * ( 174.0.a:->( 174.0 / 174.0.b ))', :word_form => '( hill->beta ) * ( Bronze:->( caldron / tripod ))', :abbrev_form => '( H->B ) * ( B:->( C / T ))', :alpha => "HYBABYCOT");
Formula.create( :base => '174', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 167.1->33.18.a ) * (( 174.0 / 174.0.b ):<-174.0.a )', :word_form => '( hill->beta ) * (( caldron / tripod ):<-Bronze )', :abbrev_form => '( H->B ) * (( C / T ):<-B )', :alpha => "HYBACOTIOB");
Formula.create( :base => '174', :offset => '002', :subindex => '0', :ord => '4', :iform => '( 167.1->33.18.a ) * ( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => '( hill->beta ) * ( bar / mouth / ( space {}/ ( divide / nail )))', :abbrev_form => '( H->B ) * ( B / M / ( S {}/ ( D / N )))', :alpha => "HYBABOMOSEODON");
Formula.create( :base => '174', :offset => '002', :subindex => '0', :ord => '5', :iform => '( 167.1->33.18.a ) * ( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => '( hill->beta ) * ( bar / mouth / ( border {}/ ( divide / nail )))', :abbrev_form => '( H->B ) * ( B / M / ( B {}/ ( D / N )))', :alpha => "HYBABOMOBEODON");
Formula.create( :base => '174', :offset => '002', :subindex => '0', :ord => '6', :iform => '( 167.1->33.18.a ) * ( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => '( hill->beta ) * ( bar / square-enclose-nothing / ( space {}/ ( divide / nail )))', :abbrev_form => '( H->B ) * ( B / SEN / ( S {}/ ( D / N )))', :alpha => "HYBABOSENOSEODON");
Formula.create( :base => '174', :offset => '002', :subindex => '0', :ord => '7', :iform => '( 167.1->33.18.a ) * ( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => '( hill->beta ) * ( bar / square-enclose-nothing / ( border {}/ ( divide / nail )))', :abbrev_form => '( H->B ) * ( B / SEN / ( B {}/ ( D / N )))', :alpha => "HYBABOSENOBEODON");
Formula.create( :base => '174', :offset => '003', :subindex => '0', :ord => '7', :iform => '( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))) * ( 125.0.a | 125.0.b )', :word_form => '( bar / mouth / ( space {}/ ( divide / nail ))) * ( Insect | Snake )', :abbrev_form => '( B / M / ( S {}/ ( D / N ))) * ( I | S )', :alpha => "BOMOSEODONAI-OS");
Formula.create( :base => '174', :offset => '003', :subindex => '0', :ord => '9', :iform => '( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))) * ( 125.0.a | 125.0.b )', :word_form => '( bar / mouth / ( border {}/ ( divide / nail ))) * ( Insect | Snake )', :abbrev_form => '( B / M / ( B {}/ ( D / N ))) * ( I | S )', :alpha => "BOMOBEODONAI-OS");
Formula.create( :base => '174', :offset => '003', :subindex => '0', :ord => '11', :iform => '( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))) * ( 125.0.a | 125.0.b )', :word_form => '( bar / square-enclose-nothing / ( space {}/ ( divide / nail ))) * ( Insect | Snake )', :abbrev_form => '( B / SEN / ( S {}/ ( D / N ))) * ( I | S )', :alpha => "BOSENOSEODONAI-OS");
Formula.create( :base => '174', :offset => '003', :subindex => '0', :ord => '13', :iform => '( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 ))) * ( 125.0.a | 125.0.b )', :word_form => '( bar / square-enclose-nothing / ( border {}/ ( divide / nail ))) * ( Insect | Snake )', :abbrev_form => '( B / SEN / ( B {}/ ( D / N ))) * ( I | S )', :alpha => "BOSENOBEODONAI-OS");
Formula.create( :base => '174', :offset => '003', :subindex => '0', :ord => '5', :iform => '(( 174.0 / 174.0.b ):<-174.0.a ) * ( 125.0.a | 125.0.b )', :word_form => '(( caldron / tripod ):<-Bronze ) * ( Insect | Snake )', :abbrev_form => '(( C / T ):<-B ) * ( I | S )', :alpha => "COTIOBAI-OS");
Formula.create( :base => '174', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 174.0.a:->( 174.0 / 174.0.b )) * ( 125.0.a | 125.0.b )', :word_form => '( Bronze:->( caldron / tripod )) * ( Insect | Snake )', :abbrev_form => '( B:->( C / T )) * ( I | S )', :alpha => "BYCOTAI-OS");
Formula.create( :base => '174', :offset => '003', :subindex => '0', :ord => '1', :iform => '174.1 * ( 125.0.a | 125.0.b )', :word_form => 'Caldron-of-bronze * ( Insect | Snake )', :abbrev_form => 'COB * ( I | S )', :alpha => "COBAI-OS");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 122.1 */ 174.1 ) * 91.1', :word_form => '( Skin-of-tiger */ Caldron-of-bronze ) * dog', :abbrev_form => '( SOT */ COB ) * D', :alpha => "SOTAOCOBAD");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 122.1 */ ( 174.0.a:->( 174.0 / 174.0.b ))) * 91.1', :word_form => '( Skin-of-tiger */ ( Bronze:->( caldron / tripod ))) * dog', :abbrev_form => '( SOT */ ( B:->( C / T ))) * D', :alpha => "SOTAOBYCOTAD");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 122.1 */ (( 174.0 / 174.0.b ):<-174.0.a )) * 91.1', :word_form => '( Skin-of-tiger */ (( caldron / tripod ):<-Bronze )) * dog', :abbrev_form => '( SOT */ (( C / T ):<-B )) * D', :alpha => "SOTAOCOTIOBAD");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '5', :iform => '( 122.1 */ ( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))) * 91.1', :word_form => '( Skin-of-tiger */ ( bar / mouth / ( space {}/ ( divide / nail )))) * dog', :abbrev_form => '( SOT */ ( B / M / ( S {}/ ( D / N )))) * D', :alpha => "SOTAOBOMOSEODONAD");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '6', :iform => '( 122.1 */ ( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))) * 91.1', :word_form => '( Skin-of-tiger */ ( bar / mouth / ( border {}/ ( divide / nail )))) * dog', :abbrev_form => '( SOT */ ( B / M / ( B {}/ ( D / N )))) * D', :alpha => "SOTAOBOMOBEODONAD");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '7', :iform => '( 122.1 */ ( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))) * 91.1', :word_form => '( Skin-of-tiger */ ( bar / square-enclose-nothing / ( space {}/ ( divide / nail )))) * dog', :abbrev_form => '( SOT */ ( B / SEN / ( S {}/ ( D / N )))) * D', :alpha => "SOTAOBOSENOSEODONAD");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '8', :iform => '( 122.1 */ ( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))) * 91.1', :word_form => '( Skin-of-tiger */ ( bar / square-enclose-nothing / ( border {}/ ( divide / nail )))) * dog', :abbrev_form => '( SOT */ ( B / SEN / ( B {}/ ( D / N )))) * D', :alpha => "SOTAOBOSENOBEODONAD");
Formula.create( :base => '174', :offset => '004', :subindex => '0', :ord => '1', :iform => '174.4.a * 91.1', :word_form => 'Sacrificial-vessel * dog', :abbrev_form => 'SV * D', :alpha => "SVAD");
Formula.create( :base => '174', :offset => '004', :subindex => 'a', :ord => '1', :iform => '122.1 */ 174.1', :word_form => 'Skin-of-tiger */ Caldron-of-bronze', :abbrev_form => 'SOT */ COB', :alpha => "SOTAOCOB");
Formula.create( :base => '174', :offset => '004', :subindex => 'a', :ord => '2', :iform => '122.1 */ ( 174.0.a:->( 174.0 / 174.0.b ))', :word_form => 'Skin-of-tiger */ ( Bronze:->( caldron / tripod ))', :abbrev_form => 'SOT */ ( B:->( C / T ))', :alpha => "SOTAOBYCOT");
Formula.create( :base => '174', :offset => '004', :subindex => 'a', :ord => '3', :iform => '122.1 */ (( 174.0 / 174.0.b ):<-174.0.a )', :word_form => 'Skin-of-tiger */ (( caldron / tripod ):<-Bronze )', :abbrev_form => 'SOT */ (( C / T ):<-B )', :alpha => "SOTAOCOTIOB");
Formula.create( :base => '174', :offset => '004', :subindex => 'a', :ord => '4', :iform => '122.1 */ ( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => 'Skin-of-tiger */ ( bar / mouth / ( space {}/ ( divide / nail )))', :abbrev_form => 'SOT */ ( B / M / ( S {}/ ( D / N )))', :alpha => "SOTAOBOMOSEODON");
Formula.create( :base => '174', :offset => '004', :subindex => 'a', :ord => '5', :iform => '122.1 */ ( 1.1.a / 68.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => 'Skin-of-tiger */ ( bar / mouth / ( border {}/ ( divide / nail )))', :abbrev_form => 'SOT */ ( B / M / ( B {}/ ( D / N )))', :alpha => "SOTAOBOMOBEODON");
Formula.create( :base => '174', :offset => '004', :subindex => 'a', :ord => '6', :iform => '122.1 */ ( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => 'Skin-of-tiger */ ( bar / square-enclose-nothing / ( space {}/ ( divide / nail )))', :abbrev_form => 'SOT */ ( B / SEN / ( S {}/ ( D / N )))', :alpha => "SOTAOBOSENOSEODON");
Formula.create( :base => '174', :offset => '004', :subindex => 'a', :ord => '7', :iform => '122.1 */ ( 1.1.a / 69.1 / ( 23.1 {}/ ( 29.1 / 36.1 )))', :word_form => 'Skin-of-tiger */ ( bar / square-enclose-nothing / ( border {}/ ( divide / nail )))', :abbrev_form => 'SOT */ ( B / SEN / ( B {}/ ( D / N )))', :alpha => "SOTAOBOSENOBEODON");
Formula.create( :base => '174', :offset => '004', :subindex => 's', :ord => '1', :iform => '29.68 * 91.1', :word_form => 'south * dog', :abbrev_form => 'S * D', :alpha => "SAD");
Formula.create( :base => '175', :offset => '000', :subindex => '0', :ord => '1', :iform => '175.0', :word_form => 'abstract( "house" ) ', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '175', :offset => '000', :subindex => 'a', :ord => '1', :iform => '175.0.a', :word_form => 'abstract( "frame" ) ', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '175', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 175.0 ).( 175.0.a )', :word_form => 'house.frame', :abbrev_form => 'H.F', :alpha => "HEF");
Formula.create( :base => '175', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 175.0 ).( 175.0.a )', :word_form => 'house.frame', :abbrev_form => 'H.F', :alpha => "FOH");
Formula.create( :base => '175', :offset => '001', :subindex => '0', :ord => '1', :iform => '175.1', :word_form => '{ "interlocking framework of house" }', :abbrev_form => 'FW', :alpha => "FW");
Formula.create( :base => '175', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 77.0->77.0.a ) * 175.1', :word_form => '( tree->wood ) * frame', :abbrev_form => '( T->W ) * F', :alpha => "TYWAF");
Formula.create( :base => '175', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 77.0->77.0.a ) * (( 175.0 ).( 175.0.a ))', :word_form => '( tree->wood ) * ( house.frame )', :abbrev_form => '( T->W ) * ( H.F )', :alpha => "TYWAHEF");
Formula.create( :base => '175', :offset => '002', :subindex => 's', :ord => '1', :iform => '( 77.0->77.0.a ) * 18.36', :word_form => '( tree->wood ) * hook', :abbrev_form => '( T->W ) * H', :alpha => "TYWAH");
Formula.create( :base => '175', :offset => '002', :subindex => 's', :ord => '2', :iform => '( 77.0->77.0.a ) * (( 17.0 ):( 17.0.a ) {}/ ( 68.1->19.1 ))', :word_form => '( tree->wood ) * ( vine:tangled {}/ ( mouth->cocoon ))', :abbrev_form => '( T->W ) * ( V:T {}/ ( M->C ))', :alpha => "TYWAVITEOMYC");
Formula.create( :base => '175', :offset => '002', :subindex => 's', :ord => '3', :iform => '( 77.0->77.0.a ) * (( 68.1->19.1 ) \* ( 17.0 ):( 17.0.a ))', :word_form => '( tree->wood ) * (( mouth->cocoon ) \* vine:tangled ))', :abbrev_form => '( T->W ) * (( M->C ) \* V:T )', :alpha => "TYWAMYCUAVIT");
Formula.create( :base => '175', :offset => '003', :subindex => '0', :ord => '1', :iform => '2.21.a * 175.1', :word_form => 'Side-water * frame', :abbrev_form => 'SW * F', :alpha => "SWAF");
Formula.create( :base => '175', :offset => '003', :subindex => '0', :ord => '2', :iform => '2.21.a * (( 175.0 ).( 175.0.a ))', :word_form => 'Side-water * ( house.frame )', :abbrev_form => 'SW * ( H.F )', :alpha => "SWAHEF");
Formula.create( :base => '175', :offset => '003', :subindex => 's', :ord => '1', :iform => '2.21.a * 18.36', :word_form => 'Side-water * hook', :abbrev_form => 'SW * H', :alpha => "SWAH");
Formula.create( :base => '175', :offset => '003', :subindex => 's', :ord => '2', :iform => '2.21.a * (( 17.0 ):( 17.0.a ) {}/ ( 68.1->19.1 ))', :word_form => 'Side-water * ( vine:tangled {}/ ( mouth->cocoon ))', :abbrev_form => 'SW * ( V:T {}/ ( M->C ))', :alpha => "SWAVITEOMYC");
Formula.create( :base => '175', :offset => '003', :subindex => 's', :ord => '3', :iform => '2.21.a * (( 68.1->19.1 ) \* ( 17.0 ):( 17.0.a ))', :word_form => 'Side-water * (( mouth->cocoon ) \* vine:tangled ))', :abbrev_form => 'SW * (( M->C ) \* V:T )', :alpha => "SWAMYCUAVIT");
Formula.create( :base => '175', :offset => '004', :subindex => '0', :ord => '1', :iform => '( 150.0 ).( 150.0.a ) * 175.1', :word_form => 'mollusk.shell * frame', :abbrev_form => 'M.S * F', :alpha => "MESAF");
Formula.create( :base => '175', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 150.0 ).( 150.0.a ) * 175.1', :word_form => 'mollusk.shell * frame', :abbrev_form => 'M.S * F', :alpha => "SOMAF");
Formula.create( :base => '175', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 150.0 ).( 150.0.a ) * (( 175.0 ).( 175.0.a ))', :word_form => 'mollusk.shell * ( house.frame )', :abbrev_form => 'M.S * ( H.F )', :alpha => "MESAHEF");
Formula.create( :base => '175', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 150.0 ).( 150.0.a ) * (( 175.0 ).( 175.0.a ))', :word_form => 'mollusk.shell * ( house.frame )', :abbrev_form => 'M.S * ( H.F )', :alpha => "SOMAHEF");
Formula.create( :base => '175', :offset => '004', :subindex => 's', :ord => '1', :iform => '( 150.0 ).( 150.0.a ) * 18.36', :word_form => 'mollusk.shell * hook', :abbrev_form => 'M.S * H', :alpha => "MESAH");
Formula.create( :base => '175', :offset => '004', :subindex => 's', :ord => '2', :iform => '( 150.0 ).( 150.0.a ) * 18.36', :word_form => 'mollusk.shell * hook', :abbrev_form => 'M.S * H', :alpha => "SOMAH");
Formula.create( :base => '175', :offset => '004', :subindex => 's', :ord => '3', :iform => '( 150.0 ).( 150.0.a ) * (( 17.0 ):( 17.0.a ) {}/ ( 68.1->19.1 ))', :word_form => 'mollusk.shell * ( vine:tangled {}/ ( mouth->cocoon ))', :abbrev_form => 'M.S * ( V:T {}/ ( M->C ))', :alpha => "MESAVITEOMYC");
Formula.create( :base => '175', :offset => '004', :subindex => 's', :ord => '4', :iform => '( 150.0 ).( 150.0.a ) * (( 17.0 ):( 17.0.a ) {}/ ( 68.1->19.1 ))', :word_form => 'mollusk.shell * ( vine:tangled {}/ ( mouth->cocoon ))', :abbrev_form => 'M.S * ( V:T {}/ ( M->C ))', :alpha => "SOMAVITEOMYC");
Formula.create( :base => '175', :offset => '004', :subindex => 's', :ord => '5', :iform => '( 150.0 ).( 150.0.a ) * (( 68.1->19.1 ) \* ( 17.0 ):( 17.0.a ))', :word_form => 'mollusk.shell * (( mouth->cocoon ) \* vine:tangled ))', :abbrev_form => 'M.S * (( M->C ) \* V:T )', :alpha => "MESAMYCUAVIT");
Formula.create( :base => '175', :offset => '004', :subindex => 's', :ord => '6', :iform => '( 150.0 ).( 150.0.a ) * (( 68.1->19.1 ) \* ( 17.0 ):( 17.0.a ))', :word_form => 'mollusk.shell * (( mouth->cocoon ) \* vine:tangled ))', :abbrev_form => 'M.S * (( M->C ) \* V:T )', :alpha => "SOMAMYCUAVIT");
Formula.create( :base => '175', :offset => '005', :subindex => '0', :ord => '2', :iform => '( 54.0.a )::( 54.0.b ) * 175.1', :word_form => 'Woman::kneel * frame', :abbrev_form => 'W::K * F', :alpha => "WAKAF");
Formula.create( :base => '175', :offset => '005', :subindex => '0', :ord => '4', :iform => '( 54.0.a )::( 54.0.b ) * (( 175.0 ).( 175.0.a ))', :word_form => 'Woman::kneel * ( house.frame )', :abbrev_form => 'W::K * ( H.F )', :alpha => "WAKAHEF");
Formula.create( :base => '175', :offset => '005', :subindex => '0', :ord => '1', :iform => '54.1 * 175.1', :word_form => 'Woman * frame', :abbrev_form => 'W * F', :alpha => "WAF");
Formula.create( :base => '175', :offset => '005', :subindex => '0', :ord => '3', :iform => '54.1 * (( 175.0 ).( 175.0.a ))', :word_form => 'Woman * ( house.frame )', :abbrev_form => 'W * ( H.F )', :alpha => "WAHEF");
Formula.create( :base => '175', :offset => '006', :subindex => '0', :ord => '1', :iform => '68.78 * 175.1', :word_form => 'Speak-a-word * frame', :abbrev_form => 'SAW * F', :alpha => "SAWAF");
Formula.create( :base => '175', :offset => '006', :subindex => '0', :ord => '2', :iform => '68.78 * (( 175.0 ).( 175.0.a ))', :word_form => 'Speak-a-word * ( house.frame )', :abbrev_form => 'SAW * ( H.F )', :alpha => "SAWAHEF");
Formula.create( :base => '175', :offset => '006', :subindex => 's', :ord => '1', :iform => '68.78 * 97.1', :word_form => 'Speak-a-word * well', :abbrev_form => 'SAW * W', :alpha => "SAWAW");
Formula.create( :base => '175', :offset => '007', :subindex => '0', :ord => '1', :iform => '1.1.a / base( 175.1 )', :word_form => 'bar / base frame )', :abbrev_form => 'B / B( F )', :alpha => "BOBOF");
Formula.create( :base => '175', :offset => '007', :subindex => '0', :ord => '2', :iform => '1.1.a / base(( 175.0 ).( 175.0.a ))', :word_form => 'bar / base( house.frame )', :abbrev_form => 'B / B( H.F )', :alpha => "BOBOHEF");
Formula.create( :base => '175', :offset => '008', :subindex => '0', :ord => '1', :iform => '103.1 / 175.1', :word_form => 'Claw / frame', :abbrev_form => 'C / F', :alpha => "COF");
Formula.create( :base => '175', :offset => '008', :subindex => '0', :ord => '2', :iform => '103.1 / (( 175.0 ).( 175.0.a ))', :word_form => 'Claw / ( house.frame )', :abbrev_form => 'C / ( H.F )', :alpha => "COHEF");
Formula.create( :base => '176', :offset => '000', :subindex => '0', :ord => '1', :iform => '176.0', :word_form => 'abstract( "branch" ) ', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '176', :offset => '000', :subindex => 'a', :ord => '1', :iform => '176.0.a', :word_form => 'abstract( "branches" ) ', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '176', :offset => '000', :subindex => 'b', :ord => '1', :iform => '176.0.b', :word_form => 'abstract( "leaves" ) ', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '176', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1', :word_form => '( Divide {} post^2 ) / bar / divide / ( pestle | shield )', :abbrev_form => '( D {} P^2 ) / B / D / ( P | S )', :alpha => "DEPUTOBODOPOS");
Formula.create( :base => '176', :offset => '001', :subindex => '0', :ord => '2', :iform => '176.0.b :* 176.0.a', :word_form => 'Leaves :* branches  ', :abbrev_form => 'L :* B', :alpha => "LAB");
Formula.create( :base => '176', :offset => '001', :subindex => '0', :ord => '3', :iform => '176.0.b :#/ 176.0.a', :word_form => 'Leaves :#/ branches  ', :abbrev_form => 'L :#/ B', :alpha => "LOLOB");
Formula.create( :base => '176', :offset => '001', :subindex => '0', :ord => '1', :iform => '176.1', :word_form => '{ "branches and foliage" }', :abbrev_form => 'BAL', :alpha => "BAL");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 176.0.b :* 176.0.a ) #/ 53.2', :word_form => '( Leaves :* branches ) #/ rags', :abbrev_form => '( L :* B ) #/ R', :alpha => "LABOLOR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 176.0.b :#/ 176.0.a ) #/ 53.2', :word_form => '( Leaves :#/ branches ) #/ rags', :abbrev_form => '( L :#/ B ) #/ R', :alpha => "LOLOBOLOR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '6', :iform => '( 176.0.b :* 176.0.a ) #/ (( 53.0.a ):( 53.0.c ))', :word_form => '( Leaves :* branches ) #/ ( towel:ragged )', :abbrev_form => '( L :* B ) #/ ( T:R )', :alpha => "LABOLOTIR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '7', :iform => '( 176.0.b :#/ 176.0.a ) #/ (( 53.0.a ):( 53.0.c ))', :word_form => '( Leaves :#/ branches ) #/ ( towel:ragged )', :abbrev_form => '( L :#/ B ) #/ ( T:R )', :alpha => "LOLOBOLOTIR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '10', :iform => '( 176.0.b :* 176.0.a ) #/ ( stack( 1.1.c^2 ) |%| 53.1 )', :word_form => '( Leaves :* branches ) #/ ( stack(dot^2) |%| cloth )', :abbrev_form => '( L :* B ) #/ ( S(D^2) |%| T )', :alpha => "LABOLOSODUTILOT");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '11', :iform => '( 176.0.b :#/ 176.0.a ) #/ ( stack( 1.1.c^2 ) |%| 53.1 )', :word_form => '( Leaves :#/ branches ) #/ ( stack(dot^2) |%| cloth )', :abbrev_form => '( L :#/ B ) #/ ( S(D^2) |%| T )', :alpha => "LOLOBOLOSODUTILOT");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '4', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) #/ 53.2', :word_form => '(( Divide {} post^2 ) / bar / divide / ( pestle | shield )) #/ rags', :abbrev_form => '(( D {} P^2 ) / B / D / ( P | S )) #/ R', :alpha => "DEPUTOBODOPOSOLOR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '8', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) #/ (( 53.0.a ):( 53.0.c ))', :word_form => '(( Divide {} post^2 ) / bar / divide / ( pestle | shield )) #/ ( towel:ragged )', :abbrev_form => '(( D {} P^2 ) / B / D / ( P | S )) #/ ( T:R )', :alpha => "DEPUTOBODOPOSOLOTIR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '12', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) #/ ( stack( 1.1.c^2 ) |%| 53.1 )', :word_form => '(( Divide {} post^2 ) / bar / divide / ( pestle | shield )) #/ ( stack(dot^2) |%| cloth )', :abbrev_form => '(( D {} P^2 ) / B / D / ( P | S )) #/ ( S(D^2) |%| T )', :alpha => "DEPUTOBODOPOSOLOSODUTILOT");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '1', :iform => '176.1 #/ 53.2', :word_form => 'Leaves-and-branches #/ rags', :abbrev_form => 'LAB #/ R', :alpha => "LABOLOR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '5', :iform => '176.1 #/ (( 53.0.a ):( 53.0.c ))', :word_form => 'Leaves-and-branches #/ ( towel:ragged )', :abbrev_form => 'LAB #/ ( T:R )', :alpha => "LABOLOTIR");
Formula.create( :base => '176', :offset => '002', :subindex => '0', :ord => '9', :iform => '176.1 #/ ( stack( 1.1.c^2 ) |%| 53.1 )', :word_form => 'Leaves-and-branches #/ ( stack(dot^2) |%| cloth )', :abbrev_form => 'LAB #/ ( S(D^2) |%| T )', :alpha => "LABOLOSODUTILOT");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '5', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * 37.1 ) / 44.3', :word_form => '((( Leaves :* branches ) / mortar ) * Flap-of-hand ) / gold', :abbrev_form => '((( L :* B ) / M ) * FOH ) / G', :alpha => "LABOMAFOHOG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '7', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * 37.1 ) / 44.3', :word_form => '((( Leaves :#/ branches ) / mortar ) * Flap-of-hand ) / gold', :abbrev_form => '((( L :#/ B ) / M ) * FOH ) / G', :alpha => "LOLOBOMAFOHOG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '13', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )) / 44.3', :word_form => '((( Leaves :* branches ) / mortar ) * ( Flap / ( hand->again ))) / gold', :abbrev_form => '((( L :* B ) / M ) * ( F / ( H->A ))) / G', :alpha => "LABOMAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '15', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )) / 44.3', :word_form => '((( Leaves :#/ branches ) / mortar ) * ( Flap / ( hand->again ))) / gold', :abbrev_form => '((( L :#/ B ) / M ) * ( F / ( H->A ))) / G', :alpha => "LOLOBOMAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '21', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / 44.3', :word_form => '((( Leaves :* branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / gold', :abbrev_form => '((( L :* B ) / M ) * (( W:S::F ) / ( H->A ))) / G', :alpha => "LABOMAWISAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '23', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / 44.3', :word_form => '((( Leaves :#/ branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / gold', :abbrev_form => '((( L :#/ B ) / M ) * (( W:S::F ) / ( H->A ))) / G', :alpha => "LOLOBOMAWISAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '31', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :* branches ) / mortar ) * Flap-of-hand ) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :* B ) / M ) * FOH ) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHOGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '33', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :#/ branches ) / mortar ) * Flap-of-hand ) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :#/ B ) / M ) * FOH ) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LOLOBOMAFOHOGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '39', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :* branches ) / mortar ) * ( Flap / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :* B ) / M ) * ( F / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '41', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :#/ branches ) / mortar ) * ( Flap / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :#/ B ) / M ) * ( F / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LOLOBOMAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '47', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :* branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :* B ) / M ) * (( W:S::F ) / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LABOMAWISAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '49', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :#/ branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :#/ B ) / M ) * (( W:S::F ) / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LOLOBOMAWISAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '57', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :* branches ) / mortar ) * Flap-of-hand ) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :* B ) / M ) * FOH ) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHOGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '59', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :#/ branches ) / mortar ) * Flap-of-hand ) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :#/ B ) / M ) * FOH ) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LOLOBOMAFOHOGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '65', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :* branches ) / mortar ) * ( Flap / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :* B ) / M ) * ( F / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '67', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :#/ branches ) / mortar ) * ( Flap / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :#/ B ) / M ) * ( F / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LOLOBOMAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '73', :iform => '((( 176.0.b :* 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :* branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :* B ) / M ) * (( W:S::F ) / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LABOMAWISAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '75', :iform => '((( 176.0.b :#/ 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '((( Leaves :#/ branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '((( L :#/ B ) / M ) * (( W:S::F ) / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LOLOBOMAWISAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '3', :iform => '(( 176.1 / 131.1 ) * 37.1 ) / 44.3', :word_form => '(( Leaves-and-branches / mortar ) * Flap-of-hand ) / gold', :abbrev_form => '(( LAB / M ) * FOH ) / G', :alpha => "LABOMAFOHOG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '11', :iform => '(( 176.1 / 131.1 ) * ( 37.1 / 14.1 )) / 44.3', :word_form => '(( Leaves-and-branches / mortar ) * ( Flap / ( hand->again ))) / gold', :abbrev_form => '(( LAB / M ) * ( F / ( H->A ))) / G', :alpha => "LABOMAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '19', :iform => '(( 176.1 / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / 44.3', :word_form => '(( Leaves-and-branches / mortar ) * (( wing:short::flap ) / ( hand->again ))) / gold', :abbrev_form => '(( LAB / M ) * (( W:S::F ) / ( H->A ))) / G', :alpha => "LABOMAWISAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '29', :iform => '(( 176.1 / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(( Leaves-and-branches / mortar ) * Flap-of-hand ) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '(( LAB / M ) * FOH ) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHOGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '37', :iform => '(( 176.1 / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(( Leaves-and-branches / mortar ) * ( Flap / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '(( LAB / M ) * ( F / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '45', :iform => '(( 176.1 / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(( Leaves-and-branches / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '(( LAB / M ) * (( W:S::F ) / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "LABOMAWISAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '55', :iform => '(( 176.1 / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(( Leaves-and-branches / mortar ) * Flap-of-hand ) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '(( LAB / M ) * FOH ) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHOGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '63', :iform => '(( 176.1 / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(( Leaves-and-branches / mortar ) * ( Flap / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '(( LAB / M ) * ( F / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LABOMAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '71', :iform => '(( 176.1 / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(( Leaves-and-branches / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '(( LAB / M ) * (( W:S::F ) / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "LABOMAWISAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '9', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * 37.1 ) / 44.3', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * Flap-of-hand ) / gold', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * FOH ) / G', :alpha => "DEPUTOBODOPOSOMAFOHOG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '17', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * ( 37.1 / 14.1 )) / 44.3', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * ( Flap / ( hand->again ))) / gold', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * ( F / ( H->A ))) / G', :alpha => "DEPUTOBODOPOSOMAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '25', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / 44.3', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / gold', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * (( W:S::F ) / ( H->A ))) / G', :alpha => "DEPUTOBODOPOSOMAWISAFOHYA-OG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '35', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * Flap-of-hand ) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * FOH ) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "DEPUTOBODOPOSOMAFOHOGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '43', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * ( Flap / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * ( F / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "DEPUTOBODOPOSOMAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '51', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * (( W:S::F ) / ( H->A ))) / ( G / AB / ( D^2 *]|[* G ))', :alpha => "DEPUTOBODOPOSOMAWISAFOHYA-OGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '61', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * 37.1 ) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * Flap-of-hand ) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * FOH ) / ( G / C / ( D^2 *]|[* G ))', :alpha => "DEPUTOBODOPOSOMAFOHOGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '69', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * ( 37.1 / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * ( Flap / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * ( F / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "DEPUTOBODOPOSOMAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '77', :iform => '((( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )) / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => '(((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * (( wing:short::flap ) / ( hand->again ))) / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => '(((( D {} P^2 ) / B / D / ( P | S )) / M ) * (( W:S::F ) / ( H->A ))) / ( G / C / ( D^2 *]|[* G ))', :alpha => "DEPUTOBODOPOSOMAWISAFOHYA-OGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '1', :iform => '176.3.a / 44.3', :word_form => 'Grind-rice / gold', :abbrev_form => 'GR / G', :alpha => "GROG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '27', :iform => '176.3.a / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => 'Grind-rice / ( Gather / angle-bar / ( dot^2 *]|[* ground ))', :abbrev_form => 'GR / ( G / AB / ( D^2 *]|[* G ))', :alpha => "GROGO-ABODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => '0', :ord => '53', :iform => '176.3.a / ( 44.1 / 1.1.i / ( 1.1.c^2 *]|[* 70.1 ))', :word_form => 'Grind-rice / ( Gather / contact / ( dot^2 *]|[* ground ))', :abbrev_form => 'GR / ( G / C / ( D^2 *]|[* G ))', :alpha => "GROGOCODUTILAG");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '2', :iform => '(( 176.0.b :* 176.0.a ) / 131.1 ) * 37.1', :word_form => '(( Leaves :* branches ) / mortar ) * Flap-of-hand', :abbrev_form => '(( L :* B ) / M ) * FOH', :alpha => "LABOMAFOH");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '3', :iform => '(( 176.0.b :#/ 176.0.a ) / 131.1 ) * 37.1', :word_form => '(( Leaves :#/ branches ) / mortar ) * Flap-of-hand', :abbrev_form => '(( L :#/ B ) / M ) * FOH', :alpha => "LOLOBOMAFOH");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '6', :iform => '(( 176.0.b :* 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )', :word_form => '(( Leaves :* branches ) / mortar ) * ( Flap / ( hand->again ))', :abbrev_form => '(( L :* B ) / M ) * ( F / ( H->A ))', :alpha => "LABOMAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '7', :iform => '(( 176.0.b :#/ 176.0.a ) / 131.1 ) * ( 37.1 / 14.1 )', :word_form => '(( Leaves :#/ branches ) / mortar ) * ( Flap / ( hand->again ))', :abbrev_form => '(( L :#/ B ) / M ) * ( F / ( H->A ))', :alpha => "LOLOBOMAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '10', :iform => '(( 176.0.b :* 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )', :word_form => '(( Leaves :* branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))', :abbrev_form => '(( L :* B ) / M ) * (( W:S::F ) / ( H->A ))', :alpha => "LABOMAWISAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '11', :iform => '(( 176.0.b :#/ 176.0.a ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )', :word_form => '(( Leaves :#/ branches ) / mortar ) * (( wing:short::flap ) / ( hand->again ))', :abbrev_form => '(( L :#/ B ) / M ) * (( W:S::F ) / ( H->A ))', :alpha => "LOLOBOMAWISAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '1', :iform => '( 176.1 / 131.1 ) * 37.1', :word_form => '( Leaves-and-branches / mortar ) * Flap-of-hand', :abbrev_form => '( LAB / M ) * FOH', :alpha => "LABOMAFOH");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '5', :iform => '( 176.1 / 131.1 ) * ( 37.1 / 14.1 )', :word_form => '( Leaves-and-branches / mortar ) * ( Flap / ( hand->again ))', :abbrev_form => '( LAB / M ) * ( F / ( H->A ))', :alpha => "LABOMAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '9', :iform => '( 176.1 / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )', :word_form => '( Leaves-and-branches / mortar ) * (( wing:short::flap ) / ( hand->again ))', :abbrev_form => '( LAB / M ) * (( W:S::F ) / ( H->A ))', :alpha => "LABOMAWISAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '4', :iform => '(( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * 37.1', :word_form => '((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * Flap-of-hand', :abbrev_form => '((( D {} P^2 ) / B / D / ( P | S )) / M ) * FOH', :alpha => "DEPUTOBODOPOSOMAFOH");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '8', :iform => '(( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * ( 37.1 / 14.1 )', :word_form => '((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * ( Flap / ( hand->again ))', :abbrev_form => '((( D {} P^2 ) / B / D / ( P | S )) / M ) * ( F / ( H->A ))', :alpha => "DEPUTOBODOPOSOMAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 'a', :ord => '12', :iform => '(( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) / 131.1 ) * (( 37.0:178.0.c ::37.0.a ) / 14.1 )', :word_form => '((( Divide {} post^2 ) / bar / divide / ( pestle | shield )) / mortar ) * (( wing:short::flap ) / ( hand->again ))', :abbrev_form => '((( D {} P^2 ) / B / D / ( P | S )) / M ) * (( W:S::F ) / ( H->A ))', :alpha => "DEPUTOBODOPOSOMAWISAFOHYA");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '3', :iform => '( 176.0.b :* 176.0.a ) }{/ 20.1', :word_form => '( Leaves :* branches ) }{/ pit', :abbrev_form => '( L :* B ) }{/ P', :alpha => "LABIOP");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '5', :iform => '( 176.0.b :#/ 176.0.a ) }{/ 20.1', :word_form => '( Leaves :#/ branches ) }{/ pit', :abbrev_form => '( L :#/ B ) }{/ P', :alpha => "LOLOBIOP");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '7', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) }{/ 20.1', :word_form => '(( Divide {} post^2 ) / bar / divide / ( pestle | shield )) }{/ pit', :abbrev_form => '(( D {} P^2 ) / B / D / ( P | S )) }{/ P', :alpha => "DEPUTOBODOPOSIOP");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '1', :iform => '176.1 }{/ 20.1', :word_form => 'Leaves-and-branches }{/ pit', :abbrev_form => 'LAB }{/ P', :alpha => "LABIOP");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '9', :iform => '20.1 \{} 176.1', :word_form => 'Pit \{} Leaves-and-branches', :abbrev_form => 'P \{} LAB', :alpha => "PUELAB");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '11', :iform => '20.1 \{} ( 176.0.b :* 176.0.a )', :word_form => 'Pit \{} ( Leaves :* branches )', :abbrev_form => 'P \{} ( L :* B )', :alpha => "PUELAB");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '13', :iform => '20.1 \{} ( 176.0.b :#/ 176.0.a )', :word_form => 'Pit \{} ( Leaves :#/ branches )', :abbrev_form => 'P \{} ( L :#/ B )', :alpha => "PUELOLOB");
Formula.create( :base => '176', :offset => '003', :subindex => 's', :ord => '15', :iform => '20.1 \{} ( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 )', :word_form => 'Pit \{} (( Divide {} post^2 ) / bar / divide / ( pestle | shield ))', :abbrev_form => 'P \{} (( D {} P^2 ) / B / D / ( P | S ))', :alpha => "PUEDEPUTOBODOPOS");
Formula.create( :base => '176', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 176.0.b :* 176.0.a ) #/ ( 77.0->77.0.a )', :word_form => '( Leaves :* branches ) #/ ( tree->wood )', :abbrev_form => '( L :* B ) #/ ( T->W )', :alpha => "LABOLOTYW");
Formula.create( :base => '176', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 176.0.b :#/ 176.0.a ) #/ ( 77.0->77.0.a )', :word_form => '( Leaves :#/ branches ) #/ ( tree->wood )', :abbrev_form => '( L :#/ B ) #/ ( T->W )', :alpha => "LOLOBOLOTYW");
Formula.create( :base => '176', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) #/ ( 77.0->77.0.a )', :word_form => '(( Divide {} post^2 ) / bar / divide / ( pestle | shield )) #/ ( tree->wood )', :abbrev_form => '(( D {} P^2 ) / B / D / ( P | S )) #/ ( T->W )', :alpha => "DEPUTOBODOPOSOLOTYW");
Formula.create( :base => '176', :offset => '004', :subindex => '0', :ord => '1', :iform => '176.1 #/ ( 77.0->77.0.a )', :word_form => 'Leaves-and-branches #/ ( tree->wood )', :abbrev_form => 'LAB #/ ( T->W )', :alpha => "LABOLOTYW");
Formula.create( :base => '176', :offset => '004', :subindex => 's', :ord => '1', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a', :word_form => '(( Divide {} post^2 ) / bar', :abbrev_form => '(( D {} P^2 ) / B', :alpha => "DEPUTOB");
Formula.create( :base => '176', :offset => '005', :subindex => '0', :ord => '2', :iform => '(( 176.0.b :* 176.0.a ) #/ 31.2 ) * 14.63', :word_form => '(( Leaves :* branches ) #/ scholar ) * ( hand:->inch )', :abbrev_form => '(( L :* B ) #/ S ) * ( H:->I )', :alpha => "LABOLOSAHYI");
Formula.create( :base => '176', :offset => '005', :subindex => '0', :ord => '3', :iform => '(( 176.0.b :#/ 176.0.a ) #/ 31.2 ) * 14.63', :word_form => '(( Leaves :#/ branches ) #/ scholar ) * ( hand:->inch )', :abbrev_form => '(( L :#/ B ) #/ S ) * ( H:->I )', :alpha => "LOLOBOLOSAHYI");
Formula.create( :base => '176', :offset => '005', :subindex => '0', :ord => '1', :iform => '( 176.1 #/ 31.2 ) * 14.63', :word_form => '( Leaves-and-branches #/ scholar ) * ( hand:->inch )', :abbrev_form => '( LAB #/ S ) * ( H:->I )', :alpha => "LABOLOSAHYI");
Formula.create( :base => '176', :offset => '005', :subindex => '0', :ord => '4', :iform => '(( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 1.1.a / 70.1 ) * 14.63', :word_form => '(( Divide {} post^2 ) / bar / divide / bar / earth ) * ( hand:->inch )', :abbrev_form => '((( D {} P^2 ) / B / D / B / E ) * ( H:->I )', :alpha => "DEPUTOBODOBO-E-AHYI");
Formula.create( :base => '176', :offset => '005', :subindex => '0', :ord => '5', :iform => '(( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 1.1.a / 70.1 ) * 14.63', :word_form => '(( Divide {} post^2 ) / bar / divide / bar / ground ) * ( hand:->inch )', :abbrev_form => '((( D {} P^2 ) / B / D / B / G ) * ( H:->I )', :alpha => "DEPUTOBODOBOGAHYI");
Formula.create( :base => '176', :offset => '005', :subindex => 's', :ord => '1', :iform => '14.1 * 14.63', :word_form => '( hand->again ) * ( hand:->inch )', :abbrev_form => '( H->A ) * ( H:->I )', :alpha => "HYA-AHYI");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '2', :iform => '( 176.0.b :* 176.0.a ) #/ ( 15.1::15.0.c:>14.1 )', :word_form => '( Leaves :* branches ) #/ ( Left::join:> right )', :abbrev_form => '( L :* B ) #/ ( L::J:>R )', :alpha => "LABOLOLAJOR");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '3', :iform => '( 176.0.b :#/ 176.0.a ) #/ ( 15.1::15.0.c:>14.1 )', :word_form => '( Leaves :#/ branches ) #/ ( Left::join:> right )', :abbrev_form => '( L :#/ B ) #/ ( L::J:>R )', :alpha => "LOLOBOLOLAJOR");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '6', :iform => '( 176.0.b :* 176.0.a ) #/ (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Leaves :* branches ) #/ ( person::show:>arms )', :abbrev_form => '( L :* B ) #/ ( P::S:>A )', :alpha => "LABOLOPASOA");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '7', :iform => '( 176.0.b :#/ 176.0.a ) #/ (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '( Leaves :#/ branches ) #/ ( person::show:>arms )', :abbrev_form => '( L :#/ B ) #/ ( P::S:>A )', :alpha => "LOLOBOLOPASOA");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '4', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) #/ ( 15.1::15.0.c:>14.1 )', :word_form => '(( Divide {} post^2 ) / bar / divide / ( pestle | shield )) #/ ( Left::join:> right )', :abbrev_form => '(( D {} P^2 ) / B / D / ( P | S )) #/ ( L::J:>R )', :alpha => "DEPUTOBODOPOSOLOLAJOR");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '8', :iform => '( 29.1 {} 4.1^2 ) / 1.1.a / 29.1 / 50.1 ) #/ (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => '(( Divide {} post^2 ) / bar / divide / ( pestle | shield )) #/ ( person::show:>arms )', :abbrev_form => '(( D {} P^2 ) / B / D / ( P | S )) #/ ( P::S:>A )', :alpha => "DEPUTOBODOPOSOLOPASOA");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '1', :iform => '176.1 #/ ( 15.1::15.0.c:>14.1 )', :word_form => 'Leaves-and-branches #/ ( Left::join:> right )', :abbrev_form => 'LAB #/ ( L::J:>R )', :alpha => "LABOLOLAJOR");
Formula.create( :base => '176', :offset => '006', :subindex => '0', :ord => '5', :iform => '176.1 #/ (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => 'Leaves-and-branches #/ ( person::show:>arms )', :abbrev_form => 'LAB #/ ( P::S:>A )', :alpha => "LABOLOPASOA");
Formula.create( :base => '177', :offset => '000', :subindex => '0', :ord => '1', :iform => '177.0', :word_form => 'abstract( "horse" ) ', :abbrev_form => 'A( H )', :alpha => "AH");
Formula.create( :base => '177', :offset => '000', :subindex => 'a', :ord => '1', :iform => '177.0.a', :word_form => 'abstract( "mane" ) ', :abbrev_form => 'A( M )', :alpha => "AM");
Formula.create( :base => '177', :offset => '001', :subindex => '0', :ord => '1', :iform => '( 177.0 }', :word_form => '{ horse }', :abbrev_form => '({ H }', :alpha => "H");
Formula.create( :base => '177', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))', :word_form => 'Horse.(( head #* mane ) :/ ( leg^4 :* tail ))', :abbrev_form => 'H.(( H #* M ) :/ ( L^4 :* T ))', :alpha => "HEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))', :word_form => 'Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))', :abbrev_form => 'H.(( H #* M ) :/ ( T( L ) :* T ))', :alpha => "HEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))', :word_form => 'Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))', :abbrev_form => 'H.(( H #* M ) :/ ( T( D ) :* T ))', :alpha => "HEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '002', :subindex => '0', :ord => '1', :iform => '177.1 ><* 68.1', :word_form => 'horse ><* Mouth', :abbrev_form => 'H ><* M', :alpha => "HEXAM");
Formula.create( :base => '177', :offset => '002', :subindex => '0', :ord => '3', :iform => '68.1 * 177.1', :word_form => 'Mouth * horse', :abbrev_form => 'M * H', :alpha => "MAH");
Formula.create( :base => '177', :offset => '002', :subindex => '0', :ord => '5', :iform => '68.1 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => 'Mouth * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => 'M * ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "MAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '002', :subindex => '0', :ord => '7', :iform => '68.1 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => 'Mouth * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => 'M * ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "MAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '002', :subindex => '0', :ord => '9', :iform => '68.1 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => 'Mouth * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => 'M * ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "MAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '003', :subindex => '0', :ord => '2', :iform => '( 54.0.a )::( 54.0.b ) * 177.1', :word_form => 'Woman::kneel * horse', :abbrev_form => 'W::K * H', :alpha => "WAKAH");
Formula.create( :base => '177', :offset => '003', :subindex => '0', :ord => '3', :iform => '( 54.0.a )::( 54.0.b ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => 'Woman::kneel * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => 'W::K * ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "WAKAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '003', :subindex => '0', :ord => '4', :iform => '( 54.0.a )::( 54.0.b ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => 'Woman::kneel * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => 'W::K * ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "WAKAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '003', :subindex => '0', :ord => '5', :iform => '( 54.0.a )::( 54.0.b ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => 'Woman::kneel * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => 'W::K * ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "WAKAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '003', :subindex => '0', :ord => '1', :iform => '177.1 ><* ( 54.0.a )::( 54.0.b )', :word_form => 'horse ><* Woman::kneel', :abbrev_form => 'H ><* W::K', :alpha => "HEXAWAK");
Formula.create( :base => '177', :offset => '004', :subindex => '0', :ord => '4', :iform => '( 107.1.a->1.20 ) * 177.1', :word_form => '( pieces-of-jade->king ) * horse', :abbrev_form => '( POJ->K ) * H', :alpha => "POJYKAH");
Formula.create( :base => '177', :offset => '004', :subindex => '0', :ord => '5', :iform => '( 107.1.a->1.20 ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => '( pieces-of-jade->king ) * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => '( POJ->K ) * ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "POJYKAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '004', :subindex => '0', :ord => '6', :iform => '( 107.1.a->1.20 ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => '( pieces-of-jade->king ) * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => '( POJ->K ) * ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "POJYKAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '004', :subindex => '0', :ord => '7', :iform => '( 107.1.a->1.20 ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => '( pieces-of-jade->king ) * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => '( POJ->K ) * ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "POJYKAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '004', :subindex => '0', :ord => '3', :iform => '107.1 * 177.1', :word_form => 'Jade * horse', :abbrev_form => 'J * H', :alpha => "JAH");
Formula.create( :base => '177', :offset => '004', :subindex => '0', :ord => '1', :iform => '177.1 ><* 107.1', :word_form => 'horse ><* jade', :abbrev_form => 'H ><* J', :alpha => "HEXAJ");
Formula.create( :base => '177', :offset => '004', :subindex => '0', :ord => '2', :iform => '177.1 ><* ( 107.1.a->1.20 )', :word_form => 'horse ><* ( pieces-of-jade->king )', :abbrev_form => 'H ><* ( POJ->K )', :alpha => "HEXAPOJYK");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '7', :iform => '( 21.1 / 68.1 ) * 177.1', :word_form => '( cliff / opening ) * horse', :abbrev_form => '( C / O ) * H', :alpha => "CO-O'AH");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '8', :iform => '( 21.1 / 68.1 ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => '( cliff / opening ) * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => '( C / O ) * ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "CO-O'AHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '9', :iform => '( 21.1 / 68.1 ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => '( cliff / opening ) * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => '( C / O ) * ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "CO-O'AHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '10', :iform => '( 21.1 / 68.1 ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => '( cliff / opening ) * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => '( C / O ) * ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "CO-O'AHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '1', :iform => '177.1 ><* 21.17', :word_form => 'horse ><* Stone', :abbrev_form => 'H ><* S', :alpha => "HEXAS");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '6', :iform => '177.1 ><* ( 21.1 / 68.1 )', :word_form => 'horse ><* ( cliff / opening )', :abbrev_form => 'H ><* ( C / O )', :alpha => "HEXACO-O");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '2', :iform => '21.17 * 177.1', :word_form => 'Stone * horse', :abbrev_form => 'S * H', :alpha => "SAH");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '3', :iform => '21.17 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => 'Stone * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => 'S * ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "SAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '4', :iform => '21.17 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => 'Stone * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => 'S * ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "SAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '005', :subindex => '0', :ord => '5', :iform => '21.17 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => 'Stone * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => 'S * ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "SAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '7', :iform => '( 3.22->114.1.0 ) / 177.1', :word_form => '( net->eye ) / horse', :abbrev_form => '( N->E ) / H', :alpha => "NYE-O-H");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '8', :iform => '( 3.22->114.1.0 ) / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => '( net->eye ) / ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => '( N->E ) / ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "NYE-O-HEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '9', :iform => '( 3.22->114.1.0 ) / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => '( net->eye ) / ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => '( N->E ) / ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "NYE-O-HEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '10', :iform => '( 3.22->114.1.0 ) / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => '( net->eye ) / ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => '( N->E ) / ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "NYE-O-HEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '12', :iform => '( 3.22->68.5 ) / 177.1', :word_form => '( net->cry ) / horse', :abbrev_form => '( N->C ) / H', :alpha => "NYCOH");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '13', :iform => '( 3.22->68.5 ) / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => '( net->cry ) / ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => '( N->C ) / ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "NYCOHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '14', :iform => '( 3.22->68.5 ) / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => '( net->cry ) / ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => '( N->C ) / ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "NYCOHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '15', :iform => '( 3.22->68.5 ) / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => '( net->cry ) / ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => '( N->C ) / ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "NYCOHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '1', :iform => '177.1 \ 3.22.a', :word_form => 'horse \ Net-at-top', :abbrev_form => 'H \ NAT', :alpha => "HUNAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '6', :iform => '177.1 \ ( 3.22->114.1.0 )', :word_form => 'Horse \ ( net->eye )', :abbrev_form => 'H \ ( N->E )', :alpha => "HUNYE");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '11', :iform => '177.1 \ ( 3.22->68.5 )', :word_form => 'horse \ ( net->cry )', :abbrev_form => 'H \ ( N->C )', :alpha => "HUNYC");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '2', :iform => '3.22.a / 177.1', :word_form => 'Net-at-top / horse', :abbrev_form => 'NAT / H', :alpha => "NATOH");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '3', :iform => '3.22.a / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => 'Net-at-top / ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => 'NAT / ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "NATOHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '4', :iform => '3.22.a / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => 'Net-at-top / ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => 'NAT / ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "NATOHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '006', :subindex => '0', :ord => '5', :iform => '3.22.a / (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => 'Net-at-top / ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => 'NAT / ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "NATOHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '17', :iform => '( 3.22->114.1.0 ) / ( 74.2 * 177.1 )', :word_form => '( net->eye ) / ( Rawhide * horse )', :abbrev_form => '( N->E ) / ( RH * H )', :alpha => "NYE-ORHAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '18', :iform => '( 3.22->114.1.0 ) / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => '( net->eye ) / ( Rawhide * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => '( N->E ) / ( RH * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NYE-ORHAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '19', :iform => '( 3.22->114.1.0 ) / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( Rawhide * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => '( N->E ) / ( RH * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NYE-ORHAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '20', :iform => '( 3.22->114.1.0 ) / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( Rawhide * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => '( N->E ) / ( RH * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NYE-ORHAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '21', :iform => '( 3.22->114.1.0 ) / ( 74.2 * 177.1 )', :word_form => '( net->eye ) / ( Leather * horse )', :abbrev_form => '( N->E ) / ( L * H )', :alpha => "NYE-OLAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '22', :iform => '( 3.22->114.1.0 ) / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => '( net->eye ) / ( Leather * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => '( N->E ) / ( L * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NYE-OLAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '23', :iform => '( 3.22->114.1.0 ) / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( Leather * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => '( N->E ) / ( L * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NYE-OLAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '24', :iform => '( 3.22->114.1.0 ) / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( Leather * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => '( N->E ) / ( L * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NYE-OLAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '25', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * 177.1 )', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * horse )', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * H )', :alpha => "NYE-OSEHIDOHASAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '26', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NYE-OSEHIDOHASAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '27', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NYE-OSEHIDOHASAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '28', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NYE-OSEHIDOHASAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '29', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * 177.1 )', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * horse )', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * H )', :alpha => "NYE-OHOSIDOHASAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '30', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NYE-OHOSIDOHASAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '31', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NYE-OHOSIDOHASAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '32', :iform => '( 3.22->114.1.0 ) / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => '( net->eye ) / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => '( N->E ) / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NYE-OHOSIDOHASAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '1', :iform => '3.22.a / ( 74.2 * 177.1 )', :word_form => 'Net-at-top / ( Rawhide * horse )', :abbrev_form => 'NAT / ( RH * H )', :alpha => "NATORHAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '2', :iform => '3.22.a / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => 'Net-at-top / ( Rawhide * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => 'NAT / ( RH * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NATORHAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '3', :iform => '3.22.a / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( Rawhide * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => 'NAT / ( RH * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NATORHAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '4', :iform => '3.22.a / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( Rawhide * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => 'NAT / ( RH * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NATORHAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '5', :iform => '3.22.a / ( 74.2 * 177.1 )', :word_form => 'Net-at-top / ( Leather * horse )', :abbrev_form => 'NAT / ( L * H )', :alpha => "NATOLAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '6', :iform => '3.22.a / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => 'Net-at-top / ( Leather * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => 'NAT / ( L * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NATOLAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '7', :iform => '3.22.a / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( Leather * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => 'NAT / ( L * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NATOLAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '8', :iform => '3.22.a / ( 74.2 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( Leather * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => 'NAT / ( L * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NATOLAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '9', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * 177.1 )', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * horse )', :abbrev_form => 'NAT / (( S.H + D( HAS )) * H )', :alpha => "NATOSEHIDOHASAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '10', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => 'NAT / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NATOSEHIDOHASAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '11', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => 'NAT / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NATOSEHIDOHASAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '12', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => 'NAT / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NATOSEHIDOHASAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '13', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * 177.1 )', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * horse )', :abbrev_form => 'NAT / (( S.H + D( HAS )) * H )', :alpha => "NATOHOSIDOHASAH");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '14', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b ))))', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail ))))', :abbrev_form => 'NAT / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( L^4 :* T ))))', :alpha => "NATOHOSIDOHASAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '15', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail ))))', :abbrev_form => 'NAT / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( L ) :* T ))))', :alpha => "NATOHOSIDOHASAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '007', :subindex => '0', :ord => '16', :iform => '3.22.a / (( 74.1.a + dis(15.65)) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b ))))', :word_form => 'Net-at-top / ( ( sheep_horns + dis( hands-at-side )) * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail ))))', :abbrev_form => 'NAT / (( S.H + D( HAS )) * ( H.(( H #* M ) :/ ( T( D ) :* T ))))', :alpha => "NATOHOSIDOHASAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '7', :iform => '( 125.0.a | 125.0.b ) * 177.1', :word_form => '( Insect | Snake ) * horse', :abbrev_form => '( I | S ) * H', :alpha => "IOSAH");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '8', :iform => '( 125.0.a | 125.0.b ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => '( Insect | Snake ) * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => '( I | S ) * ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "IOSAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '9', :iform => '( 125.0.a | 125.0.b ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => '( Insect | Snake ) * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => '( I | S ) * ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "IOSAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '10', :iform => '( 125.0.a | 125.0.b ) * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => '( Insect | Snake ) * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => '( I | S ) * ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "IOSAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '2', :iform => '125.1 * 177.1', :word_form => 'Insect-snake * horse', :abbrev_form => 'IS * H', :alpha => "ISAH");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '3', :iform => '125.1 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => 'Insect-snake * ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => 'IS * ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "ISAHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '4', :iform => '125.1 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => 'Insect-snake * ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => 'IS * ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "ISAHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '5', :iform => '125.1 * (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => 'Insect-snake * ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => 'IS * ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "ISAHEHOLAMOTODAT");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '1', :iform => '177.1 ><* 125.1', :word_form => 'horse ><* Insect-snake', :abbrev_form => 'H ><* IS', :alpha => "HEXA-IS");
Formula.create( :base => '177', :offset => '008', :subindex => '0', :ord => '6', :iform => '177.1 ><* ( 125.0.a | 125.0.b )', :word_form => 'horse ><* ( Insect | Snake )', :abbrev_form => 'H ><* ( I | S )', :alpha => "HEXA-I-OS");
Formula.create( :base => '177', :offset => '009', :subindex => '0', :ord => '1', :iform => '177.1 \}{ 78.17', :word_form => 'horse \}{ door', :abbrev_form => 'H \}{ D', :alpha => "HU-ID");
Formula.create( :base => '177', :offset => '009', :subindex => '0', :ord => '2', :iform => '78.17 {}/ 177.1', :word_form => 'Door {}/ horse', :abbrev_form => 'D {}/ H', :alpha => "DEOH");
Formula.create( :base => '177', :offset => '009', :subindex => '0', :ord => '3', :iform => '78.17 {}/ (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( 11.0^4 :* 178.0.b )))', :word_form => 'Door {}/ ( Horse.(( head #* mane ) :/ ( leg^4 :* tail )))', :abbrev_form => 'D {}/ ( H.(( H #* M ) :/ ( L^4 :* T )))', :alpha => "DEOHEHOLAMOLUFAT");
Formula.create( :base => '177', :offset => '009', :subindex => '0', :ord => '4', :iform => '78.17 {}/ (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 11.0 ) :* 178.0.b )))', :word_form => 'Door {}/ ( Horse.(( head #* mane ) :/ ( train( legs ) :* tail )))', :abbrev_form => 'D {}/ ( H.(( H #* M ) :/ ( T( L ) :* T )))', :alpha => "DEOHEHOLAMOTOLAT");
Formula.create( :base => '177', :offset => '009', :subindex => '0', :ord => '5', :iform => '78.17 {}/ (( 177.0 ).(( 143.0 #* 177.0.a ) :/ ( train( 1.1.c ) :* 178.0.b )))', :word_form => 'Door {}/ ( Horse.(( head #* mane ) :/ ( train( dot ) :* tail )))', :abbrev_form => 'D {}/ ( H.(( H #* M ) :/ ( T( D ) :* T )))', :alpha => "DEOHEHOLAMOTODAT");
Formula.create( :base => '178', :offset => '000', :subindex => '0', :ord => '1', :iform => '178.0', :word_form => 'abstract( "bird" ) ', :abbrev_form => 'A( B )', :alpha => "AB");
Formula.create( :base => '178', :offset => '000', :subindex => 'a', :ord => '1', :iform => '178.0.a', :word_form => 'abstract( "crow" ) ', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '178', :offset => '000', :subindex => 'b', :ord => '1', :iform => '178.0.b', :word_form => 'abstract( "tail" ) ', :abbrev_form => 'A( T )', :alpha => "AT");
Formula.create( :base => '178', :offset => '000', :subindex => 'c', :ord => '1', :iform => '178.0.c', :word_form => 'abstract( "short" ) ', :abbrev_form => 'A( S )', :alpha => "AS");
Formula.create( :base => '178', :offset => '000', :subindex => 'd', :ord => '1', :iform => '178.0.d', :word_form => 'abstract( "long" ) ', :abbrev_form => 'A( L )', :alpha => "AL");
Formula.create( :base => '178', :offset => '000', :subindex => 'e', :ord => '1', :iform => '178.0.e', :word_form => 'abstract( "crane" ) ', :abbrev_form => 'A( C )', :alpha => "AC");
Formula.create( :base => '178', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 178.0 ):<.(( 178.0.b ):( 178.0.d ))', :word_form => 'Bird:<.( tail:long )', :abbrev_form => 'B:<.( T:L )', :alpha => "BITIL");
Formula.create( :base => '178', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 178.0 ):<.( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )', :word_form => 'Bird:<.( head / ( body :* feathers:long ) / foot^2 )', :abbrev_form => 'B:<.( H / ( B :* F:L ) / F^2 )', :alpha => "BIHOBAFILOFUT");
Formula.create( :base => '178', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )', :word_form => 'Bird.( head / ( body :* feathers:long ) / foot^2 )', :abbrev_form => 'B.( H / ( B :* F:L ) / F^2 )', :alpha => "BEHOBAFILOFUT");
Formula.create( :base => '178', :offset => '001', :subindex => '0', :ord => '5', :iform => '( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )', :word_form => 'Bird.( head / ( body :* feathers:long ) / foot^2 )', :abbrev_form => 'B.( H / ( B :* F:L ) / F^2 )', :alpha => "HOBAFILOFUTOB");
Formula.create( :base => '178', :offset => '001', :subindex => '0', :ord => '1', :iform => '178.1', :word_form => '{ "bird with long tail feathers" }', :abbrev_form => 'B', :alpha => "B");
Formula.create( :base => '178', :offset => '002', :subindex => '0', :ord => '1', :iform => '67.1 \* 178.2.a', :word_form => 'Mountain \* Bird-omitting-feet', :abbrev_form => 'M \* BOF', :alpha => "MUABOF");
Formula.create( :base => '178', :offset => '002', :subindex => '0', :ord => '2', :iform => '67.1 \* ((( 178.0 ):<.(( 178.0.b ):( 178.0.d ))):-( 88.0^2 )', :word_form => 'Mountain \* (( Bird:<.( tail:long )):-foot^2 )', :abbrev_form => 'M \* (( B:<.( T:L )):-F^2 )', :alpha => "MUABITILOFUT");
Formula.create( :base => '178', :offset => '002', :subindex => '0', :ord => '3', :iform => '67.1 \* ((( 178.0 ):<.(( 178.0.b ):( 178.0.d ))):-train( 1.1.c ))', :word_form => 'Mountain \* (( Bird:<.( tail:long )):-train( dot ))', :abbrev_form => 'M \* (( B:<.( T:L )):-T( D ))', :alpha => "MUABITILOTOD");
Formula.create( :base => '178', :offset => '002', :subindex => 'a', :ord => '1', :iform => '(( 178.0 ):<.(( 178.0.b ):( 178.0.d ))):-( 88.0^2 )', :word_form => '( Bird:<.( tail:long )):-foot^2', :abbrev_form => '( B:<.( T:L )):-F^2', :alpha => "BITILOFUT");
Formula.create( :base => '178', :offset => '002', :subindex => 'a', :ord => '2', :iform => '(( 178.0 ):<.(( 178.0.b ):( 178.0.d ))):-train( 1.1.c )', :word_form => '( Bird:<.( tail:long )):-train( dot )', :abbrev_form => '( B:<.( T:L )):-T( D )', :alpha => "BITILOTOD");
Formula.create( :base => '178', :offset => '004', :subindex => '0', :ord => '1', :iform => '( 77.0->77.0.a ) \* 178.2.a', :word_form => '( tree->wood ) \* Bird-omitting-feet', :abbrev_form => '( T->W ) \* BOF', :alpha => "TYWUABOF");
Formula.create( :base => '178', :offset => '004', :subindex => '0', :ord => '2', :iform => '( 77.0->77.0.a ) \* ((( 178.0 ):<.(( 178.0.b ):( 178.0.d ))):-( 88.0^2 )', :word_form => '( tree->wood ) \* (( Bird:<.( tail:long )):-foot^2 )', :abbrev_form => '( T->W ) \* (( B:<.( T:L )):-F^2 )', :alpha => "TYWUABITILOFUT");
Formula.create( :base => '178', :offset => '004', :subindex => '0', :ord => '3', :iform => '( 77.0->77.0.a ) \* ((( 178.0 ):<.(( 178.0.b ):( 178.0.d ))):-train( 1.1.c ))', :word_form => '( tree->wood ) \* (( Bird:<.( tail:long )):-train( dot ))', :abbrev_form => '( T->W ) \* (( B:<.( T:L )):-T( D ))', :alpha => "TYWUABITILOTOD");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '3', :iform => '(( 178.0 ):<.(( 178.0.b ):( 178.0.d ))):-( 114.0 )', :word_form => '( Bird:<.( tail:long )):-eye', :abbrev_form => '( B:<.( T:L )):-E', :alpha => "BITILO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '4', :iform => '(( 178.0 ):<.( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )):-( 114.0 )', :word_form => '( Bird:<.( head / ( body :* feathers:long ) / foot^2 )):-eye', :abbrev_form => '( B:<.( H / ( B :* F:L ) / F^2 )):-E', :alpha => "BIHOBAFILOFUTO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '5', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )):-( 114.0 )', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )):-eye', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )):-E', :alpha => "BEHOBAFILOFUTO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '6', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )):-( 114.0 )', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )):-eye', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )):-E', :alpha => "HOBAFILOFUTOBO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '9', :iform => '(( 178.0 ):<.(( 178.0.b ):( 178.0.d ))).( 147.0.b -114.0 )', :word_form => '( Bird:<.( tail:long )).( identity - eye )', :abbrev_form => '( B:<.( T:L )).( I - E )', :alpha => "BITILE-IO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '10', :iform => '(( 178.0 ):<.(( 178.0.b ):( 178.0.d ))).( 147.0.b - 114.0 )', :word_form => '( Bird:<.( tail:long )).( identity - eye )', :abbrev_form => '( B:<.( T:L )).( I - E )', :alpha => "BITILIO-EO");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '11', :iform => '(( 178.0 ):<.( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )).( 147.0.b -114.0 )', :word_form => '( Bird:<.( head / ( body :* feathers:long ) / foot^2 )).( identity - eye )', :abbrev_form => '( B:<.( H / ( B :* F:L ) / F^2 )).( I - E )', :alpha => "BIHOBAFILOFUTE-IO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '12', :iform => '(( 178.0 ):<.( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )).( 147.0.b -114.0 )', :word_form => '( Bird:<.( head / ( body :* feathers:long ) / foot^2 )).( identity - eye )', :abbrev_form => '( B:<.( H / ( B :* F:L ) / F^2 )).( I - E )', :alpha => "BIHOBAFILOFUTIO-EO");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '13', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )).( 147.0.b -114.0 )', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )).( identity - eye )', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )).( I - E )', :alpha => "BEHOBAFILOFUTE-IO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '14', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )).( 147.0.b -114.0 )', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )).( identity - eye )', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )).( I - E )', :alpha => "BEHOBAFILOFUTIO-EO");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '15', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )).( 147.0.b -114.0 )', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )).( identity - eye )', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )).( I - E )', :alpha => "HOBAFILOFUTOBE-IO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '16', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )).( 147.0.b -114.0 )', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )).( identity - eye )', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )).( I - E )', :alpha => "HOBAFILOFUTOBIO-EO");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '2', :iform => '( 178.1 ):-( 114.0 )', :word_form => 'Bird-of-long-tail:-eye', :abbrev_form => 'BOLT:-E', :alpha => "BOLTO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '7', :iform => '( 178.1 ).( 147.0.b -114.0 )', :word_form => 'Bird-of-long-tail.( identity - eye )', :abbrev_form => 'BOLT.( I - E )', :alpha => "BOLTE-IO-E");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '8', :iform => '( 178.1 ).( 147.0.b -114.0 )', :word_form => 'Bird-of-long-tail.( identity - eye )', :abbrev_form => 'BOLT.( I - E )', :alpha => "BOLTIO-EO");
Formula.create( :base => '178', :offset => '005', :subindex => '0', :ord => '1', :iform => '178.5', :word_form => 'crow', :abbrev_form => 'C', :alpha => "C");
Formula.create( :base => '178', :offset => '006', :subindex => '0', :ord => '1', :iform => '68.1 * ( 178.1 )', :word_form => 'Mouth * Bird-of-long-tail', :abbrev_form => 'M * BOLT', :alpha => "MABOLT");
Formula.create( :base => '178', :offset => '006', :subindex => '0', :ord => '2', :iform => '68.1 * (( 178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => 'Mouth * ( Bird:<.( tail:long ))', :abbrev_form => 'M * ( B:<.( T:L ))', :alpha => "MABITIL");
Formula.create( :base => '178', :offset => '006', :subindex => '0', :ord => '3', :iform => '68.1 * (( 178.0 ):<.( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 ))', :word_form => 'Mouth * ( Bird:<.( head / ( body :* feathers:long ) / foot^2 ))', :abbrev_form => 'M * ( B:<.( H / ( B :* F:L ) / F^2 ))', :alpha => "MABIHOBAFILOFUT");
Formula.create( :base => '178', :offset => '006', :subindex => '0', :ord => '4', :iform => '68.1 * (( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 ))', :word_form => 'Mouth * ( Bird.( head / ( body :* feathers:long ) / foot^2 ))', :abbrev_form => 'M * ( B.( H / ( B :* F:L ) / F^2 ))', :alpha => "MABEHOBAFILOFUT");
Formula.create( :base => '178', :offset => '006', :subindex => '0', :ord => '5', :iform => '68.1 * (( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 ))', :word_form => 'Mouth * ( Bird.( head / ( body :* feathers:long ) / foot^2 ))', :abbrev_form => 'M * ( B.( H / ( B :* F:L ) / F^2 ))', :alpha => "MAHOBAFILOFUTOB");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '2', :iform => '(( 178.0 ):<.(( 178.0.b ):( 178.0.d ))) / 38.1', :word_form => '( Bird:<.( tail:long )) / small-table', :abbrev_form => '( B:<.( T:L )) / ST', :alpha => "BITILOST");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '3', :iform => '(( 178.0 ):<.( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )) / 38.1', :word_form => '( Bird:<.( head / ( body :* feathers:long ) / foot^2 )) / small-table', :abbrev_form => '( B:<.( H / ( B :* F:L ) / F^2 )) / ST', :alpha => "BIHOBAFILOFUTOST");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '4', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )) / 38.1', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )) / small-table', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )) / ST', :alpha => "BEHOBAFILOFUTOST");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '5', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )) / 38.1', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )) / small-table', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )) / ST', :alpha => "HOBAFILOFUTOBOST");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '7', :iform => '(( 178.0 ):<.(( 178.0.b ):( 178.0.d ))) / 38.1', :word_form => '( Bird:<.( tail:long )) / stool', :abbrev_form => '( B:<.( T:L )) / S', :alpha => "BITILOS");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '8', :iform => '(( 178.0 ):<.( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )) / 38.1', :word_form => '( Bird:<.( head / ( body :* feathers:long ) / foot^2 )) / stool', :abbrev_form => '( B:<.( H / ( B :* F:L ) / F^2 )) / S', :alpha => "BIHOBAFILOFUTOS");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '9', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )) / 38.1', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )) / stool', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )) / S', :alpha => "BEHOBAFILOFUTOS");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '10', :iform => '(( 178.0 ).( 143.0 /(( 147.0 ) :* (( 124.0 ):( 178.0.d ))) / 88.0^2 )) / 38.1', :word_form => '( Bird.( head / ( body :* feathers:long ) / foot^2 )) / stool', :abbrev_form => '( B.( H / ( B :* F:L ) / F^2 )) / S', :alpha => "HOBAFILOFUTOBOS");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '1', :iform => '( 178.1 ) / 38.1', :word_form => 'Bird-of-long-tail / small-table', :abbrev_form => 'BOLT / ST', :alpha => "BOLTOST");
Formula.create( :base => '178', :offset => '007', :subindex => '0', :ord => '6', :iform => '( 178.1 ) / 38.1', :word_form => 'Bird-of-long-tail / stool', :abbrev_form => 'BOLT / S', :alpha => "BOLTOS");
Formula.create( :base => '179', :offset => '000', :subindex => '0', :ord => '1', :iform => '179.0', :word_form => 'abstract( "deer" ) ', :abbrev_form => 'A( D )', :alpha => "AD");
Formula.create( :base => '179', :offset => '000', :subindex => 'a', :ord => '1', :iform => '179.0.a', :word_form => 'abstract( "yak" ) ', :abbrev_form => 'A( Y )', :alpha => "AY");
Formula.create( :base => '179', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 179.0 }', :word_form => '{ deer }', :abbrev_form => '{ D }', :alpha => "D");
Formula.create( :base => '179', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )', :word_form => 'Deer.( antler^2 / head / body / legs )', :abbrev_form => 'D.( A^2 / H / B / L )', :alpha => "DE-A-UTOHOBOL");
Formula.create( :base => '179', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )', :word_form => 'Deer.( antler^2 / head / body / legs )', :abbrev_form => 'D.( A^2 / H / B / L )', :alpha => "A-UTOHOBOLOD");
Formula.create( :base => '179', :offset => '001', :subindex => 'a', :ord => '2', :iform => '( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / ( 11.0->1.1.j ))', :word_form => 'Deer.( antler^2 / head / body / ( legs->bar-barb ))', :abbrev_form => 'D.( A^2 / H / B / ( L->BB ))', :alpha => "DE-A-UTOHOBOLYBB");
Formula.create( :base => '179', :offset => '001', :subindex => 'a', :ord => '3', :iform => '( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / ( 11.0->1.1.j ))', :word_form => 'Deer.( antler^2 / head / body / ( legs->bar-barb ))', :abbrev_form => 'D.( A^2 / H / B / ( L->BB ))', :alpha => "A-UTOHOBOLYBBOD");
Formula.create( :base => '179', :offset => '001', :subindex => 'a', :ord => '1', :iform => 'top( 179.1 )', :word_form => 'top( deer )', :abbrev_form => 'T( D )', :alpha => "TOD");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '15', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) */ 70.1', :word_form => '( Deer.( antler^2 / head / body / legs )) */ Earth', :abbrev_form => '( D.( A^2 / H / B / L )) */ E', :alpha => "DE-A-UTOHOBOLA-O-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '16', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) */ 70.1', :word_form => '( Deer.( antler^2 / head / body / legs )) */ ground', :abbrev_form => '( D.( A^2 / H / B / L )) */ G', :alpha => "DE-A-UTOHOBOLA-OG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '17', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) */ 70.1', :word_form => '( Deer.( antler^2 / head / body / legs )) */ Earth', :abbrev_form => '( D.( A^2 / H / B / L )) */ E', :alpha => "A-UTOHOBOLODA-O-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '18', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) */ 70.1', :word_form => '( Deer.( antler^2 / head / body / legs )) */ ground', :abbrev_form => '( D.( A^2 / H / B / L )) */ G', :alpha => "A-UTOHOBOLODA-OG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '13', :iform => '179.1 */ 70.1', :word_form => 'deer */ Earth', :abbrev_form => 'D */ E', :alpha => "DA-O-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '14', :iform => '179.1 */ 70.1', :word_form => 'deer */ ground', :abbrev_form => 'D */ G', :alpha => "DA-OG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '3', :iform => 'group(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'group( Deer.( antler^2 / head / body / legs )) / Earth', :abbrev_form => 'G( D.( A^2 / H / B / L )) / E', :alpha => "GODE-A-UTOHOBOLO-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '4', :iform => 'group(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'group( Deer.( antler^2 / head / body / legs )) / ground', :abbrev_form => 'G( D.( A^2 / H / B / L )) / G', :alpha => "GODE-A-UTOHOBOLOG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '5', :iform => 'group(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'group( Deer.( antler^2 / head / body / legs )) / Earth', :abbrev_form => 'G( D.( A^2 / H / B / L )) / E', :alpha => "GO-A-UTOHOBOLODO-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '6', :iform => 'group(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'group( Deer.( antler^2 / head / body / legs )) / ground', :abbrev_form => 'G( D.( A^2 / H / B / L )) / G', :alpha => "GO-A-UTOHOBOLODOG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '1', :iform => 'group( 179.1 ) / 70.1', :word_form => 'group( deer ) / Earth', :abbrev_form => 'G( D ) / E', :alpha => "GODO-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '2', :iform => 'group( 179.1 ) / 70.1', :word_form => 'group( deer ) / ground', :abbrev_form => 'G( D ) / G', :alpha => "GODOG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '9', :iform => 'tripod(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'tripod( Deer.( antler^2 / head / body / legs )) / Earth', :abbrev_form => 'T( D.( A^2 / H / B / L )) / E', :alpha => "TODE-A-UTOHOBOLO-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '10', :iform => 'tripod(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'tripod( Deer.( antler^2 / head / body / legs )) / ground', :abbrev_form => 'T( D.( A^2 / H / B / L )) / G', :alpha => "TODE-A-UTOHOBOLOG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '11', :iform => 'tripod(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'tripod( Deer.( antler^2 / head / body / legs )) / Earth', :abbrev_form => 'T( D.( A^2 / H / B / L )) / E', :alpha => "TO-A-UTOHOBOLODO-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '12', :iform => 'tripod(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 )) / 70.1', :word_form => 'tripod( Deer.( antler^2 / head / body / legs )) / ground', :abbrev_form => 'T( D.( A^2 / H / B / L )) / G', :alpha => "TO-A-UTOHOBOLODOG");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '7', :iform => 'tripod( 179.1 ) / 70.1', :word_form => 'tripod( deer ) / Earth', :abbrev_form => 'T( D ) / E', :alpha => "TODO-E");
Formula.create( :base => '179', :offset => '002', :subindex => '0', :ord => '8', :iform => 'tripod( 179.1 ) / 70.1', :word_form => 'tripod( deer ) / ground', :abbrev_form => 'T( D ) / G', :alpha => "TODOG");
Formula.create( :base => '179', :offset => '002', :subindex => 's', :ord => '1', :iform => '( 29.1 {} 4.1 ) / 70.1', :word_form => '( divide {} post ) / Earth', :abbrev_form => '( D {} P ) / E', :alpha => "DEPO-E");
Formula.create( :base => '179', :offset => '002', :subindex => 's', :ord => '2', :iform => '( 29.1 {} 4.1.f ) / 70.1', :word_form => '( divide {} post-hook ) / Earth', :abbrev_form => '( D {} PH ) / E', :alpha => "DEPHO-E");
Formula.create( :base => '179', :offset => '002', :subindex => 's', :ord => '3', :iform => '( 29.1 {} 4.1 ) / 70.1', :word_form => '( divide {} post ) / ground', :abbrev_form => '( D {} P ) / G', :alpha => "DEPOG");
Formula.create( :base => '179', :offset => '002', :subindex => 's', :ord => '4', :iform => '( 29.1 {} 4.1.f ) / 70.1', :word_form => '( divide {} post-hook ) / ground', :abbrev_form => '( D {} PH ) / G', :alpha => "DEPHOG");
Formula.create( :base => '179', :offset => '003', :subindex => '0', :ord => '4', :iform => '77.1^2 / 179.1', :word_form => '(tree->wood)^2 / deer', :abbrev_form => '(T->W)^2 / D', :alpha => "TYWUTOD");
Formula.create( :base => '179', :offset => '003', :subindex => '0', :ord => '5', :iform => '77.1^2 / (( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 ))', :word_form => '(tree->wood)^2 / ( Deer.( antler^2 / head / body / legs ))', :abbrev_form => '(T->W)^2 / ( D.( A^2 / H / B / L ))', :alpha => "TYWUTODE-A-UTOHOBOL");
Formula.create( :base => '179', :offset => '003', :subindex => '0', :ord => '6', :iform => '77.1^2 / (( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 ))', :word_form => '(tree->wood)^2 / ( Deer.( antler^2 / head / body / legs ))', :abbrev_form => '(T->W)^2 / ( D.( A^2 / H / B / L ))', :alpha => "TYWUTOA-UTOHOBOLOD");
Formula.create( :base => '179', :offset => '003', :subindex => '0', :ord => '1', :iform => '77.3 / 179.1', :word_form => 'Forest / deer', :abbrev_form => 'F / D', :alpha => "FOD");
Formula.create( :base => '179', :offset => '003', :subindex => '0', :ord => '2', :iform => '77.3 / (( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 ))', :word_form => 'Forest / ( Deer.( antler^2 / head / body / legs ))', :abbrev_form => 'F / ( D.( A^2 / H / B / L ))', :alpha => "FODE-A-UTOHOBOL");
Formula.create( :base => '179', :offset => '003', :subindex => '0', :ord => '3', :iform => '77.3 / (( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / 11.0 ))', :word_form => 'Forest / ( Deer.( antler^2 / head / body / legs ))', :abbrev_form => 'F / ( D.( A^2 / H / B / L ))', :alpha => "FOA-UTOHOBOLOD");
Formula.create( :base => '179', :offset => '004', :subindex => '0', :ord => '2', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / ( 11.0->1.1.j ))) */ ((( 83.0 ):( 68.0.a )) / ( 10.0.a | 10.0.b ))', :word_form => '( Deer.( antler^2 / head / body / ( legs->bar-barb ))) */ (( heart:open ) / ( Hobble | limp ))', :abbrev_form => '( D.( A^2 / H / B / ( L->BB ))) */ (( H:O ) / ( H | L ))', :alpha => "DE-A-UTOHOBOLYBBA-OHIO-OHOL");
Formula.create( :base => '179', :offset => '004', :subindex => '0', :ord => '3', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / ( 11.0->1.1.j ))) */ ((( 83.0 ):( 68.0.a )) / ( 10.0.a | 10.0.b ))', :word_form => '( Deer.( antler^2 / head / body / ( legs->bar-barb ))) */ (( heart:open ) / ( Hobble | limp ))', :abbrev_form => '( D.( A^2 / H / B / ( L->BB ))) */ (( H:O ) / ( H | L ))', :alpha => "A-UTOHOBOLYBBODA-OHIO-OHOL");
Formula.create( :base => '179', :offset => '004', :subindex => '0', :ord => '5', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / ( 11.0->1.1.j ))) */ ((( 83.0 ):( 68.0.a )) / ( 10.1 /+ 7.1.b ))', :word_form => '( Deer.( antler^2 / head / body / ( legs->bar-barb ))) */ (( heart:open ) / ( Person /+ shackles ))', :abbrev_form => '( D.( A^2 / H / B / ( L->BB ))) */ (( H:O ) / ( P /+ S ))', :alpha => "DE-A-UTOHOBOLYBBA-OHIO-OPOIS");
Formula.create( :base => '179', :offset => '004', :subindex => '0', :ord => '6', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 / ( 11.0->1.1.j ))) */ ((( 83.0 ):( 68.0.a )) / ( 10.1 /+ 7.1.b ))', :word_form => '( Deer.( antler^2 / head / body / ( legs->bar-barb ))) */ (( heart:open ) / ( Person /+ shackles ))', :abbrev_form => '( D.( A^2 / H / B / ( L->BB ))) */ (( H:O ) / ( P /+ S ))', :alpha => "A-UTOHOBOLYBBODA-OHIO-OPOIS");
Formula.create( :base => '179', :offset => '004', :subindex => '0', :ord => '1', :iform => 'Top( 179.1 ) */ ((( 83.0 ):( 68.0.a )) / ( 10.0.a | 10.0.b ))', :word_form => 'top( deer ) */ (( heart:open ) / ( Hobble | limp ))', :abbrev_form => 'T( D ) */ (( H:O ) / ( H | L ))', :alpha => "TODA-OHIO-OHOL");
Formula.create( :base => '179', :offset => '004', :subindex => '0', :ord => '4', :iform => 'Top( 179.1 ) */ ((( 83.0 ):( 68.0.a )) / ( 10.1 /+ 7.1.b ))', :word_form => 'top( deer ) */ (( heart:open ) / ( Person /+ shackles ))', :abbrev_form => 'T( D ) */ (( H:O ) / ( P /+ S ))', :alpha => "TODA-OHIO-OPOIS");
Formula.create( :base => '179', :offset => '004', :subindex => 's', :ord => '1', :iform => '60.1 */ (( 10.0 )::( 75.0.b ):>( 39.0.d ))', :word_form => 'Shelter */ ( person::show:>arms )', :abbrev_form => 'S */ ( P::S:>A )', :alpha => "SAOPASOA");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '5', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ (( 91.0 ):<.( 103.0 )):->(:~:91.0.b )', :word_form => '( Deer.( antler^2 / head / body )) *#/ ( animal:<.claws )', :abbrev_form => '( D.( A^2 / H / B )) *#/ ( A:<.C )', :alpha => "DE-A-UTOHOBA-OLO-AIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '6', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ (( 91.0 ):<.( 103.0 )):->(:~:91.0.b )', :word_form => '( Deer.( antler^2 / head / body )) *#/ ( animal:<.claws )', :abbrev_form => '( D.( A^2 / H / B )) *#/ ( A:<.C )', :alpha => "A-UTOHOBODA-OLO-AIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '7', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ ((( 91.0 ):<.( 103.0 )):~:91.0.b )', :word_form => '( Deer.( antler^2 / head / body )) *#/ (( animal:<.claws ):~:cat )', :abbrev_form => '( D.( A^2 / H / B )) *#/ (( A:<.C ):~:C )', :alpha => "DE-A-UTOHOBAICILIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '8', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ ((( 91.0 ):<.( 103.0 )):~:91.0.b )', :word_form => '( Deer.( antler^2 / head / body )) *#/ (( animal:<.claws ):~:cat )', :abbrev_form => '( D.( A^2 / H / B )) *#/ (( A:<.C ):~:C )', :alpha => "A-UTOHOBODAICILIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '9', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ ((( 91.0 ):<.( 103.0 )):->(:~:91.0.b ))', :word_form => '( Deer.( antler^2 / head / body )) *#/ (( animal:<.claws ):->( :~:cat ))', :abbrev_form => '( D.( A^2 / H / B )) *#/ (( A:<.C ):->(:~:C ))', :alpha => "DE-A-UTOHOBAICY-ILIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '10', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ ((( 91.0 ):<.( 103.0 )):->(:~:91.0.b ))', :word_form => '( Deer.( antler^2 / head / body )) *#/ (( animal:<.claws ):->( :~:cat ))', :abbrev_form => '( D.( A^2 / H / B )) *#/ (( A:<.C ):->(:~:C ))', :alpha => "A-UTOHOBODAICY-ILIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '12', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ (( 178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => '( Deer.( antler^2 / head / body )) *#/ ( Bird:<.( tail:long ))', :abbrev_form => '( D.( A^2 / H / B )) *#/ ( B:<.( T:L ))', :alpha => "DE-A-UTOHOBA-OLOBITIL");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '13', :iform => '(( 179.0 ).(( 154.0 )^2 / 143.0 / 147.0 )) *#/ (( 178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => '( Deer.( antler^2 / head / body )) *#/ ( Bird:<.( tail:long ))', :abbrev_form => '( D.( A^2 / H / B )) *#/ ( B:<.( T:L ))', :alpha => "A-UTOHOBODA-OLOBITIL");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '1', :iform => '( 91.0 ):~:( 179.0.a )', :word_form => 'animal:~:yak', :abbrev_form => 'A:~:Y', :alpha => "AILIY");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '2', :iform => 'Top( 179.1 ) *#/ (( 91.0 ):<.( 103.0 )):->(:~:91.0.b )', :word_form => 'top( deer ) *#/ ( animal:<.claws )', :abbrev_form => 'T( D ) *#/ ( A:<.C )', :alpha => "TODA-OLO-AIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '3', :iform => 'Top( 179.1 ) *#/ ((( 91.0 ):<.( 103.0 )):~:91.0.b )', :word_form => 'top( deer ) *#/ (( animal:<.claws ):~:cat )', :abbrev_form => 'T( D ) *#/ (( A:<.C ):~:C )', :alpha => "TODAICILIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '4', :iform => 'Top( 179.1 ) *#/ ((( 91.0 ):<.( 103.0 )):->(:~:91.0.b ))', :word_form => 'top( deer ) *#/ (( animal:<.claws ):->( :~:cat ))', :abbrev_form => 'T( D ) *#/ (( A:<.C ):->(:~:C ))', :alpha => "TODAICY-ILIC");
Formula.create( :base => '179', :offset => '005', :subindex => '0', :ord => '11', :iform => 'Top( 179.1 ) *#/ (( 178.0 ):<.(( 178.0.b ):( 178.0.d )))', :word_form => 'top( deer ) *#/ ( Bird:<.( tail:long ))', :abbrev_form => 'T( D ) *#/ ( B:<.( T:L ))', :alpha => "TODA-OLOBITIL");
Formula.create( :base => '180', :offset => '000', :subindex => '0', :ord => '1', :iform => '180.0', :word_form => 'abstract( "fish" ) ', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '180', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 180.0 }', :word_form => '{ fish }', :abbrev_form => '{ F }', :alpha => "F");
Formula.create( :base => '180', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 180.0 ):<.( 143.0 / 147.0 / 178.0.b )', :word_form => 'Fish:<.( head / body / tail )', :abbrev_form => 'F:<.( H / B / T )', :alpha => "FIHOBOT");
Formula.create( :base => '180', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 180.0 ).( 143.0 / 147.0 / 178.0.b )', :word_form => 'Fish.( head / body / tail )', :abbrev_form => 'F.( H / B / T )', :alpha => "FEHOBOT");
Formula.create( :base => '180', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 180.0 ).( 143.0 / 147.0 / 178.0.b )', :word_form => 'Fish.( head / body / tail )', :abbrev_form => 'F.( H / B / T )', :alpha => "HOBOTOF");
Formula.create( :base => '180', :offset => '001', :subindex => '0', :ord => '5', :iform => '18.1 / 111.1 / train( 1.1.c )', :word_form => 'Person-at-top / field / train( dot )', :abbrev_form => 'PAT / F / T( D )', :alpha => "PATOFOTOD");
Formula.create( :base => '180', :offset => '001', :subindex => 's', :ord => '1', :iform => '18.1 / 111.1 / 1.1.a', :word_form => 'Person-at-top / field / bar', :abbrev_form => 'PAT / F / B', :alpha => "PATOFOB");
Formula.create( :base => '180', :offset => '002', :subindex => '0', :ord => '1', :iform => '2.21.a * 180.1', :word_form => 'Side-water * fish', :abbrev_form => 'SW * F', :alpha => "SWAF");
Formula.create( :base => '180', :offset => '002', :subindex => '0', :ord => '2', :iform => '2.21.a * (( 180.0 ):<.( 143.0 / 147.0 / 178.0.b ))', :word_form => 'Side-water * ( Fish:<.( head / body / tail ))', :abbrev_form => 'SW * ( F:<.( H / B / T ))', :alpha => "SWAFIHOBOT");
Formula.create( :base => '180', :offset => '002', :subindex => '0', :ord => '3', :iform => '2.21.a * (( 180.0 ).( 143.0 / 147.0 / 178.0.b ))', :word_form => 'Side-water * ( Fish.( head / body / tail ))', :abbrev_form => 'SW * ( F.( H / B / T ))', :alpha => "SWAFEHOBOT");
Formula.create( :base => '180', :offset => '002', :subindex => '0', :ord => '4', :iform => '2.21.a * (( 180.0 ).( 143.0 / 147.0 / 178.0.b ))', :word_form => 'Side-water * ( Fish.( head / body / tail ))', :abbrev_form => 'SW * ( F.( H / B / T ))', :alpha => "SWAHOBOTOF");
Formula.create( :base => '180', :offset => '002', :subindex => '0', :ord => '5', :iform => '2.21.a * ( 18.1 / 111.1 / train( 1.1.c ))', :word_form => 'Side-water * ( Person-at-top / field / train( dot ))', :abbrev_form => 'SW * ( PAT / F / T( D ))', :alpha => "SWAPATOFOTOD");
Formula.create( :base => '180', :offset => '002', :subindex => 's', :ord => '1', :iform => '2.21.a * ( 18.1 / 111.1 / 1.1.a )', :word_form => 'Side-water * ( Person-at-top / field / bar )', :abbrev_form => 'SW * ( PAT / F / B )', :alpha => "SWAPATOFOB");
Formula.create( :base => '180', :offset => '003', :subindex => '0', :ord => '2', :iform => '(( 180.0 ):<.( 143.0 / 147.0 / 178.0.b )) / ( 68.1:->68.46 )', :word_form => '( Fish:<.( head / body / tail )) / ( mouth:->say )', :abbrev_form => '( F:<.( H / B / T )) / ( M:->S )', :alpha => "FIHOBOTOMYS");
Formula.create( :base => '180', :offset => '003', :subindex => '0', :ord => '3', :iform => '(( 180.0 ).( 143.0 / 147.0 / 178.0.b )) / ( 68.1:->68.46 )', :word_form => '( Fish.( head / body / tail )) / ( mouth:->say )', :abbrev_form => '( F.( H / B / T )) / ( M:->S )', :alpha => "FEHOBOTOMYS");
Formula.create( :base => '180', :offset => '003', :subindex => '0', :ord => '4', :iform => '(( 180.0 ).( 143.0 / 147.0 / 178.0.b )) / ( 68.1:->68.46 )', :word_form => '( Fish.( head / body / tail )) / ( mouth:->say )', :abbrev_form => '( F.( H / B / T )) / ( M:->S )', :alpha => "HOBOTOFOMYS");
Formula.create( :base => '180', :offset => '003', :subindex => '0', :ord => '5', :iform => '( 18.1 / 111.1 / train( 1.1.c )) / ( 68.1:->68.46 )', :word_form => '( Person-at-top / field / train( dot )) / ( mouth:->say )', :abbrev_form => '( PAT / F / T( D )) / ( M:->S )', :alpha => "PATOFOTODOMYS");
Formula.create( :base => '180', :offset => '003', :subindex => '0', :ord => '1', :iform => '180.1 / ( 68.1:->68.46 )', :word_form => 'fish / ( mouth:->say )', :abbrev_form => 'F / ( M:->S )', :alpha => "FOMYS");
Formula.create( :base => '180', :offset => '003', :subindex => 's', :ord => '1', :iform => '( 18.1 / 111.1 / 1.1.a ) / ( 68.1:->68.46 )', :word_form => '( Person-at-top / field / bar ) / ( mouth:->say )', :abbrev_form => '( PAT / F / B ) / ( M:->S )', :alpha => "PATOFOBOMYS");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '5', :iform => '(( 180.0 ):<.( 143.0 / 147.0 / 178.0.b )) * 108.1', :word_form => '( Fish:<.( head / body / tail )) * grain', :abbrev_form => '( F:<.( H / B / T )) * G', :alpha => "FIHOBOTAG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '7', :iform => '(( 180.0 ):<.( 143.0 / 147.0 / 178.0.b )) * ( 66.0:->108.0 )', :word_form => '( Fish:<.( head / body / tail )) * ( plant:->grain )', :abbrev_form => '( F:<.( H / B / T )) * ( P:->G )', :alpha => "FIHOBOTAPYG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '9', :iform => '(( 180.0 ).( 143.0 / 147.0 / 178.0.b )) * 108.1', :word_form => '( Fish.( head / body / tail )) * grain', :abbrev_form => '( F.( H / B / T )) * G', :alpha => "FEHOBOTAG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '11', :iform => '(( 180.0 ).( 143.0 / 147.0 / 178.0.b )) * ( 66.0:->108.0 )', :word_form => '( Fish.( head / body / tail )) * ( plant:->grain )', :abbrev_form => '( F.( H / B / T )) * ( P:->G )', :alpha => "FEHOBOTAPYG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '13', :iform => '(( 180.0 ).( 143.0 / 147.0 / 178.0.b )) * 108.1', :word_form => '( Fish.( head / body / tail )) * grain', :abbrev_form => '( F.( H / B / T )) * G', :alpha => "HOBOTOFAG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '15', :iform => '(( 180.0 ).( 143.0 / 147.0 / 178.0.b )) * ( 66.0:->108.0 )', :word_form => '( Fish.( head / body / tail )) * ( plant:->grain )', :abbrev_form => '( F.( H / B / T )) * ( P:->G )', :alpha => "HOBOTOFAPYG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '17', :iform => '( 18.1 / 111.1 / train( 1.1.c )) * 108.1', :word_form => '( Person-at-top / field / train( dot )) * grain', :abbrev_form => '( PAT / F / T( D )) * G', :alpha => "PATOFOTODAG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '19', :iform => '( 18.1 / 111.1 / train( 1.1.c )) * ( 66.0:->108.0 )', :word_form => '( Person-at-top / field / train( dot )) * ( plant:->grain )', :abbrev_form => '( PAT / F / T( D )) * ( P:->G )', :alpha => "PATOFOTODAPYG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '1', :iform => '180.1 * 108.1', :word_form => 'fish * grain', :abbrev_form => 'F * G', :alpha => "FAG");
Formula.create( :base => '180', :offset => '004', :subindex => '0', :ord => '3', :iform => '180.1 * ( 66.0:->108.0 )', :word_form => 'fish * ( plant:->grain )', :abbrev_form => 'F * ( P:->G )', :alpha => "FAPYG");
Formula.create( :base => '180', :offset => '004', :subindex => 's', :ord => '1', :iform => '( 18.1 / 111.1 / 1.1.a ) * 108.1', :word_form => '( Person-at-top / field / bar ) * grain', :abbrev_form => '( PAT / F / B ) * G', :alpha => "PATOFOBAG");
Formula.create( :base => '180', :offset => '004', :subindex => 's', :ord => '3', :iform => '( 18.1 / 111.1 / 1.1.a ) * ( 66.0:->108.0 )', :word_form => '( Person-at-top / field / bar ) * ( plant:->grain )', :abbrev_form => '( PAT / F / B ) * ( P:->G )', :alpha => "PATOFOBAPYG");
Formula.create( :base => '181', :offset => '000', :subindex => '0', :ord => '1', :iform => '181.0', :word_form => 'abstract( "rat" ) ', :abbrev_form => 'A( R )', :alpha => "AR");
Formula.create( :base => '181', :offset => '001', :subindex => '0', :ord => '1', :iform => '{ 181.0 }', :word_form => '{ rat }', :abbrev_form => '{ R }', :alpha => "R");
Formula.create( :base => '181', :offset => '001', :subindex => '0', :ord => '2', :iform => '( 181.0 ):<.(( 143.0 :[] 84.0.a ) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Rat:<.(( head :[] teeth ) / ( legs:^2 * tail ))', :abbrev_form => 'R.(( H :[] T ) / ( L:^2 * T ))', :alpha => "RIHETOLUTAT");
Formula.create( :base => '181', :offset => '001', :subindex => '0', :ord => '3', :iform => '( 181.0 ).(( 143.0 :[] 84.0.a ) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Rat.(( head :[] teeth ) / ( legs:^2 * tail ))', :abbrev_form => 'R.(( H :[] T ) / ( L:^2 * T ))', :alpha => "REHETOLUTAT");
Formula.create( :base => '181', :offset => '001', :subindex => '0', :ord => '4', :iform => '( 181.0 ).(( 143.0 :[] 84.0.a ) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Rat.(( head :[] teeth ) / ( legs:^2 * tail ))', :abbrev_form => 'R.(( H :[] T ) / ( L:^2 * T ))', :alpha => "HETOLUTATOR");
Formula.create( :base => '181', :offset => '001', :subindex => '0', :ord => '5', :iform => '131.3 / ( 15.65^2 * 3.1.b )', :word_form => 'Mortar / ( hand-at-left-side^2 * descend-yield-right-is-barbed )', :abbrev_form => 'M / ( HALS^2 * DYRIB )', :alpha => "MOHALSUTADYRIB");
Formula.create( :base => '181', :offset => '001', :subindex => '0', :ord => '6', :iform => '131.3 / (((( 4.1 ):<.( 5.0.a )) *stack( 1.1.c ))^2 * 3.1.b )', :word_form => 'Mortar / ((( post:<.( barb )) * stack( dot ))^2 * descend-yield-right-is-barbed )', :abbrev_form => 'M / ((( P:<.B ) * S( D ))^2 * DYRIB )', :alpha => "MOPIBASODUTADYRIB");
Formula.create( :base => '181', :offset => '001', :subindex => '0', :ord => '7', :iform => '131.3 / (( 5.1 * stack( 1.1.c ))^2 * 3.1.b )', :word_form => 'Mortar / (( post-is-barbed * stack( dot ))^2 * descend-yield-right-is-barbed )', :abbrev_form => 'M / (( PIB * S( D ))^2 * DYRIB )', :alpha => "MOPIBASODUTADYRIB");
Formula.create( :base => '181', :offset => '002', :subindex => '0', :ord => '1', :iform => '( 181.0 ):<.(( 2.3.b ) / (( 143.0 :[] 84.0.a ):->( 143.0.a [] 143.0.b )))', :word_form => 'Rat:<.( Fur-yield-bend-in-river / (( head :[] teeth ):->( skull :[] brain )))', :abbrev_form => 'R:<.( FYBIR / (( H :[] T ):->( S :[] B )))', :alpha => "RIFYBIROHETYSEB");
Formula.create( :base => '181', :offset => '002', :subindex => '0', :ord => '2', :iform => '( 181.0 ).(( 2.3.b ) / (( 143.0 :[] 84.0.a ):->( 143.0.a [] 143.0.b )) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Rat.( Fur-yield-bend-in-river / (( head :[] teeth ):->( skull :[] brain )) / ( legs:^2 * tail ))', :abbrev_form => 'R.( FYBIR / (( H :[] T ):->( S :[] B )) / ( L:^2 * T ))', :alpha => "REFYBIROHETYSEBOLUTAT");
Formula.create( :base => '181', :offset => '002', :subindex => '0', :ord => '3', :iform => '( 181.0 ).(( 2.3.b ) / (( 143.0 :[] 84.0.a ):->( 143.0.a [] 143.0.b )) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Rat.( Fur-yield-bend-in-river / (( head :[] teeth ):->( skull :[] brain )) / ( legs:^2 * tail ))', :abbrev_form => 'R.( FYBIR / (( H :[] T ):->( S :[] B )) / ( L:^2 * T ))', :alpha => "FYBIROHETYSEBOLUTATOR");
Formula.create( :base => '181', :offset => '007', :subindex => '0', :ord => '1', :iform => '63.2 / 181.1', :word_form => 'Cave / rat', :abbrev_form => 'C / R', :alpha => "COR");
Formula.create( :base => '181', :offset => '007', :subindex => '0', :ord => '2', :iform => '63.2 / ( 181.0 ):<.(( 143.0 :[] 84.0.a ) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Cave / Rat:<.(( head :[] teeth ) / ( legs:^2 * tail ))', :abbrev_form => 'C / R.(( H :[] T ) / ( L:^2 * T ))', :alpha => "CORIHETOLUTAT");
Formula.create( :base => '181', :offset => '007', :subindex => '0', :ord => '3', :iform => '63.2 / ( 181.0 ).(( 143.0 :[] 84.0.a ) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Cave / Rat.(( head :[] teeth ) / ( legs:^2 * tail ))', :abbrev_form => 'C / R.(( H :[] T ) / ( L:^2 * T ))', :alpha => "COREHETOLUTAT");
Formula.create( :base => '181', :offset => '007', :subindex => '0', :ord => '4', :iform => '63.2 / ( 181.0 ).(( 143.0 :[] 84.0.a ) / ( 11.0.a:^2 * 178.0.b ))', :word_form => 'Cave / Rat.(( head :[] teeth ) / ( legs:^2 * tail ))', :abbrev_form => 'C / R.(( H :[] T ) / ( L:^2 * T ))', :alpha => "COHETOLUTATOR");
Formula.create( :base => '181', :offset => '007', :subindex => '0', :ord => '5', :iform => '63.2 / ( 131.3 / ( 15.65^2 * 3.1.b ))', :word_form => 'Cave / ( Mortar / ( hand-at-left-side^2 * descend-yield-right-is-barbed ))', :abbrev_form => 'C / ( M / ( HALS^2 * DYRIB ))', :alpha => "COMOHALSUTADYRIB");
Formula.create( :base => '181', :offset => '007', :subindex => '0', :ord => '6', :iform => '63.2 / ( 131.3 / (((( 4.1 ):<.( 5.0.a )) *stack( 1.1.c ))^2 * 3.1.b ))', :word_form => 'Cave / ( Mortar / ((( post:<.( barb )) * stack( dot ))^2 * descend-yield-right-is-barbed ))', :abbrev_form => 'C / ( M / ((( P:<.B ) * S( D ))^2 * DYRIB ))', :alpha => "COMOPIBASODUTADYRIB");
Formula.create( :base => '181', :offset => '007', :subindex => '0', :ord => '7', :iform => '63.2 / ( 131.3 / ( 5.1 * stack( 1.1.c ))^2 * 3.1.b ))', :word_form => 'Cave / ( Mortar / (( post-is-barbed * stack( dot ))^2 * descend-yield-right-is-barbed ))', :abbrev_form => 'C / ( M / (( PIB * S( D ))^2 * DYRIB ))', :alpha => "COMOPIBASODUTADYRIB");
Formula.create( :base => '181', :offset => '007', :subindex => 's', :ord => '1', :iform => '63.2 / 157.1', :word_form => 'Cave / string-together', :abbrev_form => 'C / ST', :alpha => "COST");
Formula.create( :base => '181', :offset => '007', :subindex => 's', :ord => '2', :iform => '63.2 / 157.1', :word_form => 'Cave / string-of-objects', :abbrev_form => 'C / SOO', :alpha => "COSO-O");
Formula.create( :base => '181', :offset => '007', :subindex => 's', :ord => '3', :iform => '63.2 / ( Stack( 68.1 ) + ( 4.1.g ))', :word_form => 'Cave / ( stack( opening ) + string )', :abbrev_form => 'C / ( S( O ) + S )', :alpha => "COSO-OIS");
Formula.create( :base => '181', :offset => '007', :subindex => 's', :ord => '4', :iform => '63.2 / ( Stack( 68.1 ) + ( 4.1 ))', :word_form => 'Cave / ( stack( opening ) + post )', :abbrev_form => 'C / ( S( O ) + P )', :alpha => "COSO-OIP");
Formula.create( :base => '181', :offset => '007', :subindex => 's', :ord => '5', :iform => '63.2 / ( Stack( 68.0.b->68.0 ) + ( 4.1.g ))', :word_form => 'Cave / ( stack( object->mouth ) + string )', :abbrev_form => 'C / ( S( O->M ) + S )', :alpha => "COSO-OYMIS");
Formula.create( :base => '181', :offset => '007', :subindex => 's', :ord => '6', :iform => '63.2 / ( Stack( 68.0.b->68.0 ) + ( 4.1 ))', :word_form => 'Cave / ( stack( object->mouth ) + post )', :abbrev_form => 'C / ( S( O->M ) + P )', :alpha => "COSO-OYMIP");
Formula.create( :base => '182', :offset => '001', :subindex => '0', :ord => '1', :iform => '182.1', :word_form => '{ "stalks of grain in a field" }', :abbrev_form => 'E', :alpha => "E");
Formula.create( :base => '182', :offset => '001', :subindex => '0', :ord => '4', :iform => 'group( 108.0.a:->108.0 ) {}/ stack( 1.1.b )', :word_form => 'group( stalk:->grain ) {}/ stack( ground )', :abbrev_form => 'G( S:->G ) {}/ S( G )', :alpha => "GOSYGEOSOG");
Formula.create( :base => '182', :offset => '001', :subindex => '0', :ord => '7', :iform => 'group( 108.0.a:->108.0 ) {}/ 1.2', :word_form => 'group( stalk:->grain ) {}/ two', :abbrev_form => 'G( S:->G ) {}/ T', :alpha => "GOSYGEOT");
Formula.create( :base => '182', :offset => '001', :subindex => '0', :ord => '3', :iform => 'pile( 108.0.a:->108.0 ) {}/ stack( 1.1.b )', :word_form => 'pile( stalk:->grain ) {}/ stack( ground )', :abbrev_form => 'P( S:->G ) {}/ S( G )', :alpha => "POSYGEOSOG");
Formula.create( :base => '182', :offset => '001', :subindex => '0', :ord => '6', :iform => 'pile( 108.0.a:->108.0 ) {}/ 1.2', :word_form => 'pile( stalk:->grain ) {}/ two', :abbrev_form => 'P( S:->G ) {}/ T', :alpha => "POSYGEOT");
Formula.create( :base => '182', :offset => '001', :subindex => '0', :ord => '2', :iform => 'tripod( 108.0.a:->108.0 ) {}/ stack( 1.1.b )', :word_form => 'tripod( stalk:->grain ) {}/ stack( ground )', :abbrev_form => 'T( S:->G ) {}/ S( G )', :alpha => "TOSYGEOSOG");
Formula.create( :base => '182', :offset => '001', :subindex => '0', :ord => '5', :iform => 'tripod( 108.0.a:->108.0 ) {}/ 1.2', :word_form => 'tripod( stalk:->grain ) {}/ two', :abbrev_form => 'T( S:->G ) {}/ T', :alpha => "TOSYGEOT");
Formula.create( :base => '182', :offset => '001', :subindex => 's', :ord => '2', :iform => '(( 1.1.c / 1.1.a ) / 3.2 ) / ( 3.0.b ):( 3.0.c ) * 4.1 )', :word_form => '(( dot / dash ) / mow ) / ( fall:left * post )', :abbrev_form => '(( D / D ) / M ) / ( F:L * P )', :alpha => "DODOMOFILAP");
Formula.create( :base => '182', :offset => '001', :subindex => 's', :ord => '3', :iform => '(( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a )) / ( 3.0.b ):( 3.0.c ) * 4.1 )', :word_form => '(( dot / dash ) / ( fall:left + rev(  fall:left ))) / ( fall:left * post )', :abbrev_form => '(( D / D ) / ( F:L + R( F:L ))) / ( F:L * P )', :alpha => "DODOFILIROFILOFILAP");
Formula.create( :base => '182', :offset => '001', :subindex => 's', :ord => '1', :iform => '98.1 / ( 3.0.b ):( 3.0.c ) * 4.1 )', :word_form => 'Literature / ( fall:left * post )', :abbrev_form => 'L / ( F:L * P )', :alpha => "LOFILAP");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '1', :iform => '89.1.a * 182.1', :word_form => 'Side-hand * even', :abbrev_form => 'SH * E', :alpha => "SHA-E");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '2', :iform => '89.1.a * 182.1', :word_form => 'Side-hand * Stalks-of-grain-in-field', :abbrev_form => 'SH * SOGIF', :alpha => "SHASOGIF");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '3', :iform => '89.1.a * ( tripod( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => 'Side-hand * ( tripod( stalk:->grain ) {}/ stack( ground ))', :abbrev_form => 'SH * ( T( S:->G ) {}/ S( G )', :alpha => "SHATOSYGEOSOG");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '4', :iform => '89.1.a * ( pile( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => 'Side-hand * ( pile( stalk:->grain ) {}/ stack( ground ))', :abbrev_form => 'SH * ( P( S:->G ) {}/ S( G )', :alpha => "SHAPOSYGEOSOG");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '5', :iform => '89.1.a * ( group( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => 'Side-hand * ( group( stalk:->grain ) {}/ stack( ground )', :abbrev_form => 'SH * ( G( S:->G ) {}/ S( G ))', :alpha => "SHAGOSYGEOSOG");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '6', :iform => '89.1.a * ( tripod( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => 'Side-hand * ( tripod( stalk:->grain ) {}/ two )', :abbrev_form => 'SH * ( T( S:->G ) {}/ T )', :alpha => "SHATOSYGEOT");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '7', :iform => '89.1.a * ( pile( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => 'Side-hand * ( pile( stalk:->grain ) {}/ two )', :abbrev_form => 'SH * ( P( S:->G ) {}/ T )', :alpha => "SHAPOSYGEOT");
Formula.create( :base => '182', :offset => '002', :subindex => '0', :ord => '8', :iform => '89.1.a * ( group( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => 'Side-hand * ( group( stalk:->grain ) {}/ two )', :abbrev_form => 'SH * ( G( S:->G ) {}/ T )', :alpha => "SHAGOSYGEOT");
Formula.create( :base => '182', :offset => '002', :subindex => 's', :ord => '1', :iform => '89.1.a * ( 98.1 / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => 'Side-hand * ( Literature / ( fall:left * post ))', :abbrev_form => 'SH * ( L / ( F:L * P ))', :alpha => "SHALOFILAP");
Formula.create( :base => '182', :offset => '002', :subindex => 's', :ord => '2', :iform => '89.1.a * ((( 1.1.c / 1.1.a ) / 3.2 ) / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => 'Side-hand * ((( dot / dash ) / mow ) / ( fall:left * post ))', :abbrev_form => 'SH * ((( D / D ) / M ) / ( F:L * P ))', :alpha => "SHADODOMOFILAP");
Formula.create( :base => '182', :offset => '002', :subindex => 's', :ord => '3', :iform => '89.1.a * ((( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a )) / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => 'Side-hand * ((( dot / dash ) / ( fall:left + rev(  fall:left ))) / ( fall:left * post ))', :abbrev_form => 'SH * ((( D / D ) / ( F:L + R( F:L ))) / ( F:L * P ))', :alpha => "SHADODOFILIROFILOFILAP");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '1', :iform => '2.21.a * 182.1', :word_form => 'Side-water * even', :abbrev_form => 'SW * E', :alpha => "SWA-E");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '3', :iform => '2.21.a * 182.1', :word_form => 'Side-water * Stalks-of-grain-in-field', :abbrev_form => 'SW * SOGIF', :alpha => "SWASOGIF");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '5', :iform => '2.21.a * ( tripod( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => 'Side-water * ( tripod( stalk:->grain ) {}/ stack( ground ))', :abbrev_form => 'SW * ( T( S:->G ) {}/ S( G )', :alpha => "SWATOSYGEOSOG");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '7', :iform => '2.21.a * ( pile( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => 'Side-water * ( pile( stalk:->grain ) {}/ stack( ground ))', :abbrev_form => 'SW * ( P( S:->G ) {}/ S( G )', :alpha => "SWAPOSYGEOSOG");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '9', :iform => '2.21.a * ( group( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => 'Side-water * ( group( stalk:->grain ) {}/ stack( ground )', :abbrev_form => 'SW * ( G( S:->G ) {}/ S( G ))', :alpha => "SWAGOSYGEOSOG");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '11', :iform => '2.21.a * ( tripod( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => 'Side-water * ( tripod( stalk:->grain ) {}/ two )', :abbrev_form => 'SW * ( T( S:->G ) {}/ T )', :alpha => "SWATOSYGEOT");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '13', :iform => '2.21.a * ( pile( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => 'Side-water * ( pile( stalk:->grain ) {}/ two )', :abbrev_form => 'SW * ( P( S:->G ) {}/ T )', :alpha => "SWAPOSYGEOT");
Formula.create( :base => '182', :offset => '003', :subindex => '0', :ord => '15', :iform => '2.21.a * ( group( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => 'Side-water * ( group( stalk:->grain ) {}/ two )', :abbrev_form => 'SW * ( G( S:->G ) {}/ T )', :alpha => "SWAGOSYGEOT");
Formula.create( :base => '182', :offset => '003', :subindex => 's', :ord => '1', :iform => '2.21.a * ( 98.1 / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => 'Side-water * ( Literature / ( fall:left * post ))', :abbrev_form => 'SW * ( L / ( F:L * P ))', :alpha => "SWALOFILAP");
Formula.create( :base => '182', :offset => '003', :subindex => 's', :ord => '3', :iform => '2.21.a * ((( 1.1.c / 1.1.a ) / 3.2 ) / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => 'Side-water * ((( dot / dash ) / mow ) / ( fall:left * post ))', :abbrev_form => 'SW * ((( D / D ) / M ) / ( F:L * P ))', :alpha => "SWADODOMOFILAP");
Formula.create( :base => '182', :offset => '003', :subindex => 's', :ord => '5', :iform => '2.21.a * ((( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a )) / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => 'Side-water * ((( dot / dash ) / ( fall:left + rev(  fall:left ))) / ( fall:left * post ))', :abbrev_form => 'SW * ((( D / D ) / ( F:L + R( F:L ))) / ( F:L * P ))', :alpha => "SWADODOFILIROFILOFILAP");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '9', :iform => '( group( 108.0.a:->108.0 ) {}/ stack( 1.1.b )) * 35.1.a', :word_form => '( group( stalk:->grain ) {}/ stack( ground ) * Knife-at-right', :abbrev_form => '( G( S:->G ) {}/ S( G )) * KAR', :alpha => "GOSYGEOSOGAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '15', :iform => '( group( 108.0.a:->108.0 ) {}/ 1.2 ) * 35.1.a', :word_form => '( group( stalk:->grain ) {}/ two ) * Knife-at-right', :abbrev_form => '( G( S:->G ) {}/ T ) * KAR', :alpha => "GOSYGEOTAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '7', :iform => '( pile( 108.0.a:->108.0 ) {}/ stack( 1.1.b )) * 35.1.a', :word_form => '( pile( stalk:->grain ) {}/ stack( ground )) * Knife-at-right', :abbrev_form => '( P( S:->G ) {}/ S( G ) * KAR', :alpha => "POSYGEOSOGAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '13', :iform => '( pile( 108.0.a:->108.0 ) {}/ 1.2 ) * 35.1.a', :word_form => '( pile( stalk:->grain ) {}/ two ) * Knife-at-right', :abbrev_form => '( P( S:->G ) {}/ T ) * KAR', :alpha => "POSYGEOTAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '5', :iform => '( tripod( 108.0.a:->108.0 ) {}/ stack( 1.1.b )) * 35.1.a', :word_form => '( tripod( stalk:->grain ) {}/ stack( ground )) * Knife-at-right', :abbrev_form => '( T( S:->G ) {}/ S( G ) * KAR', :alpha => "TOSYGEOSOGAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '11', :iform => '( tripod( 108.0.a:->108.0 ) {}/ 1.2 ) * 35.1.a', :word_form => '( tripod( stalk:->grain ) {}/ two ) * Knife-at-right', :abbrev_form => '( T( S:->G ) {}/ T ) * KAR', :alpha => "TOSYGEOTAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '1', :iform => '182.1 * 35.1.a', :word_form => 'even * Knife-at-right', :abbrev_form => 'E * KAR', :alpha => "E-AKAR");
Formula.create( :base => '182', :offset => '004', :subindex => '0', :ord => '3', :iform => '182.1 * 35.1.a', :word_form => 'Stalks-of-grain-in-field * Knife-at-right', :abbrev_form => 'SOGIF * KAR', :alpha => "SOGIFAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => 's', :ord => '3', :iform => '((( 1.1.c / 1.1.a ) / 3.2 ) / ( 3.0.b ):( 3.0.c ) * 4.1 )) * 35.1.a', :word_form => '((( dot / dash ) / mow ) / ( fall:left * post )) * Knife-at-right', :abbrev_form => '((( D / D ) / M ) / ( F:L * P )) * KAR', :alpha => "DODOMOFILAPAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => 's', :ord => '5', :iform => '((( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a )) / ( 3.0.b ):( 3.0.c ) * 4.1 )) * 35.1.a', :word_form => '((( dot / dash ) / ( fall:left + rev(  fall:left ))) / ( fall:left * post )) * Knife-at-right', :abbrev_form => '((( D / D ) / ( F:L + R( F:L ))) / ( F:L * P )) * KAR', :alpha => "DODOFILIROFILOFILAPAKAR");
Formula.create( :base => '182', :offset => '004', :subindex => 's', :ord => '1', :iform => '( 98.1 / ( 3.0.b ):( 3.0.c ) * 4.1 )) * 35.1.a', :word_form => '( Literature / ( fall:left * post )) * Knife-at-right', :abbrev_form => '( L / ( F:L * P )) * KAR', :alpha => "LOFILAPAKAR");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '1', :iform => '( 132.1->80.1 ) * 182.1', :word_form => '( meat->moon ) * even', :abbrev_form => '( M->M ) * E', :alpha => "MYMAE");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '2', :iform => '( 132.1->80.1 ) * 182.1', :word_form => '( meat->moon ) * Stalks-of-grain-in-field', :abbrev_form => '( M->M ) * SOGIF', :alpha => "MYMASOGIF");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '3', :iform => '( 132.1->80.1 ) * ( tripod( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => '( meat->moon ) * ( tripod( stalk:->grain ) {}/ stack( ground ))', :abbrev_form => '( M->M ) * ( T( S:->G ) {}/ S( G )', :alpha => "MYMATOSYGEOSOG");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '4', :iform => '( 132.1->80.1 ) * ( pile( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => '( meat->moon ) * ( pile( stalk:->grain ) {}/ stack( ground ))', :abbrev_form => '( M->M ) * ( P( S:->G ) {}/ S( G )', :alpha => "MYMAPOSYGEOSOG");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '5', :iform => '( 132.1->80.1 ) * ( group( 108.0.a:->108.0 ) {}/ stack( 1.1.b ))', :word_form => '( meat->moon ) * ( group( stalk:->grain ) {}/ stack( ground )', :abbrev_form => '( M->M ) * ( G( S:->G ) {}/ S( G ))', :alpha => "MYMAGOSYGEOSOG");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '6', :iform => '( 132.1->80.1 ) * ( tripod( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => '( meat->moon ) * ( tripod( stalk:->grain ) {}/ two )', :abbrev_form => '( M->M ) * ( T( S:->G ) {}/ T )', :alpha => "MYMATOSYGEOT");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '7', :iform => '( 132.1->80.1 ) * ( pile( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => '( meat->moon ) * ( pile( stalk:->grain ) {}/ two )', :abbrev_form => '( M->M ) * ( P( S:->G ) {}/ T )', :alpha => "MYMAPOSYGEOT");
Formula.create( :base => '182', :offset => '005', :subindex => '0', :ord => '8', :iform => '( 132.1->80.1 ) * ( group( 108.0.a:->108.0 ) {}/ 1.2 )', :word_form => '( meat->moon ) * ( group( stalk:->grain ) {}/ two )', :abbrev_form => '( M->M ) * ( G( S:->G ) {}/ T )', :alpha => "MYMAGOSYGEOT");
Formula.create( :base => '182', :offset => '005', :subindex => 's', :ord => '1', :iform => '( 132.1->80.1 ) * ( 98.1 / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => '( meat->moon ) * ( Literature / ( fall:left * post ))', :abbrev_form => '( M->M ) * ( L / ( F:L * P ))', :alpha => "MYMALOFILAP");
Formula.create( :base => '182', :offset => '005', :subindex => 's', :ord => '2', :iform => '( 132.1->80.1 ) * ((( 1.1.c / 1.1.a ) / 3.2 ) / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => '( meat->moon ) * ((( dot / dash ) / mow ) / ( fall:left * post ))', :abbrev_form => '( M->M ) * ((( D / D ) / M ) / ( F:L * P ))', :alpha => "MYMADODOMOFILAP");
Formula.create( :base => '182', :offset => '005', :subindex => 's', :ord => '3', :iform => '( 132.1->80.1 ) * ((( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a )) / ( 3.0.b ):( 3.0.c ) * 4.1 ))', :word_form => '( meat->moon ) * ((( dot / dash ) / ( fall:left + rev(  fall:left ))) / ( fall:left * post ))', :abbrev_form => '( M->M ) * ((( D / D ) / ( F:L + R( F:L ))) / ( F:L * P ))', :alpha => "MYMADODOFILIROFILOFILAP");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '5', :iform => '( group( 108.0.a:->108.0 ) {}/ stack( 1.1.b )) {}#/ 1.46', :word_form => '( group( stalk:->grain ) {}/ stack( ground ) {}#/ revelation', :abbrev_form => '( G( S:->G ) {}/ S( G )) {}#/ R', :alpha => "GOSYGEOSOGEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '8', :iform => '( group( 108.0.a:->108.0 ) {}/ 1.2 ) {}#/ 1.46', :word_form => '( group( stalk:->grain ) {}/ two ) {}#/ revelation', :abbrev_form => '( G( S:->G ) {}/ T ) {}#/ R', :alpha => "GOSYGEOTEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '4', :iform => '( pile( 108.0.a:->108.0 ) {}/ stack( 1.1.b )) {}#/ 1.46', :word_form => '( pile( stalk:->grain ) {}/ stack( ground )) {}#/ revelation', :abbrev_form => '( P( S:->G ) {}/ S( G ) {}#/ R', :alpha => "POSYGEOSOGEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '7', :iform => '( pile( 108.0.a:->108.0 ) {}/ 1.2 ) {}#/ 1.46', :word_form => '( pile( stalk:->grain ) {}/ two ) {}#/ revelation', :abbrev_form => '( P( S:->G ) {}/ T ) {}#/ R', :alpha => "POSYGEOTEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '3', :iform => '( tripod( 108.0.a:->108.0 ) {}/ stack( 1.1.b )) {}#/ 1.46', :word_form => '( tripod( stalk:->grain ) {}/ stack( ground )) {}#/ revelation', :abbrev_form => '( T( S:->G ) {}/ S( G ) {}#/ R', :alpha => "TOSYGEOSOGEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '6', :iform => '( tripod( 108.0.a:->108.0 ) {}/ 1.2 ) {}#/ 1.46', :word_form => '( tripod( stalk:->grain ) {}/ two ) {}#/ revelation', :abbrev_form => '( T( S:->G ) {}/ T ) {}#/ R', :alpha => "TOSYGEOTEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '1', :iform => '182.1 {}#/ 1.46', :word_form => 'even {}#/ revelation', :abbrev_form => 'E {}#/ R', :alpha => "E-EOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => '0', :ord => '2', :iform => '182.1 {}#/ 1.46', :word_form => 'Stalks-of-grain-in-field {}#/ revelation', :abbrev_form => 'SOGIF {}#/ R', :alpha => "SOGIFEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => 's', :ord => '2', :iform => '((( 1.1.c / 1.1.a ) / 3.2 ) / ( 3.0.b ):( 3.0.c ) * 4.1 )) {}#/ 1.46', :word_form => '((( dot / dash ) / mow ) / ( fall:left * post )) {}#/ revelation', :abbrev_form => '((( D / D ) / M ) / ( F:L * P )) {}#/ R', :alpha => "DODOMOFILAPEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => 's', :ord => '3', :iform => '((( 1.1.c / 1.1.a ) / ( 3.1 + 3.1.a )) / ( 3.0.b ):( 3.0.c ) * 4.1 )) {}#/ 1.46', :word_form => '((( dot / dash ) / ( fall:left + rev(  fall:left ))) / ( fall:left * post )) {}#/ revelation', :abbrev_form => '((( D / D ) / ( F:L + R( F:L ))) / ( F:L * P )) {}#/ R', :alpha => "DODOFILIROFILOFILAPEOLOR");
Formula.create( :base => '182', :offset => '006', :subindex => 's', :ord => '1', :iform => '( 98.1 / ( 3.0.b ):( 3.0.c ) * 4.1 )) {}#/ 1.46', :word_form => '( Literature / ( fall:left * post )) {}#/ revelation', :abbrev_form => '( L / ( F:L * P )) {}#/ R', :alpha => "LOFILAPEOLOR");
Formula.create( :base => '183', :offset => '000', :subindex => '0', :ord => '1', :iform => '183.0', :word_form => 'abstract( "fork" ) ', :abbrev_form => 'A( F )', :alpha => "AF");
Formula.create( :base => '183', :offset => '001', :subindex => '0', :ord => '2', :iform => '{ 183.0 | 176.0 }', :word_form => '{ fork | branch }', :abbrev_form => '{ F | B }', :alpha => "FOB");
Formula.create( :base => '183', :offset => '001', :subindex => '0', :ord => '1', :iform => '183.1', :word_form => '{ "fork" | "branch" }', :abbrev_form => 'F', :alpha => "F");
